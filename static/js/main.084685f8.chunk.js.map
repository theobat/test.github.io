{"version":3,"sources":["util/apollo/operation/index.ts","util/apollo/operation/operation.ts","../ /^/.//.*//messages/.po$/ groupOptions: {} namespace object","locales lazy /^/.//.*//messages/.js$/ groupOptions: {} namespace object","fe/session/anon.generated.tsx","graphql/types.generated.ts","mn-constants.tsx","apollo/uploadLink.js","HOC/pages/user/UserPage.generated.tsx","apollo/client.tsx","ui/themes/default.theme.ts","ui/styleguide/Wrapper.tsx","fe/lib/graphql/ctx.ts","fe/session/me.generated.tsx","fe/session/useMe.ts","HOC/context/SideBar.tsx","util/keyvaluestore/localSessionStorage.ts","context/global/localizationCtx.tsx","ui/themes/styled.ts","ui/elements/Loader/index.tsx","ui/elements/Button/index.tsx","ui/elements/Logo/index.tsx","ui/elements/Panel/index.tsx","ui/pages/login/index.tsx","fe/session/useAnon.ts","context/global/pageCtx.tsx","HOC/pages/login/LoginPage.tsx","routes/wrappers/RedirectBySession.tsx","routes/lib/helper.tsx","routes/LoginPageRoute.tsx","HOC/lib/notifyMustLogin.tsx","HOC/modules/SearchBox/SearchBox.tsx","ui/elements/Avatar/index.tsx","ui/modules/Dropdown/index.tsx","ui/modules/MainHeader/dropdown.tsx","ui/modules/MainHeader/index.tsx","ui/modules/Modal/index.tsx","HOC/lib/formik-validations.ts","HOC/modules/EconomicEventManager/EconomicEventManager.generated.tsx","fe/location/add/useAddLocation.generated.tsx","fe/location/add/useAddLocation.tsx","ui/modules/CreateCollectionPanel/style.ts","ui/modules/EconomicEventManager/styles.ts","ui/elements/LocationPiker/index.tsx","ui/elements/Alert/index.tsx","ui/elements/Input/index.tsx","ui/elements/Map/index.tsx","ui/elements/LocationPanel/index.tsx","HOC/modules/CreateLocationPanel/CreateLocationPanelHOK.tsx","fe/resource/create/useCreateResource.generated.tsx","fe/resource/create/useCreateResource.ts","ui/elements/CustomSelect/index.tsx","ui/elements/CustomSelect/select.ts","ui/modules/DropzoneModal/index.tsx","ui/modules/CreateResourcePanel/index.tsx","fe/resourceDefault/useCreateResource.generated.tsx","HOC/modules/IntentPanel/Actions.generated.tsx","HOC/modules/EconomicEventManager/EconomicEventManagerHOC.tsx","HOC/modules/CreateResourcePanel/CreateResourcePanelHOC.tsx","fe/intent/create/useCreateIntent.generated.tsx","fe/intent/create/useCreateIntent.ts","ui/modules/CreateIntentPanel/index.tsx","HOC/modules/CreateIntentPanel/createIntentPanelHOC.tsx","HOC/modules/Header/Header.tsx","ui/templates/guest.tsx","HOC/templates/Guest/Guest.tsx","HOC/pages/user/create/useCreateUser.tsx","ui/pages/createNewUser/index.tsx","HOC/pages/createNewUser/CreateNewUserHOC.tsx","routes/CreateNewUserRoute.tsx","ui/pages/confirmEmail/index.tsx","HOC/pages/confirmEmail/ConfirmEmailPage.tsx","routes/ConfirmEmailPageRoute.tsx","ui/pages/createNewPassword/index.tsx","HOC/pages/createNewPassword/CreateNewPassword.tsx","routes/CreateNewPasswordPageRoute.tsx","ui/elements/Layout/index.tsx","ui/modules/Loadmore/index.tsx","ui/pages/discover/index.tsx","HOC/pages/discover/DiscoverPage.tsx","ui/modules/Sidebar/index.tsx","ui/pages/home/index.tsx","HOC/pages/home/HomeHoc.tsx","fe/activities/inbox/my/useMyInboxActivities.ts","ui/pages/notFound/index.tsx","HOC/pages/not-found/NotFound.tsx","routes/HomePageRoute.tsx","HOC/modules/Sidebar/Sidebar.tsx","ui/modules/Burger/index.tsx","ui/templates/withSidebar.tsx","ui/elements/Layout/comment.tsx","ui/modules/HeroUser/index.tsx","fe/user/useUser.generated.tsx","fe/user/useUserById.ts","HOC/modules/HeroUser/HeroUser.tsx","ui/pages/user/index.tsx","ui/modules/Resource/PrimaryAccountablePerson/index.tsx","ui/pages/resource/index.tsx","util/constants/pagination.ts","ui/pages/inventory/index.tsx","ui/modules/Filter/index.tsx","HOC/pages/resource/EconomicResource.generated.tsx","HOC/pages/inventory/InventoryPage.generated.tsx","ui/modules/ActivityPreview/index.tsx","HOC/pages/inventory/InventoryPage.tsx","util/main.ts","HOC/pages/user/UserPage.tsx","routes/UserPageRoute.tsx","HOC/templates/WithSidebar/WithSidebar.tsx","routes/DiscoverPageRoute.tsx","fe/resource/create/useCreateEventOnResource.ts","ui/modules/CreateEventOnResourcePanel/index.tsx","HOC/modules/EconomicEventOnResourcePanel/CreateEconomicEventOnResourcePanelHOC.tsx","ui/modules/UpdateResourcePanel/index.tsx","fe/resource/update/useUpdateResource.generated.tsx","fe/resource/update/useUpdateResource.ts","HOC/modules/EconomicEventOnResourcePanel/UpdateEconomicResourceHOC.tsx","HOC/pages/resource/EconomicResourceHOK.tsx","routes/InventoryResourceItemRouter.tsx","ui/pages/maps/index.tsx","HOC/pages/map/MapPageQuery.ts","HOC/pages/map/MapPage.tsx","routes/MapsPageRoute.tsx","ui/pages/resetPassword/index.tsx","HOC/pages/resetPasswordRequest/resetPasswordRequestPage.tsx","routes/ResetPasswordPageRoute.tsx","ui/pages/settings/index.tsx","HOC/pages/settings/SettingsPage.tsx","ui/pages/settings/preferences.tsx","HOC/pages/settings/preferences/PreferencesSettingsSection.tsx","ui/modules/UpdatePasswordPanel/UpdatePasswordPanelUI.tsx","HOC/modules/UpdatePasswordPanel/UpdatePasswordPanelHOK.tsx","HOC/pages/user/update/useUpdateUser.tsx","ui/templates/withoutSidebar.tsx","HOC/templates/WithoutSidebar/WithoutSidebar.tsx","routes/SettingsPageRoute.tsx","ui/pages/signUp/index.tsx","HOC/pages/signUp/SignUpPage.tsx","routes/SignupPageRoute.tsx","containers/App/Router.tsx","containers/App/topMessage.tsx","containers/App/App.tsx","context/global/algolia.tsx","context/global/index.tsx","registerServiceWorker.js","index.tsx"],"names":["ApolloLink","getOpType","op","maybeOpDefNode","query","definitions","find","def","kind","name","value","operationName","operation","getOperationNameAndType","filter","reduce","found","opDefNode","maybeFieldNode","selectionSet","selections","selNode","opType","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","ResetPwdDocument","gql","ChangePasswordDocument","UpdateLostPasswordDocument","AnonLoginDocument","RequestConfirmEmailDocument","ConfirmEmailDocument","AnonSignUpDocument","AgentType","TimeUnit","PHOENIX_SOCKET_ENDPOINT","process","REACT_APP_PHOENIX_SOCKET_ENDPOINT","GRAPHQL_ENDPOINT","INVITE_ONLY_TEXT","parseInt","REACT_APP_DEFAULT_PAGE_SIZE","REACT_APP_INVITE_ONLY_TEXT","logo_small_url","locales","desc","rtl","mothershipAppId","REACT_APP_MOTHERSHIP_API_ID","mothershipApiKey","REACT_APP_MOTHERSHIP_API_KEY","mothershipEnv","REACT_APP_MOTHERSHIP_ENV","mothershipCreds","appId","apiKey","indexName","searchDisabled","colors","typography","primary","s1","s2","s3","m1","m2","m3","l1","l2","l3","GraphQLError","require","Observable","selectURI","selectHttpOptionsAndBody","fallbackHttpConfig","serializeFetchParameter","createSignalIfSupported","parseAndCheckHttpResponse","extractFiles","setPath","path","i","parts","trim","split","length","createUploadLink","uri","fetchUri","fetch","linkFetch","fetchOptions","credentials","headers","includeExtensions","linkConfig","http","options","context","getContext","clientAwareness","version","contextConfig","body","clone","files","size","form","FormData","append","forEach","paths","String","JSON","stringify","variables","file","observer","abortController","signal","controller","response","setContext","result","next","complete","catch","error","errors","data","abort","CreateUserDocument","UpdateUserDocument","initialise","a","localKVStore","appLinks","authToken","get","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","cache","InMemoryCache","cacheRedirects","Query","activity","_","args","getCacheKey","__typename","activityId","collection","collectionId","community","communityId","comment","commentId","user","userId","thread","threadId","resource","resourceId","dataIdFromObject","obj","defaultDataIdFromObject","setToken","token","set","delToken","undefined","del","setTokenLink","nextLink","resp","login","confirmEmail","accountId","resetPassword","authLink","authorization","errorLink","onError","errorResponse","graphQLErrors","networkError","message","HttpStatus","getStatusText","statusCode","of","unexpectedError","err","test","respStr","clientAwarenessHeadersLinkForNonApollo3Server","ctx","ALLOWED_ANONYMOUS_MUTATIONS","alertBlockMutationsForAnonymousLink","includes","httpLink","from","Boolean","absintheSocket","createAbsintheSocketLink","AbsintheSocket","PhoenixSocket","link","hasSubscription","client","ApolloClient","defaultOptions","watchQuery","fetchPolicy","errorPolicy","mutate","theme","breakpoints","app","appInverse","secondary","tertiary","positive","negative","warning","lightest","lighter","light","mediumlight","medium","mediumdark","dark","darker","darkest","border","variants","bg","color","avatar","borderRadius","text","subhead","fontFamily","fontSize","textTransform","letterSpacing","fontWeight","suptitle","heading","buttons","height","px","backgroundColor","cursor","danger","outline","space","ThemeProvider","children","moodlenet","defaultErrorMsg","errorMsg","join","defaultSuccessMsg","notify","content","toast","mnCtx","opts","forward","noShowSuccess","successMsg","noShowError","type","notifyGqlResponse","UseMeDataFragmentDoc","MeDocument","MeQueryRefetch","useMe","baseOptions","meQ","ApolloReactHooks","useMemo","me","loading","SideBarContext","createContext","isOpen","toggleOpen","ProvideSideBarContext","useReducer","is","Provider","createLocalSessionKVStorage","prefix","storage","localStorage","sessionStorage","pkey","key","parse","getItem","val","setItem","serialize","removeItem","str","console","warn","kvstore","savedLangCode","defaultLocale","available","locale","i18n","setupI18n","LocaleContext","current","ProvideLocalizationCtx","useState","setCurrent","catalogs","setCatalogs","useEffect","setHTMLDirection","loadCatalog","cat","useCallback","localeCode","Settings","localeContextValue","language","RTL","htmlEl","document","querySelector","dir","style","direction","classList","remove","add","styled","styledComponents","Bounce","Box","props","Loader","className","variant","WrapperButton","Button","transitions","isIcon","disabled","media","lessThan","darken","lighten","MNButton","width","fullWidth","isSubmitting","isDisabled","LogoContainer","React","useContext","Header","isHome","to","Tagline","div","Logo","h5","WrapperPanel","Flex","Panel","PanelTitle","Text","Nav","NavItem","tt","i18nMark","placeholders","email","password","Login","formik","Container","LoginWrapper","FormWrapper","FormLogin","LoginForm","p","onSubmit","handleSubmit","placeholder","values","onChange","handleChange","Spacer","mt","onClick","submitForm","ResetPass","my","Or","Browse","Right","mb","Background","Infos","Info","hostname","useAnon","history","useHistory","updateMe","proxy","writeQuery","loginMut","loginStatus","GQL","confirmEmailMut","confirmEmailStatus","requestConfirmEmailMut","requestConfirmEmailStatus","resetPwd","resetPwdStatus","changePwd","changePwdStatus","signUpMut","signUpStatus","updateLostPassword","updateLostPasswordStatus","refetchQueries","update","logout","clear","push","called","resetPwdRequest","url","updatePassword","passwordConfirmation","changePwdRequest","oldPassword","signUp","registration","PageCtx","setTitle","ProvidePageCtx","subTitle","setSubTitle","subTitleToSet","nextSubTitle","title","Helmet","usePageTitle","validationSchema","Yup","max","required","loginPageTitle","LoginPageHOC","params","useRouteMatch","useFormik","initialValues","enableReinitialize","currentUser","currentAccountId","RedirectAuthenticated","RedirectAuthenticatedToHome","RedirectAnonymous","RedirectAnonymousToLogin","locationHelper","routeProps","routePaths","getPath","index","usePath","searchParams","URLSearchParams","toString","generatePath","matchPath","getSimpleLink","actor","internal","isLocal","internalPath","canonicalUrl","simpleLink","external","LoginPageRoute","exact","component","match","withoutHeader","loginLocation","defaultOpts","useCallOrNotifyMustLogin","_fn","deps","fn","useNotifyMustLogin","loggedIn","SearchBox","sizes","default","s","m","l","Wrapper","Avatar","src","initials","substr","toUpperCase","Dropdown","orientation","close","onOutsideClick","List","lined","Item","DropdownSidebar","userLink","toggleDropdown","href","target","strokeWidth","CreateDropdown","createIntent","createResource","MainHeader","isCreateOpen","toggleCreate","HeaderWrapper","Left","Icon","goBack","HomeLink","Search","CreateNav","sx","position","alignItems","HeaderName","ml","substring","icon","isOpenDropdown","Signin","ellipsis","Link","AlertWrapper","Dialog","Action","clearFix","Close","Content","Actions","ActionsSimple","CounterChars","ContainerForm","Row","big","Portal","el","display","ReactDOM","createPortal","this","Component","_el","createElement","setAttribute","appendChild","Modal","closeModal","handleCloseModal","TestUrlOrFile","File","SpatialThingsPagesDocument","useSpatialThingsPagesQuery","UnitsPagesDocument","useUnitsPagesQuery","CreateSpatialThingDocument","useAddLocation","createSpatialThing","createSpatialThingStatus","createLocation","lat","long","note","SpatialThingsPagesQueryRefetch","CollectionContainerForm","FlexBetweenContainer","HeroInfo","Hero","Description","FormGroup","FormLabel","LocationPiker","onSelect","WrapperSelect","selectProps","address","geocodeByAddress","label","results","formatted_address","geometry","location","lng","classNamePrefix","onLoadFailed","Alert","CustomInput","readOnly","hint","class","FieldWrapper","htmlFor","CustomAlert","mapPin","ReactDOMServer","renderToString","fill","markerIcon","divIcon","html","iconSize","Map","center","zoom","markers","tileAttribution","mapCenter","LatLngBounds","getCenter","TileLayer","attribution","popup","Marker","Popup","LocationPanel","showLocationPanel","setShowLocationData","preventDefault","Input","CreateLocationPanelHOC","min","summary","done","SignupSchema","shape","CreateResourcePanelProps","validateOnChange","validateOnBlur","success","transition","Slide","autoClose","hideProgressBar","closeOnClick","pauseOnHover","log","CreateEconomicEventAndNewResourceDocument","CreateEconomicEventAndExistResourceDocument","useCreateResource","createResourceMut","createResourceMutStatus","create","eventNote","hasPointInTime","action","atLocation","provider","receiver","hasUnit","hasNumericalValue","image","Select","CustomSelect","onInputChange","components","noChange","openMenuOnClick","setIsOpen","optionsList","displayUsername","option","isOptionDisabled","isLoading","isClearable","isRtl","isSearchable","menuIsOpen","onFocus","onBlur","setSelectOption","arr","getLabel","element","template","variable","replace","DropzoneArea","initialUrl","uploadType","onFileSelect","filePattern","fileUrl","setFileUrl","currentFile","setCurrentFile","URL","revokeObjectURL","useDropzone","accept","onDrop","acceptedFiles","localUrl","createObjectURL","getRootProps","getInputProps","isDragActive","InfoContainer","Thumb","WrapperIcon","Img","backgroundImage","indexOf","FileThumb","FileName","WrapperFile","CreateResourcePanel","unitPages","actionList","spatialThings","providerList","receiverList","toggleCreateLocation","setAction","providerArr","setProviderArr","receiverArr","setReceiverArr","unitLst","setUnitLst","Date","startDate","setStartDate","onIconFileSelected","setValues","unit","symbol","toISOString","edges","initialIconUrl","DropdownIndicator","newList","item","toLowerCase","padding","selected","date","dateFormat","LocationBlockStyle","marginLeft","AgentsDocument","ActionsDocument","EconomicEventManagerHOC","intentActionsQ","useAgentsQuery","unitPagesQ","intentActions","actions","unitsPages","economicEventManager","agents","childrenWithProps","child","CreateResourcePanelHOC","spatialThingsPages","notOneOf","currentLocation","newId","createEconomicEvent","economicResource","redirect","CreateOfferDocument","useCreateIntent","createOfferMut","createOfferMutStatus","CreateIntentPanel","cancel","CreateIntentPanelHOC","createIntentPanelProps","MainHeaderHOC","notifiedMustLogin","showCreateLocation","toggleShowCreateLocation","showCreateIntent","toggleShowCreateIntent","showCreateResource","toggleShowCreateResource","CreateIntentModal","CreateResourceModal","toggleSideBar","headerProps","profile","character","username","Guest","HeaderBox","Page","SearchBar","greaterThan","GuestTemplate","useCreateUser","createUserQ","createStatus","profileName","userName","CreateNewUserPage","Aware","mr","LabelStyled","TextareaStyled","css","justifyContent","LinkWrapper","Textarea","green","createUserPageTitle","CreateNewUserHOC","notifyNotLogged","regInput","userData","createUser","CreateNewUserRoute","ConfirmEmail","marginTop","confirmEmailPageTitle","ConfirmEmailPage","welcomeUsername","setTimeout","ConfirmEmailRoute","passwordConfirm","CreateNewPassword","oneOf","createNewPasswordPageTitle","CreateNewPasswordPageHOC","CreateNewPasswordPageRoute","MainContainer","HomeBox","WrapperCont","MenuItem","NavLink","MenuList","ButtonIcon","LoadMore","LoadMoreFormik","DiscoverPageTabs","Discover","ActivitiesBox","FeaturedCommunitiesBox","FeaturedCollectionsBox","CollectionsBoxes","CommunitiesBoxes","tabPaths","WrapperFeatured","timeline","UsersIcon","Menu","Title","Status","discoverActivitiesPageTitle","DiscoverPage","basePath","tab","discovberPageTitle","Activities","propsUI","discoverLocation","SidebarComponent","InternalWrapper","SidebarFixed","SidebarOverflow","SidebarLink","isActive","ItemTitle","ItemTitleDir","Sidebar","isSidebarOpen","status","Loading","discoverPath","homePath","Home","InboxElements","homeMyTimelinePageTitle","HomePageHOC","activitiesPage","userActivityEdge","homeProps","NotFound","textAlign","aria-label","role","notFoundPageTitle","NotFoundHOC","HomePageRoute","homeLocation","SidebarHOC","StatusUI","Loaded","Burger","open","setOpen","StyledBurger","Side","userImage","signOut","StyledMenu","Profile","Username","RightMenuWrapper","Span","CreateMenuSpan","Communities","Bottom","User","span","button","nav","WithSidebar","SidebarBox","Footer","FootWrapper","Bavatar","Comment","MDComment","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","HeroUser","ProfileBox","HeroBg","FlexProfile","WrapperHero","HeroAction","following","toggleFollowFormik","HeroTitle","isAdmin","AdminBadge","Location","HeroUserUserDataFragmentDoc","UserDataBiIdDocument","useUserById","isMe","users","isFlagging","toggleFlagging","FlagModal","userHeroProps","loadedProps","flag","ActivityIcon","PackageIcon","userInfo","HeroUserBox","ActivityBoxes","InventoryBoxes","totalCommunities","totalCollections","totalUsers","loadMoreActivities","rel","TextLink","flex","pt","PersonWrapper","ArrowDownIcon","ArrowUpIcon","MapIcon","BoxIcon","PenIcon","EditIcon","UserIcon","ClockIcon","EyeIcon","Calendar","QRCode","ResourceItem","openEditModal","openUpdateResourceModal","openDeleteResourceModal","window","first","second","showList","setShowList","ActionsWrapper","InventoryWrapper","LeftColWrapper","ImageWrapper","alt","QRCodeWrapper","InfoWrapper","onhandQuantity","primaryAccountable","track","trace","TrackWrapper","Badge","toResourceInventoriedAs","format","resourceQuantity","resourceInventoriedAs","containedIn","contains","lot","stage","trackingIdentifier","unitOfEffort","ASC","Inventory","inventory","owner","currentList","setCurrentList","currentPage","setCurrentPage","slice","ButtonWrapper","CreateItemButton","WrapperLink","PaginationWrapper","totalItems","pageSize","page","maxPaginationNumbers","defaultActivePage","previousPageText","paddingBottom","ArrowUp","ArrowDown","FilterIcon","ClearIcon","Filter","filterSet","triggerOpen","onClear","handleSorting","event","buttonName","currentTarget","sort","order","FilterButton","FilterWrapper","SortButton","SortButtonInner","search","FormGroupChek","LabelCustom","checked","ClearButton","Label","OnhandQuantityFragmentDoc","ResourceQuantityFragmentDoc","EconomicResourceDocument","EconomicResourceQueryRefetch","EconomicResourcesFilteredDocument","queryString","INITIAL_FILTER","InventoryPage","triggerTab","useLocation","pathname","setFilter","queryStringGetter","agent","economicResourcesFiltered","filteredInventory","setFilteredInventory","b","reverse","checkFilter","newInventory","queryStringSetter","notEmptyObj","notEmptyValue","prop","isClear","prev","UserPageTab","ActivityPreview","userActivity","FeedItem","activityItem","Contents","object","verb","verbDisplay","SmallActorComp","subjectId","Member","MemberInfo","Name","TextEvent","UserPage","userPageProps","LikesBoxes","userActivities","CommunityBoxes","UserBoxes","UserPageRoute","maybeTabStr","Starred","Collections","Following","userIdentificatior","userLocation","WithSidebarTemplate","withSidebarProps","DiscoverPageRoute","useCreateEventOnResource","CreateEventOnResourcePanel","marginBottom","CreateEconomicEventOnResourcePanelHOC","CreateEventOnResourcePanelProps","toggleTab","CreateEventOnExistResourceModal","switchOn","toggleSwitch","TabController","Switcher","UpdateResourcePanel","UpdateEconomicResourceDocument","useUpdateResource","updateResourceMut","updateResourceMutStatus","UpdateEconomicResourceHOC","UpdateResourcePanelProps","EconomicResourceHOK","showUpdateResource","toggleShowUpdateResource","PerformEventModal","EditResourceModal","InventoryResourceItemRouter","Maps","proposedIntents","hasLatLong","proposal","eligibleLocation","geom","MapPageHOC","useApolloClient","setMarkers","proposalsFiltered","coordinates","MapsPageRoute","ResetPassword","isSubmitted","VerifiedBox","ButtonLink","resetPasswordPageTitle","ResetPasswordPageHOC","submitCount","ResetPasswordPageRoute","displayName","SettingsPageTab","Preferences","sectionPaths","toggleUpdatePasswordModal","userProfile","onImageFileSelected","initialImageUrl","SettingsWrapper","preferences","general","pb","Bg","RepoLink","SectionTitle","LanguageSelect","defaultValue","selectedCode","selection","Array","isArray","setLocale","moodleWebsite","matches","PreferencesSettingsSection","extraInfo","LMS","site","localesOptions","currentOption","UpdatePasswordPanelUI","touched","UpdatePasswordPanelHOK","onCancel","updatePasswordPaneProps","useUpdateUser","updateUserQ","updateStatus","preparedData","fileExe","method","json","detail","settingsPreferencesPageTitle","settingsGeneralPageTitle","SettingsPage","settingsPageTitle","updateProfileFormik","updateUser","steIsOpen","settingsPageProps","settingsLocation","WithoutSidebar","CenteredWrapper","WithoutSidebarTemplate","withoutSidebarProps","SettingsPageRoute","ModerationLogs","Invites","Instance","Flags","General","SignUpPage","registeredUserID","registeredEmail","signUpPageTitle","SignUpPageHOC","signup","SignupPageRoute","Router","TopMessage","show","setShow","AlertWrap","top","right","App","createURL","searchState","qs","searchClient","algoliasearch","ProvideAlgoliaContext","backLoc","useRef","searching","isSearchLocation","setSearchState","setUrlTO","EMPTY_QUERY","searchStateToUrl","clearTimeout","hash","handleSetSearchState","newSearchState","refinementList","index_type","InstantSearch","onSearchStateChange","refresh","locationPathname","ProvideContexts","isLocalhost","register","navigator","origin","addEventListener","swUrl","serviceWorker","ready","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","Global","createGlobalStyle","createLocalKVStore","getApolloClient","apolloClient","ApolloApp","newestOnTop","render","getElementById","registerServiceWorker","run"],"mappings":"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","file":"static/js/main.084685f8.chunk.js","sourcesContent":["export * from './operation';\nexport * from './types.d';\n","import { ApolloLink, FetchResult, Operation } from 'apollo-link';\nimport {\n  OperationDefinitionNode,\n  OperationTypeNode,\n  FieldNode,\n  DocumentNode\n} from 'graphql';\nimport {\n  OperationDef,\n  OpRequestHandler,\n  Result,\n  VarsOperation,\n  Name\n} from './types';\n\nexport function isOp<D extends OperationDef>(\n  operationName: Name<D>,\n  operation: Operation\n): operation is VarsOperation<D> {\n  return operation.operationName === operationName;\n}\n\nexport class ApolloLinkOp<D extends OperationDef> extends ApolloLink {\n  constructor(operationName: Name<D>, reqHandl: OpRequestHandler<D>) {\n    super((operation, nextLink) => {\n      if (isOp<D>(operationName, operation)) {\n        return reqHandl(operation, nextLink);\n      } else {\n        return nextLink(operation);\n      }\n    });\n  }\n}\n\nexport const apolloLinkOp = <D extends OperationDef>(\n  operationName: Name<D>,\n  reqHandl: OpRequestHandler<D>\n) => new ApolloLinkOp<D>(operationName, reqHandl);\n\nexport type OpFetchResult<D extends OperationDef> = FetchResult<Result<D>>;\nexport type OpResultWatcher<D extends OperationDef> = (\n  result: OpFetchResult<D>\n) => OpFetchResult<D> | undefined | void;\nexport const apolloLinkOpResult = <D extends OperationDef>(\n  operationName: Name<D>,\n  watcher: OpResultWatcher<D>\n) =>\n  apolloLinkOp<D>(operationName, (op, next) =>\n    next(op).map(resp => {\n      const watcherResp = watcher(resp);\n      return typeof watcherResp === 'undefined' ? resp : watcherResp;\n    })\n  );\n\nexport const getOpType = (op: Operation) => {\n  const maybeOpDefNode = op.query.definitions.find<OperationDefinitionNode>(\n    (def): def is OperationDefinitionNode =>\n      def.kind === 'OperationDefinition' &&\n      !!def.name &&\n      def.name.value === op.operationName\n  );\n\n  return maybeOpDefNode && maybeOpDefNode.operation;\n};\n\nexport const getOperationNameAndType = <OperationName extends string = string>(\n  query: DocumentNode\n): [OperationName, OperationTypeNode] | [] => {\n  const opDefNodes = query.definitions.filter(\n    (def): def is OperationDefinitionNode => def.kind === 'OperationDefinition'\n  );\n\n  const maybeOperationNameAndType = opDefNodes.reduce<\n    [OperationName, OperationTypeNode] | null\n  >((found, opDefNode) => {\n    if (!found) {\n      const maybeFieldNode =\n        opDefNode.selectionSet.selections.find(\n          (selNode): selNode is FieldNode => selNode.kind === 'Field'\n        ) || null;\n      const opType = opDefNode.operation;\n      found =\n        maybeFieldNode &&\n        ([maybeFieldNode.name.value, opType] as [\n          OperationName,\n          OperationTypeNode\n        ]);\n    }\n    return found;\n  }, null);\n\n  return maybeOperationNameAndType || [];\n};\n","var map = {\n\t\"./en_GB/messages.po\": [\n\t\t806,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 529;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en_GB/messages.js\": [\n\t\t807,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 530;\nmodule.exports = webpackAsyncContext;","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type ResetPwdMutationVariables = {\n  email: Types.Scalars['String'],\n  url: Types.Scalars['String']\n};\n\n\nexport type ResetPwdMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'requestResetPassword'>\n);\n\nexport type ChangePasswordMutationVariables = {\n  oldPassword: Types.Scalars['String'],\n  password: Types.Scalars['String'],\n  passwordConfirmation: Types.Scalars['String']\n};\n\n\nexport type ChangePasswordMutation = (\n  { __typename: 'RootMutationType' }\n  & { changePassword: Types.Maybe<(\n    { __typename: 'Me' }\n    & Pick<Types.Me, 'accountId'>\n  )> }\n);\n\nexport type UpdateLostPasswordMutationVariables = {\n  token: Types.Scalars['String'],\n  password: Types.Scalars['String'],\n  passwordConfirmation: Types.Scalars['String']\n};\n\n\nexport type UpdateLostPasswordMutation = (\n  { __typename: 'RootMutationType' }\n  & { changePassword: Types.Maybe<(\n    { __typename: 'Me' }\n    & Pick<Types.Me, 'accountId'>\n  )> }\n);\n\nexport type AnonResetPasswordRequestMutationVariables = {\n  email: Types.Scalars['String']\n};\n\n\nexport type AnonResetPasswordRequestMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'requestResetPassword'>\n);\n\nexport type AnonLoginMutationVariables = {\n  email: Types.Scalars['String'],\n  password: Types.Scalars['String']\n};\n\n\nexport type AnonLoginMutation = (\n  { __typename: 'RootMutationType' }\n  & { login: Types.Maybe<(\n    { __typename: 'LoginResponse' }\n    & Pick<Types.LoginResponse, 'token' | 'currentUsername' | 'currentAccountId'>\n    & { currentUser: Types.Maybe<(\n      { __typename: 'User' }\n      & Pick<Types.User, 'id'>\n      & { profile: Types.Maybe<(\n        { __typename: 'Profile' }\n        & Pick<Types.Profile, 'name' | 'summary'>\n      )> }\n    )> }\n  )> }\n);\n\nexport type RequestConfirmEmailMutationVariables = {\n  email: Types.Scalars['String'],\n  url: Types.Scalars['String']\n};\n\n\nexport type RequestConfirmEmailMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'requestConfirmEmail'>\n);\n\nexport type ConfirmEmailMutationVariables = {\n  token: Types.Scalars['String']\n};\n\n\nexport type ConfirmEmailMutation = (\n  { __typename: 'RootMutationType' }\n  & { confirmEmail: Types.Maybe<(\n    { __typename: 'Me' }\n    & Pick<Types.Me, 'accountId'>\n  )> }\n);\n\nexport type AnonSignUpMutationVariables = {\n  email: Types.Scalars['String'],\n  password: Types.Scalars['String'],\n  url: Types.Scalars['String']\n};\n\n\nexport type AnonSignUpMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'signup'>\n);\n\n\nexport const ResetPwdDocument = gql`\n    mutation resetPwd($email: String!, $url: String!) {\n  requestResetPassword(email: $email, url: $url)\n}\n    `;\nexport type ResetPwdMutationFn = ApolloReactCommon.MutationFunction<ResetPwdMutation, ResetPwdMutationVariables>;\n\n/**\n * __useResetPwdMutation__\n *\n * To run a mutation, you first call `useResetPwdMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useResetPwdMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [resetPwdMutation, { data, loading, error }] = useResetPwdMutation({\n *   variables: {\n *      email: // value for 'email'\n *      url: // value for 'url'\n *   },\n * });\n */\nexport function useResetPwdMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ResetPwdMutation, ResetPwdMutationVariables>) {\n        return ApolloReactHooks.useMutation<ResetPwdMutation, ResetPwdMutationVariables>(ResetPwdDocument, baseOptions);\n      }\nexport type ResetPwdMutationHookResult = ReturnType<typeof useResetPwdMutation>;\nexport type ResetPwdMutationResult = ApolloReactCommon.MutationResult<ResetPwdMutation>;\nexport type ResetPwdMutationOptions = ApolloReactCommon.BaseMutationOptions<ResetPwdMutation, ResetPwdMutationVariables>;\nexport const ChangePasswordDocument = gql`\n    mutation changePassword($oldPassword: String!, $password: String!, $passwordConfirmation: String!) {\n  changePassword(oldPassword: $oldPassword, password: $password, passwordConfirmation: $passwordConfirmation) {\n    accountId\n  }\n}\n    `;\nexport type ChangePasswordMutationFn = ApolloReactCommon.MutationFunction<ChangePasswordMutation, ChangePasswordMutationVariables>;\n\n/**\n * __useChangePasswordMutation__\n *\n * To run a mutation, you first call `useChangePasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useChangePasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [changePasswordMutation, { data, loading, error }] = useChangePasswordMutation({\n *   variables: {\n *      oldPassword: // value for 'oldPassword'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *   },\n * });\n */\nexport function useChangePasswordMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ChangePasswordMutation, ChangePasswordMutationVariables>) {\n        return ApolloReactHooks.useMutation<ChangePasswordMutation, ChangePasswordMutationVariables>(ChangePasswordDocument, baseOptions);\n      }\nexport type ChangePasswordMutationHookResult = ReturnType<typeof useChangePasswordMutation>;\nexport type ChangePasswordMutationResult = ApolloReactCommon.MutationResult<ChangePasswordMutation>;\nexport type ChangePasswordMutationOptions = ApolloReactCommon.BaseMutationOptions<ChangePasswordMutation, ChangePasswordMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation updateLostPassword($token: String!, $password: String!, $passwordConfirmation: String!) {\n  changePassword(token: $token, password: $password, passwordConfirmation: $passwordConfirmation) {\n    accountId\n  }\n}\n    `;\nexport type UpdateLostPasswordMutationFn = ApolloReactCommon.MutationFunction<UpdateLostPasswordMutation, UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      token: // value for 'token'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<UpdateLostPasswordMutation, UpdateLostPasswordMutationVariables>) {\n        return ApolloReactHooks.useMutation<UpdateLostPasswordMutation, UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, baseOptions);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = ApolloReactCommon.MutationResult<UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = ApolloReactCommon.BaseMutationOptions<UpdateLostPasswordMutation, UpdateLostPasswordMutationVariables>;\nexport const AnonResetPasswordRequestDocument = gql`\n    mutation anonResetPasswordRequest($email: String!) {\n  requestResetPassword(email: $email)\n}\n    `;\nexport type AnonResetPasswordRequestMutationFn = ApolloReactCommon.MutationFunction<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>;\n\n/**\n * __useAnonResetPasswordRequestMutation__\n *\n * To run a mutation, you first call `useAnonResetPasswordRequestMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAnonResetPasswordRequestMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [anonResetPasswordRequestMutation, { data, loading, error }] = useAnonResetPasswordRequestMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useAnonResetPasswordRequestMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>) {\n        return ApolloReactHooks.useMutation<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>(AnonResetPasswordRequestDocument, baseOptions);\n      }\nexport type AnonResetPasswordRequestMutationHookResult = ReturnType<typeof useAnonResetPasswordRequestMutation>;\nexport type AnonResetPasswordRequestMutationResult = ApolloReactCommon.MutationResult<AnonResetPasswordRequestMutation>;\nexport type AnonResetPasswordRequestMutationOptions = ApolloReactCommon.BaseMutationOptions<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>;\nexport const AnonLoginDocument = gql`\n    mutation anonLogin($email: String!, $password: String!) {\n  login(emailOrUsername: $email, password: $password) {\n    token\n    currentUsername\n    currentAccountId\n    currentUser {\n      id\n      profile {\n        name\n        summary\n      }\n    }\n  }\n}\n    `;\nexport type AnonLoginMutationFn = ApolloReactCommon.MutationFunction<AnonLoginMutation, AnonLoginMutationVariables>;\n\n/**\n * __useAnonLoginMutation__\n *\n * To run a mutation, you first call `useAnonLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAnonLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [anonLoginMutation, { data, loading, error }] = useAnonLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useAnonLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AnonLoginMutation, AnonLoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<AnonLoginMutation, AnonLoginMutationVariables>(AnonLoginDocument, baseOptions);\n      }\nexport type AnonLoginMutationHookResult = ReturnType<typeof useAnonLoginMutation>;\nexport type AnonLoginMutationResult = ApolloReactCommon.MutationResult<AnonLoginMutation>;\nexport type AnonLoginMutationOptions = ApolloReactCommon.BaseMutationOptions<AnonLoginMutation, AnonLoginMutationVariables>;\nexport const RequestConfirmEmailDocument = gql`\n    mutation requestConfirmEmail($email: String!, $url: String!) {\n  requestConfirmEmail(email: $email, url: $url)\n}\n    `;\nexport type RequestConfirmEmailMutationFn = ApolloReactCommon.MutationFunction<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>;\n\n/**\n * __useRequestConfirmEmailMutation__\n *\n * To run a mutation, you first call `useRequestConfirmEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRequestConfirmEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [requestConfirmEmailMutation, { data, loading, error }] = useRequestConfirmEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *      url: // value for 'url'\n *   },\n * });\n */\nexport function useRequestConfirmEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>) {\n        return ApolloReactHooks.useMutation<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>(RequestConfirmEmailDocument, baseOptions);\n      }\nexport type RequestConfirmEmailMutationHookResult = ReturnType<typeof useRequestConfirmEmailMutation>;\nexport type RequestConfirmEmailMutationResult = ApolloReactCommon.MutationResult<RequestConfirmEmailMutation>;\nexport type RequestConfirmEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>;\nexport const ConfirmEmailDocument = gql`\n    mutation confirmEmail($token: String!) {\n  confirmEmail(token: $token) {\n    accountId\n  }\n}\n    `;\nexport type ConfirmEmailMutationFn = ApolloReactCommon.MutationFunction<ConfirmEmailMutation, ConfirmEmailMutationVariables>;\n\n/**\n * __useConfirmEmailMutation__\n *\n * To run a mutation, you first call `useConfirmEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmEmailMutation, { data, loading, error }] = useConfirmEmailMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ConfirmEmailMutation, ConfirmEmailMutationVariables>) {\n        return ApolloReactHooks.useMutation<ConfirmEmailMutation, ConfirmEmailMutationVariables>(ConfirmEmailDocument, baseOptions);\n      }\nexport type ConfirmEmailMutationHookResult = ReturnType<typeof useConfirmEmailMutation>;\nexport type ConfirmEmailMutationResult = ApolloReactCommon.MutationResult<ConfirmEmailMutation>;\nexport type ConfirmEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<ConfirmEmailMutation, ConfirmEmailMutationVariables>;\nexport const AnonSignUpDocument = gql`\n    mutation anonSignUp($email: String!, $password: String!, $url: String!) {\n  signup(email: $email, password: $password, url: $url)\n}\n    `;\nexport type AnonSignUpMutationFn = ApolloReactCommon.MutationFunction<AnonSignUpMutation, AnonSignUpMutationVariables>;\n\n/**\n * __useAnonSignUpMutation__\n *\n * To run a mutation, you first call `useAnonSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAnonSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [anonSignUpMutation, { data, loading, error }] = useAnonSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      url: // value for 'url'\n *   },\n * });\n */\nexport function useAnonSignUpMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AnonSignUpMutation, AnonSignUpMutationVariables>) {\n        return ApolloReactHooks.useMutation<AnonSignUpMutation, AnonSignUpMutationVariables>(AnonSignUpDocument, baseOptions);\n      }\nexport type AnonSignUpMutationHookResult = ReturnType<typeof useAnonSignUpMutation>;\nexport type AnonSignUpMutationResult = ApolloReactCommon.MutationResult<AnonSignUpMutation>;\nexport type AnonSignUpMutationOptions = ApolloReactCommon.BaseMutationOptions<AnonSignUpMutation, AnonSignUpMutationVariables>;\n\n\nexport interface ResetPwdMutationOperation {\n  operationName: 'resetPwd'\n  result: ResetPwdMutation\n  variables: ResetPwdMutationVariables\n  type: 'mutation'\n}\nexport const ResetPwdMutationName:ResetPwdMutationOperation['operationName'] = 'resetPwd'\n\nexport const ResetPwdMutationRefetch = (\n  variables:ResetPwdMutationVariables, \n  context?:any\n)=>({\n  query:ResetPwdDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface ChangePasswordMutationOperation {\n  operationName: 'changePassword'\n  result: ChangePasswordMutation\n  variables: ChangePasswordMutationVariables\n  type: 'mutation'\n}\nexport const ChangePasswordMutationName:ChangePasswordMutationOperation['operationName'] = 'changePassword'\n\nexport const ChangePasswordMutationRefetch = (\n  variables:ChangePasswordMutationVariables, \n  context?:any\n)=>({\n  query:ChangePasswordDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface UpdateLostPasswordMutationOperation {\n  operationName: 'updateLostPassword'\n  result: UpdateLostPasswordMutation\n  variables: UpdateLostPasswordMutationVariables\n  type: 'mutation'\n}\nexport const UpdateLostPasswordMutationName:UpdateLostPasswordMutationOperation['operationName'] = 'updateLostPassword'\n\nexport const UpdateLostPasswordMutationRefetch = (\n  variables:UpdateLostPasswordMutationVariables, \n  context?:any\n)=>({\n  query:UpdateLostPasswordDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface AnonResetPasswordRequestMutationOperation {\n  operationName: 'anonResetPasswordRequest'\n  result: AnonResetPasswordRequestMutation\n  variables: AnonResetPasswordRequestMutationVariables\n  type: 'mutation'\n}\nexport const AnonResetPasswordRequestMutationName:AnonResetPasswordRequestMutationOperation['operationName'] = 'anonResetPasswordRequest'\n\nexport const AnonResetPasswordRequestMutationRefetch = (\n  variables:AnonResetPasswordRequestMutationVariables, \n  context?:any\n)=>({\n  query:AnonResetPasswordRequestDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface AnonLoginMutationOperation {\n  operationName: 'anonLogin'\n  result: AnonLoginMutation\n  variables: AnonLoginMutationVariables\n  type: 'mutation'\n}\nexport const AnonLoginMutationName:AnonLoginMutationOperation['operationName'] = 'anonLogin'\n\nexport const AnonLoginMutationRefetch = (\n  variables:AnonLoginMutationVariables, \n  context?:any\n)=>({\n  query:AnonLoginDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface RequestConfirmEmailMutationOperation {\n  operationName: 'requestConfirmEmail'\n  result: RequestConfirmEmailMutation\n  variables: RequestConfirmEmailMutationVariables\n  type: 'mutation'\n}\nexport const RequestConfirmEmailMutationName:RequestConfirmEmailMutationOperation['operationName'] = 'requestConfirmEmail'\n\nexport const RequestConfirmEmailMutationRefetch = (\n  variables:RequestConfirmEmailMutationVariables, \n  context?:any\n)=>({\n  query:RequestConfirmEmailDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface ConfirmEmailMutationOperation {\n  operationName: 'confirmEmail'\n  result: ConfirmEmailMutation\n  variables: ConfirmEmailMutationVariables\n  type: 'mutation'\n}\nexport const ConfirmEmailMutationName:ConfirmEmailMutationOperation['operationName'] = 'confirmEmail'\n\nexport const ConfirmEmailMutationRefetch = (\n  variables:ConfirmEmailMutationVariables, \n  context?:any\n)=>({\n  query:ConfirmEmailDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface AnonSignUpMutationOperation {\n  operationName: 'anonSignUp'\n  result: AnonSignUpMutation\n  variables: AnonSignUpMutationVariables\n  type: 'mutation'\n}\nexport const AnonSignUpMutationName:AnonSignUpMutationOperation['operationName'] = 'anonSignUp'\n\nexport const AnonSignUpMutationRefetch = (\n  variables:AnonSignUpMutationVariables, \n  context?:any\n)=>({\n  query:AnonSignUpDocument,\n  variables,\n  context\n})\n      \n","import { GraphQLResolveInfo, GraphQLScalarType, GraphQLScalarTypeConfig } from 'graphql';\nexport type Maybe<T> = T | null;\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\nexport type RequireFields<T, K extends keyof T> = { [X in Exclude<keyof T, K>]?: T[X] } & { [P in K]-?: NonNullable<T[P]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n  /** \n * An opaque position marker for pagination. Paginated queries return\n   * a PageInfo struct with start and end cursors (which are actually\n   * lists of Cursor for ...reasons...). You can then issue queries\n   * requesting results `before` the `start` or `after` the `end`\n   * cursors to request the previous or next page respectively.\n   * \n   * Is actually a string or integer, typically an ID.\n   * Can also be include encoded data describing how a query is ordered.\n   * May be extended in future.\n **/\n  Cursor: any,\n  /** Arbitrary json stored as a string */\n  Json: any,\n  /** The `URI` type simply declares a reference to an external web URL, Holochain entry or other resource. */\n  URI: any,\n  /** \n * The `DateTime` scalar type represents a date and time in the UTC\n   * timezone. The DateTime appears in a JSON response as an ISO8601 formatted\n   * string, including UTC timezone (\"Z\"). The parsed date and time string will\n   * be converted to UTC if there is an offset.\n **/\n  DateTime: any,\n  /** Represents an uploaded file. */\n  Upload: any,\n};\n\n/** \n * A boundary or context grouped around some other record- used for documenting, accounting, planning.\n * ## extended for Bonfire (default was `Person | Organization`)\n **/\nexport type AccountingScope = Category | Organization | Person | Tag;\n\n/** \n * An action verb defining the kind of event, commitment, or intent.\n * It is recommended that the lowercase action verb should be used as the record ID\n * in order that references to `Action`s elsewhere in the system are easily readable.\n **/\nexport type Action = {\n   __typename?: 'Action',\n  id: Scalars['ID'],\n  /** Denotes if a process input or output, or not related to a process. */\n  inputOutput?: Maybe<Scalars['String']>,\n  /** A unique verb which defines the action. */\n  label: Scalars['String'],\n  note?: Maybe<Scalars['String']>,\n  /** \n * The onhand effect of an economic event on a resource, increment, decrement, no\n   * effect, or decrement resource and increment 'to' resource.\n **/\n  onhandEffect?: Maybe<Scalars['String']>,\n  /** The action that should be included on the other direction of the process, for example accept with modify. */\n  pairsWith?: Maybe<Scalars['String']>,\n  /** \n * The accounting effect of an economic event on a resource, increment,\n   * decrement, no effect, or decrement resource and increment 'to' resource.\n **/\n  resourceEffect: Scalars['String'],\n};\n\nexport type Activity = {\n   __typename?: 'Activity',\n  directReplies?: Maybe<Array<Maybe<Replied>>>,\n  id?: Maybe<Scalars['ID']>,\n  object?: Maybe<AnyContext>,\n  objectId?: Maybe<Scalars['String']>,\n  subject?: Maybe<AnyCharacter>,\n  subjectId?: Maybe<Scalars['String']>,\n  verb?: Maybe<Verb>,\n};\n\n\nexport type ActivityDirectRepliesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\nexport type ActivityFilters = {\n  activityId?: Maybe<Scalars['ID']>,\n  objectId?: Maybe<Scalars['ID']>,\n};\n\n/** A person or group or organization with economic agency. */\nexport type Agent = {\n  agentType?: Maybe<AgentType>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  commitments?: Maybe<Array<Commitment>>,\n  displayUsername?: Maybe<Scalars['String']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  intents?: Maybe<Array<Intent>>,\n  inventoriedEconomicResources?: Maybe<Array<EconomicResource>>,\n  /** An informal or formal textual identifier for an agent. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  plans?: Maybe<Array<Plan>>,\n  /** \n * The main place an agent is located, often an address where activities occur\n   * and mail can be sent. This is usually a mappable geographic location.  It also\n   * could be a website address, as in the case of agents who have no physical location.\n **/\n  primaryLocation?: Maybe<SpatialThing>,\n  processes?: Maybe<Array<Process>>,\n  proposals?: Maybe<Array<Proposal>>,\n  relationships?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsObject?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsSubject?: Maybe<Array<AgentRelationship>>,\n  roles?: Maybe<Array<AgentRelationshipRole>>,\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentEconomicEventsArgs = {\n  filter?: Maybe<AgentEventSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentInventoriedEconomicResourcesArgs = {\n  filter?: Maybe<AgentResourceSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentPlansArgs = {\n  filter?: Maybe<AgentPlanSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentProcessesArgs = {\n  filter?: Maybe<AgentProcessSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentRelationshipsArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentRelationshipsAsObjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentRelationshipsAsSubjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n/** Query parameters for reading `Commitment`s related to an `Agent` */\nexport type AgentCommitmentSearchParams = {\n  action?: Maybe<Scalars['ID']>,\n  endDate?: Maybe<Scalars['DateTime']>,\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n  startDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type AgentCreateParams = {\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for an agent. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`SpatialThing`) The main place an agent is located, often an address where\n   * activities occur and mail can be sent. This is usually a mappable geographic\n   * location.  It also could be a website address, as in the case of agents who\n   * have no physical location.\n **/\n  primaryLocation?: Maybe<Scalars['ID']>,\n};\n\n/** Query parameters for reading `EconomicEvent`s related to an `Agent` */\nexport type AgentEventSearchParams = {\n  action?: Maybe<Scalars['ID']>,\n  endDate?: Maybe<Scalars['DateTime']>,\n  searchString?: Maybe<Scalars['String']>,\n  startDate?: Maybe<Scalars['DateTime']>,\n};\n\n/** Query parameters for reading `Plan`s related to an `Agent` */\nexport type AgentPlanSearchParams = {\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\n/** Query parameters for reading `Process`es related to an `Agent` */\nexport type AgentProcessSearchParams = {\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\n/** The role of an economic relationship that exists between 2 agents, such as member, trading partner. */\nexport type AgentRelationship = {\n   __typename?: 'AgentRelationship',\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The object of a relationship between 2 agents.  For example, if Mary is a member of a group, then the group is the object. */\n  object: Agent,\n  /** A kind of relationship that exists between 2 agents. */\n  relationship: AgentRelationshipRole,\n  /** The subject of a relationship between 2 agents.  For example, if Mary is a member of a group, then Mary is the subject. */\n  subject: Agent,\n};\n\nexport type AgentRelationshipCreateParams = {\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`Agent`) The object of a relationship between 2 agents.  For example, if Mary\n   * is a member of a group, then the group is the object.\n **/\n  object: Scalars['ID'],\n  /** \n * (`AgentRelationshipRole`) The role of an economic relationship that exists\n   * between 2 agents, such as member, trading partner.\n **/\n  relationship: Scalars['ID'],\n  /** \n * (`Agent`) The subject of a relationship between 2 agents.  For example, if\n   * Mary is a member of a group, then Mary is the subject.\n **/\n  subject: Scalars['ID'],\n};\n\nexport type AgentRelationshipResponse = {\n   __typename?: 'AgentRelationshipResponse',\n  agentRelationship: AgentRelationship,\n};\n\n/** A relationship role defining the kind of association one agent can have with another. */\nexport type AgentRelationshipRole = {\n   __typename?: 'AgentRelationshipRole',\n  id: Scalars['ID'],\n  /** The human readable name of the role, from the object to the subject. */\n  inverseRoleLabel?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The human readable name of the role, from the subject to the object. */\n  roleLabel: Scalars['String'],\n};\n\nexport type AgentRelationshipRoleCreateParams = {\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'has member'. */\n  inverseRoleLabel?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'is member of'. */\n  roleLabel: Scalars['String'],\n};\n\nexport type AgentRelationshipRoleResponse = {\n   __typename?: 'AgentRelationshipRoleResponse',\n  agentRelationshipRole?: Maybe<AgentRelationshipRole>,\n};\n\nexport type AgentRelationshipRoleUpdateParams = {\n  id: Scalars['ID'],\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'has member'. */\n  inverseRoleLabel?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'is member of'. */\n  roleLabel?: Maybe<Scalars['String']>,\n};\n\nexport type AgentRelationshipUpdateParams = {\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`Agent`) The object of a relationship between 2 agents.  For example, if Mary\n   * is a member of a group, then the group is the object.\n **/\n  object?: Maybe<Scalars['ID']>,\n  /** \n * (`AgentRelationshipRole`) The role of an economic relationship that exists\n   * between 2 agents, such as member, trading partner.\n **/\n  relationship?: Maybe<Scalars['ID']>,\n  /** \n * (`Agent`) The subject of a relationship between 2 agents.  For example, if\n   * Mary is a member of a group, then Mary is the subject.\n **/\n  subject?: Maybe<Scalars['ID']>,\n};\n\n/** Query parameters for reading `EconomicResource`s related to an `Agent` */\nexport type AgentResourceSearchParams = {\n  page?: Maybe<Scalars['Int']>,\n  resourceClassification?: Maybe<Scalars['URI']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\n/** A page of agents */\nexport type AgentsPage = {\n   __typename?: 'AgentsPage',\n  edges: Array<Agent>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport enum AgentType {\n  Organization = 'Organization',\n  Person = 'Person'\n}\n\nexport type AgentUpdateParams = {\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for an agent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`SpatialThing`) The main place an agent is located, often an address where\n   * activities occur and mail can be sent. This is usually a mappable geographic\n   * location.  It also could be a website address, as in the case of agents who\n   * have no physical location.\n **/\n  primaryLocation?: Maybe<Scalars['ID']>,\n};\n\n/** Any type of agreement among economic agents. */\nexport type Agreement = {\n   __typename?: 'Agreement',\n  commitments?: Maybe<Array<Commitment>>,\n  /** The date and time the agreement was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  involvedAgents?: Maybe<Array<Agent>>,\n  /** An informal or formal textual identifier for an agreement. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AgreementCreateParams = {\n  /** The date and time the agreement was created. */\n  created: Scalars['DateTime'],\n  /** An informal or formal textual identifier for an agreement. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AgreementResponse = {\n   __typename?: 'AgreementResponse',\n  agreement?: Maybe<Agreement>,\n};\n\nexport type AgreementUpdateParams = {\n  /** The date and time the agreement was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for an agreement. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** Any type of character (eg. Category, Thread, Geolocation, etc), actor (eg. User/Person), or agent (eg. Organisation) */\nexport type AnyCharacter = Category | SpatialThing | User;\n\n/** Any type of known object */\nexport type AnyContext = Activity | Category | EconomicEvent | Intent | Post | Process | SpatialThing | Tag | User;\n\n/** \n * A way to tie an economic event that is given in loose fulfilment for another\n * economic event, without commitments or expectations.\n * Supports the gift economy.\n **/\nexport type Appreciation = {\n   __typename?: 'Appreciation',\n  /** The economic event this appreciation has been given in acknowledgement of. */\n  appreciationOf: EconomicEvent,\n  /** The economic event provided as a gift in this appreciation. */\n  appreciationWith: EconomicEvent,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AppreciationCreateParams = {\n  /** (`EconomicEvent`) The economic event this appreciation has been given in acknowledgement of. */\n  appreciationOf: Scalars['ID'],\n  /** (`EconomicEvent`) The economic event provided as a gift in this appreciation. */\n  appreciationWith: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AppreciationResponse = {\n   __typename?: 'AppreciationResponse',\n  appreciation?: Maybe<Appreciation>,\n};\n\nexport type AppreciationUpdateParams = {\n  /** (`EconomicEvent`) The economic event this appreciation has been given in acknowledgement of. */\n  appreciationOf?: Maybe<Scalars['ID']>,\n  /** (`EconomicEvent`) The economic event provided as a gift in this appreciation. */\n  appreciationWith?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type CategoriesPage = {\n   __typename?: 'CategoriesPage',\n  edges: Array<Category>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** A category (eg. tag in a taxonomy) */\nexport type Category = {\n   __typename?: 'Category',\n  /** The caretaker of this category, if any */\n  caretaker?: Maybe<AnyContext>,\n  /** A JSON document containing more info beyond the default fields */\n  extraInfo?: Maybe<Scalars['Json']>,\n  facet?: Maybe<Scalars['String']>,\n  /** The numeric primary key of the category */\n  id?: Maybe<Scalars['ID']>,\n  name?: Maybe<Scalars['String']>,\n  /** The parent category (in a tree-based taxonomy) */\n  parentCategory?: Maybe<Category>,\n  parentCategoryId?: Maybe<Scalars['String']>,\n  prefix?: Maybe<Scalars['String']>,\n  /** List of child categories (in a tree-based taxonomy) */\n  subCategories?: Maybe<Array<Maybe<CategoriesPage>>>,\n  summary?: Maybe<Scalars['String']>,\n};\n\nexport type CategoryInput = {\n  /** A JSON document containing more info beyond the default fields */\n  extraInfo?: Maybe<Scalars['Json']>,\n  facet?: Maybe<Scalars['String']>,\n  name: Scalars['String'],\n  parentCategory?: Maybe<Scalars['ID']>,\n  prefix?: Maybe<Scalars['String']>,\n  sameAsCategory?: Maybe<Scalars['ID']>,\n  summary?: Maybe<Scalars['String']>,\n};\n\nexport type Character = {\n   __typename?: 'Character',\n  username?: Maybe<Scalars['String']>,\n};\n\nexport type CharacterFilters = {\n  autocomplete?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  username?: Maybe<Scalars['String']>,\n};\n\nexport type CharacterInput = {\n  username?: Maybe<Scalars['String']>,\n};\n\n/** \n * A claim for a future economic event(s) in reciprocity for an economic event that\n * already occurred. For example, a claim for payment for goods received.\n **/\nexport type Claim = {\n   __typename?: 'Claim',\n  /** Relates a claim to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this claim. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** Specifies if a calculation will be applied to this claim when an economic event is logged. */\n  calculatedUsing?: Maybe<ValueCalculation>,\n  /** The data on which the claim was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the claim is expected to be settled. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** \n * The claim is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The economic agent from whom the claim is initiated. */\n  provider: Agent,\n  /** The economic agent whom the claim is for. */\n  receiver: Agent,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** The economic event which already occurred which this claim has been made against. */\n  triggeredBy: EconomicEvent,\n};\n\nexport type ClaimCreateParams = {\n  /** (`Action`) Relates a claim to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['ID'],\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this claim. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The data on which the claim was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the claim is expected to be settled. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The claim is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Agent`) The economic agent from whom the claim is initiated. */\n  provider: Scalars['ID'],\n  /** (`Agent`) The economic agent whom the claim is for. */\n  receiver: Scalars['ID'],\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which already occurred which this claim has been made against. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\nexport type ClaimResponse = {\n   __typename?: 'ClaimResponse',\n  claim?: Maybe<Claim>,\n};\n\nexport type ClaimUpdateParams = {\n  /** (`Action`) Relates a claim to a verb, such as consume, produce, work, improve, etc. */\n  action?: Maybe<Scalars['ID']>,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this claim. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The data on which the claim was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the claim is expected to be settled. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The claim is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Agent`) The economic agent from whom the claim is initiated. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the claim is for. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which already occurred which this claim has been made against. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\n/** A planned economic flow that has been promised by an agent to another agent. */\nexport type Commitment = {\n   __typename?: 'Commitment',\n  /** Relates a commitment to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this commitment.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The place where a commitment occurs. Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** This commitment is part of the exchange agreement. */\n  clauseOf?: Maybe<Agreement>,\n  /** The creation time of the commitment. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The commitment can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** \n * The commitment is complete or not.  This is irrespective of if the original\n   * goal has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy?: Maybe<Array<Fulfillment>>,\n  /** The planned beginning of the commitment. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the commitment. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the commitment. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** Represents a desired deliverable expected from this plan. */\n  independentDemandOf?: Maybe<Plan>,\n  /** Defines the process to which this commitment is an input. */\n  inputOf?: Maybe<Process>,\n  involvedAgents?: Maybe<Array<Agent>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Defines the process for which this commitment is an output. */\n  outputOf?: Maybe<Process>,\n  /** The economic agent from whom the commitment is initiated. */\n  provider: Agent,\n  /** The economic agent whom the commitment is for. */\n  receiver: Agent,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** Exact economic resource involved in the commitment. */\n  resourceInventoriedAs?: Maybe<EconomicResource>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies?: Maybe<Array<Satisfaction>>,\n};\n\nexport type CommitmentCreateParams = {\n  /** (`Action`) Relates a commitment to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['ID'],\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this commitment.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an commitment occurs.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** (`Agreement`) This commitment is part of the agreement. */\n  clauseOf?: Maybe<Scalars['ID']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The commitment is complete or not.  This is irrespective of if the original\n   * goal has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the commitment. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the commitment. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the commitment. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Plan`) Represents a desired deliverable expected from this plan. */\n  independentDemandOf?: Maybe<Scalars['ID']>,\n  /** (`Process`) Defines the process to which this commitment is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process for which this commitment is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the commitment is initiated. */\n  provider: Scalars['ID'],\n  /** (`Agent`) The economic agent whom the commitment is for. */\n  receiver: Scalars['ID'],\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Exact economic resource involved in the commitment. */\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\nexport type CommitmentResponse = {\n   __typename?: 'CommitmentResponse',\n  commitment?: Maybe<Commitment>,\n};\n\nexport type CommitmentUpdateParams = {\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this commitment.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an commitment occurs.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** (`Agreement`) This commitment is part of the agreement. */\n  clauseOf?: Maybe<Scalars['ID']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The commitment is complete or not.  This is irrespective of if the original\n   * goal has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the commitment. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the commitment. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the commitment. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Plan`) Represents a desired deliverable expected from this plan. */\n  independentDemandOf?: Maybe<Scalars['ID']>,\n  /** (`Process`) Defines the process to which this commitment is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process for which this commitment is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the commitment is initiated. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the commitment is for. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Exact economic resource involved in the commitment. */\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\n\n\n/** A `Duration` represents an interval between two `DateTime` values. */\nexport type Duration = {\n   __typename?: 'Duration',\n  /** A number representing the duration, will be paired with a unit. */\n  numericDuration: Scalars['Float'],\n  /** A unit of measure. */\n  unitType: TimeUnit,\n};\n\n/** \n * An observed economic flow, as opposed to a flow planned to happen in the future.\n * This could reflect a change in the quantity of an economic resource. It is also\n * defined by its behavior in relation to the economic resource (see `Action`)\n **/\nexport type EconomicEvent = {\n   __typename?: 'EconomicEvent',\n  /** Relates an economic event to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this economic event.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  appreciatedBy?: Maybe<Array<Appreciation>>,\n  appreciationOf?: Maybe<Array<Appreciation>>,\n  /** The place where an economic event occurs.  Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** The value calculation (if any) used to generate this event. */\n  calculatedUsing?: Maybe<ValueCalculation>,\n  /** The economic event can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills?: Maybe<Array<Fulfillment>>,\n  /** The beginning of the economic event. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end of the economic event. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The date/time at which the economic event occurred. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** Defines the process to which this event is an input. */\n  inputOf?: Maybe<Process>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Defines the process for which this event is an output. */\n  outputOf?: Maybe<Process>,\n  /** The economic agent from whom the actual economic event is initiated. */\n  provider: Agent,\n  /** This economic event occurs as part of this agreement. */\n  realizationOf?: Maybe<Agreement>,\n  /** The economic agent whom the actual economic event is for. */\n  receiver: Agent,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** Economic resource involved in the economic event. */\n  resourceInventoriedAs?: Maybe<EconomicResource>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<Measure>,\n  /** An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies?: Maybe<Array<Satisfaction>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Maybe<AnyContext>>>,\n  /** \n * Additional economic resource on the economic event when needed by the\n   * receiver. Used when a transfer or move, or sometimes other actions, requires\n   * explicitly identifying an economic resource on the receiving side.\n **/\n  toResourceInventoriedAs?: Maybe<EconomicResource>,\n  trace?: Maybe<Array<ProductionFlowItem>>,\n  track?: Maybe<Array<ProductionFlowItem>>,\n  /** References another economic event that implied this economic event, often based on a prior agreement. */\n  triggeredBy?: Maybe<EconomicEvent>,\n};\n\n\n/** \n * An observed economic flow, as opposed to a flow planned to happen in the future.\n * This could reflect a change in the quantity of an economic resource. It is also\n * defined by its behavior in relation to the economic resource (see `Action`)\n **/\nexport type EconomicEventTraceArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** \n * An observed economic flow, as opposed to a flow planned to happen in the future.\n * This could reflect a change in the quantity of an economic resource. It is also\n * defined by its behavior in relation to the economic resource (see `Action`)\n **/\nexport type EconomicEventTrackArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\nexport type EconomicEventCreateParams = {\n  /** (`Action`) Relates an economic event to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['ID'],\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this economic event.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an economic event occurs.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** The beginning of the economic event. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end of the economic event. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The date/time at which the economic event occurred. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Process`) Defines the process to which this event is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process for which this event is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the actual economic event is initiated. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agreement`) This economic event occurs as part of this agreement. */\n  realizationOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the actual economic event is for. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Economic resource involved in the economic event. */\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n  /** \n * (`EconomicResource`) Additional economic resource on the economic event when\n   * needed by the receiver. Used when a transfer or move, or sometimes other\n   * actions, requires explicitly identifying an economic resource on the receiving side.\n **/\n  toResourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** (`EconomicEvent`) References another economic event that implied this economic event, often based on a prior agreement. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\n/** A page of Economic Events */\nexport type EconomicEventPage = {\n   __typename?: 'EconomicEventPage',\n  edges: Array<EconomicEvent>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type EconomicEventResponse = {\n   __typename?: 'EconomicEventResponse',\n  /** Details of the newly created event. */\n  economicEvent: EconomicEvent,\n  /** Details of any newly created `EconomicResource`, for events that create new resources. */\n  economicResource?: Maybe<EconomicResource>,\n  /** Any reciprocal events created by found value calculations. */\n  reciprocalEvents?: Maybe<Array<EconomicEvent>>,\n};\n\nexport type EconomicEventUpdateParams = {\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this economic event.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Agreement`) This economic event occurs as part of this agreement. */\n  realizationOf?: Maybe<Scalars['ID']>,\n  /** (`EconomicEvent`) References another economic event that implied this economic event, often based on a prior agreement. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\n/** A resource which is useful to people or the ecosystem. */\nexport type EconomicResource = {\n   __typename?: 'EconomicResource',\n  /** \n * The current amount and unit of the economic resource for which the agent has\n   * primary rights and responsibilities, sometimes thought of as ownership. This\n   * can be either stored or derived from economic events affecting the resource.\n **/\n  accountingQuantity?: Maybe<Measure>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  conformsTo?: Maybe<ResourceSpecification>,\n  /** Used when a stock economic resource contains items also defined as economic resources. */\n  containedIn?: Maybe<EconomicResource>,\n  /** Used when a stock economic resource contains units also defined as economic resources. */\n  contains?: Maybe<Array<EconomicResource>>,\n  /** \n * The current place an economic resource is located. Could be at any level of\n   * granularity, from a town to an address to a warehouse location. Usually mappable.\n **/\n  currentLocation?: Maybe<SpatialThing>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the resource, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** \n * Lot or batch of an economic resource, used to track forward or backwards to\n   * all occurrences of resources of that lot. Note more than one resource can be\n   * of the same lot.\n **/\n  lot?: Maybe<ProductBatch>,\n  /** An informal or formal textual identifier for an item. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * The current amount and unit of the economic resource which is under direct\n   * control of the agent.  It may be more or less than the accounting quantity.\n   * This can be either stored or derived from economic events affecting the resource.\n **/\n  onhandQuantity?: Maybe<Measure>,\n  /** \n * The agent currently with primary rights and responsibilites for the economic\n   * resource. It is the agent that is associated with the accountingQuantity of\n   * the economic resource.\n **/\n  primaryAccountable?: Maybe<Agent>,\n  /** \n * References the ProcessSpecification of the last process the desired economic\n   * resource went through. Stage is used when the last process is important for\n   * finding proper resources, such as where the publishing process wants only\n   * documents that have gone through the editing process.\n **/\n  stage?: Maybe<ProcessSpecification>,\n  /** \n * The state of the desired economic resource (pass or fail), after coming out of\n   * a test or review process. Can be derived from the last event if a pass or fail event.\n **/\n  state?: Maybe<Action>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<AnyContext>>,\n  trace?: Maybe<Array<ProductionFlowItem>>,\n  track?: Maybe<Array<ProductionFlowItem>>,\n  /** \n * Sometimes called serial number, used when each item must have a traceable\n   * identifier (like a computer). Could also be used for other unique tracking\n   * identifiers needed for resources.\n **/\n  trackingIdentifier?: Maybe<Scalars['String']>,\n  /** The unit used for use or work or cite actions for this resource. */\n  unitOfEffort?: Maybe<Unit>,\n};\n\n\n/** A resource which is useful to people or the ecosystem. */\nexport type EconomicResourceTraceArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** A resource which is useful to people or the ecosystem. */\nexport type EconomicResourceTrackArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n/** Input `EconomicResource` type used when sending events to setup initial resource recordings */\nexport type EconomicResourceCreateParams = {\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  conformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Used when a stock economic resource contains items also defined as economic resources. */\n  containedIn?: Maybe<Scalars['ID']>,\n  /** \n * (`SpatialThing`) The current place an economic resource is located.  Could be\n   * at any level of granularity, from a town to an address to a warehouse\n   * location.  Usually mappable.\n **/\n  currentLocation?: Maybe<Scalars['ID']>,\n  /** The uri to an image relevant to the resource, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** \n * (`ProductBatch`) Lot or batch of an economic resource, used to track forward\n   * or backwards to all occurrences of resources of that lot. Note more than one\n   * resource can be of the same lot.\n **/\n  lot?: Maybe<Scalars['ID']>,\n  /** An informal or formal textual identifier for an item. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n  /** \n * Sometimes called serial number, used when each item must have a traceable\n   * identifier (like a computer). Could also be used for other unique tracking\n   * identifiers needed for resources.\n **/\n  trackingIdentifier?: Maybe<Scalars['String']>,\n};\n\n/** A page of Economic Resources */\nexport type EconomicResourcePage = {\n   __typename?: 'EconomicResourcePage',\n  edges: Array<EconomicResource>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type EconomicResourceResponse = {\n   __typename?: 'EconomicResourceResponse',\n  economicResource: EconomicResource,\n};\n\nexport type EconomicResourceUpdateParams = {\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** (`EconomicResource`) Used when a stock economic resource contains items also defined as economic resources. */\n  containedIn?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the resource, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Unit`) The unit used for use or work or cite actions for this resource. */\n  unitOfEffort?: Maybe<Scalars['ID']>,\n};\n\nexport type EventOrCommitment = Commitment | EconomicEvent;\n\nexport type FeedFilters = {\n  feedName?: Maybe<Scalars['String']>,\n};\n\n/** \n * Represents many-to-many relationships between commitments and economic events\n * that fully or partially satisfy one or more commitments.\n **/\nexport type Fulfillment = {\n   __typename?: 'Fulfillment',\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy: EconomicEvent,\n  /** The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills: Commitment,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n};\n\nexport type FulfillmentCreateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy: Scalars['ID'],\n  /** (`Commitment`) The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\nexport type FulfillmentResponse = {\n   __typename?: 'FulfillmentResponse',\n  fulfillment?: Maybe<Fulfillment>,\n};\n\nexport type FulfillmentUpdateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy?: Maybe<Scalars['ID']>,\n  /** (`Commitment`) The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\nexport type GeolocationDistance = {\n  meters?: Maybe<Scalars['Int']>,\n};\n\nexport type GeolocationFilters = {\n  distance?: Maybe<GeolocationDistance>,\n  nearAddress?: Maybe<Scalars['String']>,\n  nearPoint?: Maybe<GeolocationPoint>,\n};\n\nexport type GeolocationPoint = {\n  lat?: Maybe<Scalars['Float']>,\n  long?: Maybe<Scalars['Float']>,\n};\n\n/** Mutation input structure for defining time durations. */\nexport type IDuration = {\n  /** A number representing the duration, will be paired with a unit. */\n  numericDuration: Scalars['Float'],\n  /** A unit of measure. */\n  unitType: TimeUnit,\n};\n\nexport type ImagesUpload = {\n  icon?: Maybe<Scalars['Upload']>,\n  image?: Maybe<Scalars['Upload']>,\n};\n\n/** Mutation input structure for defining measurements. Should be nulled if not present, rather than empty. */\nexport type IMeasure = {\n  /** A number representing the quantity, will be paired with a unit. */\n  hasNumericalValue: Scalars['Float'],\n  /** (`Unit`) A unit of measure. */\n  hasUnit: Scalars['ID'],\n};\n\n/** A planned economic flow which has not been committed to, which can lead to economic events (sometimes through commitments). */\nexport type Intent = {\n   __typename?: 'Intent',\n  /** Relates an intent to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this intent. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The place where an intent would occur. Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** The total quantity of the offered resource available. */\n  availableQuantity?: Maybe<Measure>,\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  /** The intent can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** \n * The intent is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the intent. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the intent. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the intent. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the intent, such as a photo. */\n  image?: Maybe<Scalars['URI']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** Defines the process to which this intent is an input. */\n  inputOf?: Maybe<Process>,\n  /** An informal or formal textual identifier for an intent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Defines the process to which this intent is an output. */\n  outputOf?: Maybe<Process>,\n  /** The economic agent from whom the intent is initiated. This implies that the intent is an offer. */\n  provider?: Maybe<Agent>,\n  publishedIn?: Maybe<Array<ProposedIntent>>,\n  /** The economic agent whom the intent is for.  This implies that the intent is a request. */\n  receiver?: Maybe<Agent>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** When a specific `EconomicResource` is known which can service the `Intent`, this defines that resource. */\n  resourceInventoriedAs?: Maybe<EconomicResource>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<Measure>,\n  satisfiedBy?: Maybe<Array<Satisfaction>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Maybe<AnyContext>>>,\n};\n\nexport type IntentCreateParams = {\n  /** (`Action`) Relates an intent to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['String'],\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this intent. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an intent occurs. Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** The total quantity of the offered resource available. */\n  availableQuantity?: Maybe<IMeasure>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The intent is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the intent. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the intent. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the intent. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  /** The uri to an image relevant to the intent, such as a photo. */\n  image?: Maybe<Scalars['URI']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Process`) Defines the process to which this intent is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** An informal or formal textual identifier for an intent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process to which this intent is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the intent is initiated. This implies that the intent is an offer. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the intent is for.  This implies that the intent is a request. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * (`EconomicResource`) When a specific `EconomicResource` is known which can\n   * service the `Intent`, this defines that resource.\n **/\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\nexport type IntentResponse = {\n   __typename?: 'IntentResponse',\n  intent: Intent,\n};\n\n/** Query parameters for reading `Intent`s related to an `Agent` */\nexport type IntentSearchParams = {\n  action?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  agent?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  atLocation?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  classifiedAs?: Maybe<Array<Maybe<Scalars['URI']>>>,\n  endDate?: Maybe<Scalars['DateTime']>,\n  finished?: Maybe<Scalars['Boolean']>,\n  geolocation?: Maybe<GeolocationFilters>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  provider?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  receiver?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  searchString?: Maybe<Scalars['String']>,\n  startDate?: Maybe<Scalars['DateTime']>,\n  status?: Maybe<Scalars['String']>,\n  tagIds?: Maybe<Array<Maybe<Scalars['ID']>>>,\n};\n\n/** A page of intents */\nexport type IntentsPage = {\n   __typename?: 'IntentsPage',\n  edges: Array<Intent>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type IntentUpdateParams = {\n  /** (`Action`) Relates an intent to a verb, such as consume, produce, work, improve, etc. */\n  action?: Maybe<Scalars['String']>,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this intent. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an intent occurs. Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** The total quantity of the offered resource available. */\n  availableQuantity?: Maybe<IMeasure>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The intent is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the intent. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the intent. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the intent. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the intent, such as a photo. */\n  image?: Maybe<Scalars['URI']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Process`) Defines the process to which this intent is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** An informal or formal textual identifier for an intent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process to which this intent is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the intent is initiated. This implies that the intent is an offer. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the intent is for.  This implies that the intent is a request. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * (`EconomicResource`) When a specific `EconomicResource` is known which can\n   * service the `Intent`, this defines that resource.\n **/\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  currentAccountId?: Maybe<Scalars['String']>,\n  currentUser?: Maybe<User>,\n  currentUsername?: Maybe<Scalars['String']>,\n  token?: Maybe<Scalars['String']>,\n};\n\nexport type Me = {\n   __typename?: 'Me',\n  accountId?: Maybe<Scalars['ID']>,\n  flagsForModeration?: Maybe<Array<Maybe<Activity>>>,\n  followed?: Maybe<Array<Maybe<Activity>>>,\n  followers?: Maybe<Array<Maybe<Activity>>>,\n  likeActivities?: Maybe<Array<Maybe<Activity>>>,\n  /** a bearer token used for authentication */\n  token?: Maybe<Scalars['String']>,\n  user?: Maybe<User>,\n  userFeed?: Maybe<Array<Maybe<Activity>>>,\n  userNotifications?: Maybe<Array<Maybe<Activity>>>,\n  users?: Maybe<Array<Maybe<User>>>,\n};\n\n\nexport type MeFlagsForModerationArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeFollowedArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeFollowersArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeLikeActivitiesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeUserFeedArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeUserNotificationsArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n/** \n * Semantic meaning for measurements: binds a quantity to its measurement unit.\n * See http://www.qudt.org/pages/QUDToverviewPage.html\n **/\nexport type Measure = {\n   __typename?: 'Measure',\n  /** Added for CommonsPub */\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  /** A number representing the quantity, will be paired with a unit. */\n  hasNumericalValue: Scalars['Float'],\n  /** A unit of measure. */\n  hasUnit: Unit,\n  id: Scalars['ID'],\n};\n\nexport type MeasuresPage = {\n   __typename?: 'MeasuresPage',\n  edges?: Maybe<Array<Measure>>,\n  pageInfo?: Maybe<PageInfo>,\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\n/** Things that can be observed. */\nexport type ObservableObject = EconomicResource | Organization | Person;\n\n/** \n * Possible qualitative assessment of an `ObservableProperty`.\n * (eg. property \"contamination\" may have phenomenon like \"high\", \"some\", \"none\")\n **/\nexport type ObservablePhenomenon = {\n   __typename?: 'ObservablePhenomenon',\n  /** What observable property does this assessment apply to? */\n  choiceOf?: Maybe<ObservableProperty>,\n  /** \n * A numerical representation of this phenomenon, to be used when automatic\n   * analysis is needed (like value calculation formulas).\n **/\n  formulaQuantifier?: Maybe<Scalars['Float']>,\n  id: Scalars['ID'],\n  /** A name for this phenomenon (eg. high, ripe, organic). Unique to each ObservableProperty. */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** \n * Possible qualitative assessment of an `ObservableProperty`.\n * (eg. property \"contamination\" may have phenomenon like \"high\", \"some\", \"none\")\n **/\nexport type ObservablePhenomenonInputParams = {\n  /** What observable property does this assessment apply to? */\n  choiceOf: Scalars['ID'],\n  /** \n * A numerical representation of this phenomenon, to be used when automatic\n   * analysis is needed (like value calculation formulas). For example, a series of\n   * phenomenon of high, medium, low, or none could be assigned formula quantifiers\n   * of 100, 50, 10, or 0.\n **/\n  formulaQuantifier?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['ID']>,\n  /** A name for this phenomenon (eg. high, ripe, organic). Unique to each ObservableProperty. */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ObservablePhenomenonPage = {\n   __typename?: 'ObservablePhenomenonPage',\n  edges: Array<ObservablePhenomenon>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** Types of things that can be observed or measured as part of `Observation`. */\nexport type ObservableProperty = {\n   __typename?: 'ObservableProperty',\n  hasChoices?: Maybe<Array<ObservablePhenomenon>>,\n  id: Scalars['ID'],\n  /** A name for something that can be observed (eg, temperature, weight, contamination...) */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** Types of things that can be observed or measured as part of `Observation`. */\nexport type ObservablePropertyInputParams = {\n  id?: Maybe<Scalars['ID']>,\n  /** A name for something that can be observed (eg, temperature, weight, contamination...) */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ObservablePropertyPage = {\n   __typename?: 'ObservablePropertyPage',\n  edges: Array<ObservableProperty>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** Can contain either a unit+measure or a qualitative assessment. */\nexport type ObservableResult = Measure | ObservablePhenomenon;\n\n/** An observation event that records the measurement or assessement of an economic resource. */\nexport type Observation = {\n   __typename?: 'Observation',\n  /** The place where an observation occured. Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** Thing that was observed (like `EconomicResource` or `Agent`) */\n  hasFeatureOfInterest: ObservableObject,\n  /** \n * The result of the observation, which can be one of:\n   * - Unit and measurement of what was observed (in the case of quantitative measurements)\n   * - Name and other information (using `ObservablePhenomenon`) about what was\n   * observed (in the case of qualitative measurements)\n **/\n  hasResult: ObservableResult,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** \n * The person (`Agent`) or a machine like a sensor (`EconomicResource` or\n   * `ResourceSpecification`) who actually conducted the observation\n **/\n  madeBySensor: Observer,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Optionally defines the economic process during which this event occured */\n  observedDuring?: Maybe<Process>,\n  /** Type of measurement (eg, temperature, weight...). */\n  observedProperty: ObservableProperty,\n  /** The agent who is providing the observation */\n  provider: Agent,\n  /** The date and time at which the observation event. */\n  resultTime: Scalars['DateTime'],\n};\n\nexport type ObservationInputParams = {\n  /** (`SpatialThing`) The place where an observation occured.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource` or `Agent`) Thing that was observed */\n  hasFeatureOfInterest: Scalars['ID'],\n  id?: Maybe<Scalars['ID']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** \n * (`Person` or `EconomicResource` or `ResourceSpecification`) The person or\n   * machine or sensor who actually conducted the observation\n **/\n  madeBySensor?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Optionally defines the economic process during which this event occured */\n  observedDuring?: Maybe<Scalars['ID']>,\n  /** (`ObservableProperty`) Type of measurement (eg, temperature, weight...). */\n  observedProperty: Scalars['ID'],\n  /** (`Person` or `Organization`) The agent who is providing the observation */\n  provider?: Maybe<Scalars['ID']>,\n  /** \n * Alternatively to `resultPhenomenon`: Unit and measurement of what was observed\n   * (only in the case of quantitative measurements)\n **/\n  resultMeasure?: Maybe<IMeasure>,\n  /** \n * Alternatively to `resultMeasure`: (`ObservablePhenomenon`) Name and other\n   * information about what was observed (only in the case of qualitative measurements)\n **/\n  resultPhenomenon?: Maybe<Scalars['ID']>,\n  /** The date and time at which the observation occurred. */\n  resultTime?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ObservationPage = {\n   __typename?: 'ObservationPage',\n  edges: Array<Observation>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** Agent (usually a person) or machine like a sensor that conducts observations. */\nexport type Observer = EconomicResource | Organization | Person | ResourceSpecification;\n\n/** A formal or informal group, or legal organization. */\nexport type Organization = {\n   __typename?: 'Organization',\n  agentType?: Maybe<AgentType>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  commitments?: Maybe<Array<Commitment>>,\n  displayUsername?: Maybe<Scalars['String']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  intents?: Maybe<Array<Intent>>,\n  inventoriedEconomicResources?: Maybe<Array<EconomicResource>>,\n  /** The name that this agent will be referred to by. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  plans?: Maybe<Array<Plan>>,\n  /** \n * The main place an agent is located, often an address where activities occur\n   * and mail can be sent. This is usually a mappable geographic location.  It also\n   * could be a website address, as in the case of agents who have no physical location.\n **/\n  primaryLocation?: Maybe<SpatialThing>,\n  processes?: Maybe<Array<Process>>,\n  proposals?: Maybe<Array<Proposal>>,\n  relationships?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsObject?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsSubject?: Maybe<Array<AgentRelationship>>,\n  roles?: Maybe<Array<AgentRelationshipRole>>,\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationEconomicEventsArgs = {\n  filter?: Maybe<AgentEventSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationInventoriedEconomicResourcesArgs = {\n  filter?: Maybe<AgentResourceSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationPlansArgs = {\n  filter?: Maybe<AgentPlanSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationProcessesArgs = {\n  filter?: Maybe<AgentProcessSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationRelationshipsArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationRelationshipsAsObjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationRelationshipsAsSubjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\nexport type OrganizationResponse = {\n   __typename?: 'OrganizationResponse',\n  agent: Organization,\n};\n\n/** Cursors for pagination */\nexport type PageInfo = {\n   __typename?: 'PageInfo',\n  /** \n * Cursor pointing to the last of the results returned, to be used with `after`\n   * query parameter if the backend supports forward pagination.\n **/\n  endCursor?: Maybe<Array<Scalars['Cursor']>>,\n  /** \n * True if there are more results after `endCursor`. If unable to be determined,\n   * implementations should return `true` to allow for requerying.\n **/\n  hasNextPage?: Maybe<Scalars['Boolean']>,\n  /** \n * True if there are more results before `startCursor`. If unable to be\n   * determined, implementations should return `true` to allow for requerying.\n **/\n  hasPreviousPage?: Maybe<Scalars['Boolean']>,\n  /** \n * Cursor pointing to the first of the results returned, to be used with `before`\n   * query parameter if the backend supports reverse pagination.\n **/\n  startCursor?: Maybe<Array<Scalars['Cursor']>>,\n  /** Returns the total result count, if it can be determined. */\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\nexport type Paginate = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>,\n};\n\n/** A natural person. */\nexport type Person = {\n   __typename?: 'Person',\n  agentType?: Maybe<AgentType>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  commitments?: Maybe<Array<Commitment>>,\n  displayUsername?: Maybe<Scalars['String']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  intents?: Maybe<Array<Intent>>,\n  inventoriedEconomicResources?: Maybe<Array<EconomicResource>>,\n  /** The name that this agent will be referred to by. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  plans?: Maybe<Array<Plan>>,\n  /** \n * The main place an agent is located, often an address where activities occur\n   * and mail can be sent. This is usually a mappable geographic location.  It also\n   * could be a website address, as in the case of agents who have no physical location.\n **/\n  primaryLocation?: Maybe<SpatialThing>,\n  processes?: Maybe<Array<Process>>,\n  proposals?: Maybe<Array<Proposal>>,\n  relationships?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsObject?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsSubject?: Maybe<Array<AgentRelationship>>,\n  roles?: Maybe<Array<AgentRelationshipRole>>,\n};\n\n\n/** A natural person. */\nexport type PersonCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonEconomicEventsArgs = {\n  filter?: Maybe<AgentEventSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonInventoriedEconomicResourcesArgs = {\n  filter?: Maybe<AgentResourceSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonPlansArgs = {\n  filter?: Maybe<AgentPlanSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonProcessesArgs = {\n  filter?: Maybe<AgentProcessSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonRelationshipsArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A natural person. */\nexport type PersonRelationshipsAsObjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A natural person. */\nexport type PersonRelationshipsAsSubjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\nexport type PersonResponse = {\n   __typename?: 'PersonResponse',\n  agent: Person,\n};\n\n/** A logical collection of processes that constitute a body of planned work with defined deliverable(s). */\nexport type Plan = {\n   __typename?: 'Plan',\n  /** The time the plan was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The plan is able to be deleted or not. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** The time the plan is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  independentDemands?: Maybe<Array<Commitment>>,\n  /** An informal or formal textual identifier for a plan. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  processes?: Maybe<Array<Process>>,\n  /** This plan refines a scenario, making it operational. */\n  refinementOf?: Maybe<Scenario>,\n};\n\n\n/** A logical collection of processes that constitute a body of planned work with defined deliverable(s). */\nexport type PlanProcessesArgs = {\n  filter?: Maybe<PlanProcessSearchParams>\n};\n\nexport type PlanCreateParams = {\n  /** The time the plan was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the plan is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** An informal or formal textual identifier for a plan. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This plan refines a scenario, making it operational. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\n/** Query parameters for reading `Process`es related to a `Plan` */\nexport type PlanProcessSearchParams = {\n  after?: Maybe<Scalars['DateTime']>,\n  before?: Maybe<Scalars['DateTime']>,\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\nexport type PlanResponse = {\n   __typename?: 'PlanResponse',\n  plan?: Maybe<Plan>,\n};\n\nexport type PlanUpdateParams = {\n  /** The time the plan was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the plan is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a plan. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This plan refines a scenario, making it operational. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\nexport type Post = {\n   __typename?: 'Post',\n  activity?: Maybe<Activity>,\n  id?: Maybe<Scalars['ID']>,\n  postContent?: Maybe<PostContent>,\n};\n\nexport type PostContent = {\n   __typename?: 'PostContent',\n  htmlBody?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n  title?: Maybe<Scalars['String']>,\n};\n\nexport type PostContentInput = {\n  htmlBody?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n  title?: Maybe<Scalars['String']>,\n};\n\nexport type PostFilters = {\n  id?: Maybe<Scalars['ID']>,\n};\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type Process = {\n   __typename?: 'Process',\n  /** The definition or specification for a process. */\n  basedOn?: Maybe<ProcessSpecification>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  committedInputs?: Maybe<Array<Commitment>>,\n  committedOutputs?: Maybe<Array<Commitment>>,\n  /** The process can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** \n * The process is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the process. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the process. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  inputs?: Maybe<Array<EconomicEvent>>,\n  intendedInputs?: Maybe<Array<Intent>>,\n  intendedOutputs?: Maybe<Array<Intent>>,\n  /** An informal or formal textual identifier for a process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** The process with its inputs and outputs is part of the scenario. */\n  nestedIn?: Maybe<Scenario>,\n  nextProcesses?: Maybe<Array<Process>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  outputs?: Maybe<Array<EconomicEvent>>,\n  /** The process with its inputs and outputs is part of the plan. */\n  plannedWithin?: Maybe<Plan>,\n  previousProcesses?: Maybe<Array<Process>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<AnyContext>>,\n  trace?: Maybe<Array<ProductionFlowItem>>,\n  track?: Maybe<Array<ProductionFlowItem>>,\n  unplannedEconomicEvents?: Maybe<Array<EconomicEvent>>,\n  workingAgents?: Maybe<Array<Agent>>,\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessCommittedInputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessCommittedOutputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessInputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessIntendedInputsArgs = {\n  action?: Maybe<Scalars['ID']>,\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessIntendedOutputsArgs = {\n  action?: Maybe<Scalars['ID']>,\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessOutputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessTraceArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessTrackArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessUnplannedEconomicEventsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\nexport type ProcessCreateParams = {\n  /** (`ProcessSpecification`) The definition or specification for a process. */\n  basedOn?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The process is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the process. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the process. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Plan`) The process with its inputs and outputs is part of the plan. */\n  plannedWithin?: Maybe<Scalars['ID']>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\n/** A page of Processes */\nexport type ProcessPage = {\n   __typename?: 'ProcessPage',\n  edges: Array<Process>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ProcessResponse = {\n   __typename?: 'ProcessResponse',\n  process?: Maybe<Process>,\n};\n\n/** Specifies the kind of process. */\nexport type ProcessSpecification = {\n   __typename?: 'ProcessSpecification',\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for the process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ProcessSpecificationCreateParams = {\n  /** An informal or formal textual identifier for the process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ProcessSpecificationResponse = {\n   __typename?: 'ProcessSpecificationResponse',\n  processSpecification?: Maybe<ProcessSpecification>,\n};\n\nexport type ProcessSpecificationUpdateParams = {\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for the process. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ProcessUpdateParams = {\n  /** (`ProcessSpecification`) The definition or specification for a process. */\n  basedOn?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The process is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the process. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the process. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a process. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Plan`) The process with its inputs and outputs is part of the plan. */\n  plannedWithin?: Maybe<Scalars['ID']>,\n};\n\n/** \n * A lot or batch, defining a resource produced at the same time in the same way.\n * From DataFoodConsortium vocabulary https://datafoodconsortium.gitbook.io/dfc-standard-documentation/.\n **/\nexport type ProductBatch = {\n   __typename?: 'ProductBatch',\n  /** The standard unique identifier of the batch. */\n  batchNumber: Scalars['String'],\n  /** Expiration date of the batch, commonly used for food. */\n  expiryDate?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Date the batch was produced.  Can be derived from the economic event of production. */\n  productionDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ProductBatchCreateParams = {\n  /** The standard unique identifier of the batch. */\n  batchNumber: Scalars['String'],\n  /** Expiration date of the batch, commonly used for food. */\n  expiryDate?: Maybe<Scalars['DateTime']>,\n  /** Date the batch was produced.  Can be derived from the economic event of production. */\n  productionDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ProductBatchResponse = {\n   __typename?: 'ProductBatchResponse',\n  productBatch: ProductBatch,\n};\n\nexport type ProductBatchUpdateParams = {\n  /** The standard unique identifier of the batch. */\n  batchNumber?: Maybe<Scalars['String']>,\n  /** Expiration date of the batch, commonly used for food. */\n  expiryDate?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Date the batch was produced.  Can be derived from the economic event of production. */\n  productionDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ProductionFlowItem = EconomicEvent | EconomicResource | Process;\n\nexport type Profile = {\n   __typename?: 'Profile',\n  icon?: Maybe<Scalars['String']>,\n  image?: Maybe<Scalars['String']>,\n  location?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n  website?: Maybe<Scalars['String']>,\n};\n\nexport type ProfileInput = {\n  location?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n  website?: Maybe<Scalars['String']>,\n};\n\n/** Published requests or offers, sometimes with what is expected in return. */\nexport type Proposal = {\n   __typename?: 'Proposal',\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  /** The date and time the proposal was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  creator?: Maybe<Agent>,\n  /** Location or area where the proposal is valid. */\n  eligibleLocation?: Maybe<SpatialThing>,\n  /** The beginning time of proposal publication. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end time of proposal publication. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** An informal or formal textual identifier for a proposal. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Which Agent(s) (if any were specified) was this proposed to? */\n  publishedTo?: Maybe<Array<ProposedTo>>,\n  /** Intent(s) published as part of to this proposal */\n  publishes?: Maybe<Array<ProposedIntent>>,\n  /** \n * This proposal contains unit based quantities, which can be multipied to create\n   * commitments; commonly seen in a price list or e-commerce.\n **/\n  unitBased?: Maybe<Scalars['Boolean']>,\n};\n\nexport type ProposalCreateParams = {\n  /** The date and time the proposal was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** (`SpatialThing`) The location at which this proposal is eligible. */\n  eligibleLocation?: Maybe<Scalars['ID']>,\n  /** The beginning time of proposal publication. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end time of proposal publication. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a proposal. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * This proposal contains unit based quantities, which can be multipied to create\n   * commitments; commonly seen in a price list or e-commerce.\n **/\n  unitBased?: Maybe<Scalars['Boolean']>,\n};\n\nexport type ProposalResponse = {\n   __typename?: 'ProposalResponse',\n  proposal?: Maybe<Proposal>,\n};\n\n/** A page of proposals */\nexport type ProposalsPage = {\n   __typename?: 'ProposalsPage',\n  edges: Array<Proposal>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ProposalUpdateParams = {\n  /** (`SpatialThing`) The location at which this proposal is eligible. */\n  eligibleLocation?: Maybe<Scalars['ID']>,\n  /** The beginning date/time of proposal publication. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end time of proposal publication. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a proposal. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * This proposal contains unit based quantities, which can be multipied to create\n   * commitments; commonly seen in a price list or e-commerce.\n **/\n  unitBased?: Maybe<Scalars['Boolean']>,\n};\n\n/** \n * Represents many-to-many relationships between Proposals and Intents, supporting\n * including intents in multiple proposals, as well as a proposal including\n * multiple intents.\n **/\nexport type ProposedIntent = {\n   __typename?: 'ProposedIntent',\n  id: Scalars['ID'],\n  /** The published proposal which this intent is part of. */\n  publishedIn: Proposal,\n  /** The intent which is part of this published proposal. */\n  publishes: Intent,\n  /** This is a reciprocal intent of this proposal, not primary. Not meant to be used for intent matching. */\n  reciprocal?: Maybe<Scalars['Boolean']>,\n};\n\nexport type ProposedIntentResponse = {\n   __typename?: 'ProposedIntentResponse',\n  proposedIntent?: Maybe<ProposedIntent>,\n};\n\n/** An agent to which the proposal is to be published.  A proposal can be published to many agents. */\nexport type ProposedTo = {\n   __typename?: 'ProposedTo',\n  id: Scalars['ID'],\n  /** The proposal that is published to a specific agent. */\n  proposed: Proposal,\n  /** The agent to which the proposal is published. */\n  proposedTo: Agent,\n};\n\nexport type ProposedToResponse = {\n   __typename?: 'ProposedToResponse',\n  proposedTo?: Maybe<ProposedTo>,\n};\n\n/** Specifies an exchange agreement as part of a recipe. */\nexport type RecipeExchange = {\n   __typename?: 'RecipeExchange',\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe exchange. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type RecipeExchangeCreateParams = {\n  /** An informal or formal textual identifier for a recipe exchange. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type RecipeExchangeResponse = {\n   __typename?: 'RecipeExchangeResponse',\n  recipeExchange?: Maybe<RecipeExchange>,\n};\n\nexport type RecipeExchangeUpdateParams = {\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe exchange. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** The specification of a resource inflow to, or outflow from, a recipe process. */\nexport type RecipeFlow = {\n   __typename?: 'RecipeFlow',\n  /** Relates a process input or output to a verb, such as consume, produce, work, modify, etc. */\n  action: Action,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The resource definition referenced by this flow in the recipe. */\n  recipeFlowResource?: Maybe<RecipeResource>,\n  /** Relates an input flow to its process in a recipe. */\n  recipeInputOf?: Maybe<RecipeProcess>,\n  /** Relates an output flow to its process in a recipe. */\n  recipeOutputOf?: Maybe<RecipeProcess>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n};\n\nexport type RecipeFlowCreateParams = {\n  /** (`Action`) Relates a process input or output to a verb, such as consume, produce, work, modify, etc. */\n  action: Scalars['ID'],\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`RecipeExchange`) Relates a flow to its exchange agreement in a recipe. */\n  recipeClauseOf?: Maybe<Scalars['ID']>,\n  /** (`RecipeResource`) The resource definition referenced by this flow in the recipe. */\n  recipeFlowResource: Scalars['ID'],\n  /** (`RecipeProcess`) Relates an input flow to its process in a recipe. */\n  recipeInputOf?: Maybe<Scalars['ID']>,\n  /** (`RecipeProcess`) Relates an output flow to its process in a recipe. */\n  recipeOutputOf?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * (`ProcessSpecification`) References the ProcessSpecification of the last\n   * process the economic resource went through. Stage is used when the last\n   * process is important for finding proper resources, such as where the\n   * publishing process wants only documents that have gone through the editing process.\n **/\n  stage?: Maybe<Scalars['ID']>,\n  /** The state of the desired economic resource (pass or fail), after coming out of a test or review process. */\n  state?: Maybe<Scalars['String']>,\n};\n\nexport type RecipeFlowResponse = {\n   __typename?: 'RecipeFlowResponse',\n  recipeFlow?: Maybe<RecipeFlow>,\n};\n\nexport type RecipeFlowUpdateParams = {\n  /** (`Action`) Relates a process input or output to a verb, such as consume, produce, work, modify, etc. */\n  action?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`RecipeResource`) The resource definition referenced by this flow in the recipe. */\n  recipeFlowResource?: Maybe<Scalars['ID']>,\n  /** (`RecipeProcess`) Relates an input flow to its process in a recipe. */\n  recipeInputOf?: Maybe<Scalars['ID']>,\n  /** (`RecipeProcess`) Relates an output flow to its process in a recipe. */\n  recipeOutputOf?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * (`ProcessSpecification`) References the ProcessSpecification of the last\n   * process the economic resource went through. Stage is used when the last\n   * process is important for finding proper resources, such as where the\n   * publishing process wants only documents that have gone through the editing process.\n **/\n  stage?: Maybe<Scalars['ID']>,\n  /** The state of the desired economic resource (pass or fail), after coming out of a test or review process. */\n  state?: Maybe<Scalars['String']>,\n};\n\n/** Specifies a process in a recipe for use in planning from recipe. */\nexport type RecipeProcess = {\n   __typename?: 'RecipeProcess',\n  /** The planned calendar duration of the process as defined for the recipe batch. */\n  hasDuration?: Maybe<Duration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization. */\n  processClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** The standard specification or definition of a process. */\n  processConformsTo?: Maybe<ProcessSpecification>,\n};\n\nexport type RecipeProcessCreateParams = {\n  /** The planned calendar duration of the process as defined for the recipe batch. */\n  hasDuration?: Maybe<IDuration>,\n  /** An informal or formal textual identifier for a recipe process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization. */\n  processClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** (`ProcessSpecification`) The standard specification or definition of a process. */\n  processConformsTo: Scalars['ID'],\n};\n\nexport type RecipeProcessResponse = {\n   __typename?: 'RecipeProcessResponse',\n  recipeProcess?: Maybe<RecipeProcess>,\n};\n\nexport type RecipeProcessUpdateParams = {\n  /** The planned calendar duration of the process as defined for the recipe batch. */\n  hasDuration?: Maybe<IDuration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe process. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization. */\n  processClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** (`ProcessSpecification`) The standard specification or definition of a process. */\n  processConformsTo: Scalars['ID'],\n};\n\n/** Specifies the resource as part of a recipe, for use in planning from recipe. */\nexport type RecipeResource = {\n   __typename?: 'RecipeResource',\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a recipe resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** \n * Defines if any resource of that type can be freely substituted for any other\n   * resource of that type when used, consumed, traded, etc.\n **/\n  substitutable?: Maybe<Scalars['Boolean']>,\n  /** The unit used for use action on this resource or work action in the recipe. */\n  unitOfEffort?: Maybe<Unit>,\n  /** The unit of inventory used for this resource in the recipe. */\n  unitOfResource?: Maybe<Unit>,\n};\n\nexport type RecipeResourceCreateParams = {\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a recipe resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * Defines if any resource of that type can be freely substituted for any other\n   * resource of that type when used, consumed, traded, etc.\n **/\n  substitutable?: Maybe<Scalars['Boolean']>,\n  /** (`Unit`) The unit used for use action on this resource or work action in the recipe. */\n  unitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The unit of inventory used for this resource in the recipe. */\n  unitOfResource?: Maybe<Scalars['ID']>,\n};\n\nexport type RecipeResourceResponse = {\n   __typename?: 'RecipeResourceResponse',\n  recipeResource?: Maybe<RecipeResource>,\n};\n\nexport type RecipeResourceUpdateParams = {\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a recipe resource. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * Defines if any resource of that type can be freely substituted for any other\n   * resource of that type when used, consumed, traded, etc.\n **/\n  substitutable?: Maybe<Scalars['Boolean']>,\n  /** (`Unit`) The unit used for use action on this resource or work action in the recipe. */\n  unitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The unit of inventory used for this resource in the recipe. */\n  unitOfResource?: Maybe<Scalars['ID']>,\n};\n\nexport type Replied = {\n   __typename?: 'Replied',\n  activity?: Maybe<Activity>,\n  directReplies?: Maybe<Array<Maybe<Replied>>>,\n  post?: Maybe<Post>,\n  postContent?: Maybe<PostContent>,\n  replyToId?: Maybe<Scalars['ID']>,\n  threadId?: Maybe<Scalars['ID']>,\n};\n\n\nexport type RepliedDirectRepliesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n/** \n * Specification of a kind of resource. Could define a material item, service, digital item, currency account, etc.\n * Used instead of a classification when more information is needed, particularly for recipes.\n **/\nexport type ResourceSpecification = {\n   __typename?: 'ResourceSpecification',\n  conformingResources?: Maybe<Array<EconomicResource>>,\n  /** The default unit used for use or work. */\n  defaultUnitOfEffort?: Maybe<Unit>,\n  /** The default unit used for the resource itself. */\n  defaultUnitOfResource?: Maybe<Unit>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a type of resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<AnyContext>>,\n};\n\nexport type ResourceSpecificationCreateParams = {\n  /** (`Unit`) The default unit used for use or work. */\n  defaultUnitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The default unit used for the resource itself. */\n  defaultUnitOfResource?: Maybe<Scalars['ID']>,\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a type of resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\nexport type ResourceSpecificationPage = {\n   __typename?: 'ResourceSpecificationPage',\n  edges: Array<ResourceSpecification>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ResourceSpecificationResponse = {\n   __typename?: 'ResourceSpecificationResponse',\n  resourceSpecification?: Maybe<ResourceSpecification>,\n};\n\nexport type ResourceSpecificationUpdateParams = {\n  /** (`Unit`) The default unit used for use or work. */\n  defaultUnitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The default unit used for the resource itself. */\n  defaultUnitOfResource?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a type of resource. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\nexport type RootMutationType = {\n   __typename?: 'RootMutationType',\n  /** \n * Share the current user identity with a team member. This will give them full\n   * access to the currently authenticated user identity. Warning: anyone you add\n   * will have full access over this user identity, meaning they can post as this\n   * user, read private messages, etc.\n **/\n  addTeamMember?: Maybe<Scalars['String']>,\n  boost?: Maybe<Activity>,\n  /** Change account password */\n  changePassword?: Maybe<Me>,\n  /** Confirm email address using a token generated upon `signup` or with `request_confirm_email` and emailed to the user. */\n  confirmEmail?: Maybe<Me>,\n  createAgentRelationship?: Maybe<AgentRelationshipResponse>,\n  createAgentRelationshipRole?: Maybe<AgentRelationshipRoleResponse>,\n  createAgreement?: Maybe<AgreementResponse>,\n  createAppreciation?: Maybe<AppreciationResponse>,\n  /** Create a new Category */\n  createCategory?: Maybe<Category>,\n  createClaim?: Maybe<ClaimResponse>,\n  createCommitment?: Maybe<CommitmentResponse>,\n  createEconomicEvent?: Maybe<EconomicEventResponse>,\n  createFulfillment?: Maybe<FulfillmentResponse>,\n  createIntent?: Maybe<IntentResponse>,\n  /** Creates a new need for the logged in user, will ignore any receiver specified. */\n  createNeed?: Maybe<IntentResponse>,\n  createObservablePhenomenon?: Maybe<ObservablePhenomenon>,\n  createObservableProperty?: Maybe<ObservableProperty>,\n  createObservation: Observation,\n  /** Creates a new offer for the logged in user, will ignore any provider specified. */\n  createOffer?: Maybe<IntentResponse>,\n  /** Registers a new organization (group agent) with the collaboration space */\n  createOrganization?: Maybe<OrganizationResponse>,\n  /** Registers a new (human) person with the collaboration space */\n  createPerson?: Maybe<PersonResponse>,\n  createPlan?: Maybe<PlanResponse>,\n  createPost?: Maybe<Post>,\n  createProcess?: Maybe<ProcessResponse>,\n  createProcessSpecification?: Maybe<ProcessSpecificationResponse>,\n  createProductBatch?: Maybe<ProductBatchResponse>,\n  createProposal?: Maybe<ProposalResponse>,\n  createRecipeExchange?: Maybe<RecipeExchangeResponse>,\n  createRecipeFlow?: Maybe<RecipeFlowResponse>,\n  createRecipeProcess?: Maybe<RecipeProcessResponse>,\n  createRecipeResource?: Maybe<RecipeResourceResponse>,\n  createResourceSpecification?: Maybe<ResourceSpecificationResponse>,\n  createSatisfaction?: Maybe<SatisfactionResponse>,\n  createScenario?: Maybe<ScenarioResponse>,\n  createScenarioDefinition?: Maybe<ScenarioDefinitionResponse>,\n  createSettlement?: Maybe<SettlementResponse>,\n  createSpatialThing?: Maybe<SpatialThingResponse>,\n  createUnit?: Maybe<UnitResponse>,\n  /** Request a new user identity for the authenticated account */\n  createUser?: Maybe<Me>,\n  createValueCalculation?: Maybe<ValueCalculationResponse>,\n  /** Delete more or less anything */\n  delete?: Maybe<AnyContext>,\n  deleteAgentRelationship?: Maybe<Scalars['Boolean']>,\n  deleteAgentRelationshipRole?: Maybe<Scalars['Boolean']>,\n  deleteAgreement?: Maybe<Scalars['Boolean']>,\n  deleteAppreciation?: Maybe<Scalars['Boolean']>,\n  deleteClaim?: Maybe<Scalars['Boolean']>,\n  deleteCommitment?: Maybe<Scalars['Boolean']>,\n  deleteEconomicEvent?: Maybe<Scalars['Boolean']>,\n  deleteEconomicResource?: Maybe<Scalars['Boolean']>,\n  deleteFulfillment?: Maybe<Scalars['Boolean']>,\n  deleteIntent?: Maybe<Scalars['Boolean']>,\n  deleteObservablePhenomenon?: Maybe<Scalars['Boolean']>,\n  deleteObservableProperty?: Maybe<Scalars['Boolean']>,\n  deleteObservation?: Maybe<Scalars['Boolean']>,\n  /** Erase record of an organization and thus remove it from the collaboration space */\n  deleteOrganization?: Maybe<Scalars['Boolean']>,\n  /** Erase record of a person and thus remove them from the collaboration space */\n  deletePerson?: Maybe<Scalars['Boolean']>,\n  deletePlan?: Maybe<Scalars['Boolean']>,\n  deleteProcess?: Maybe<Scalars['Boolean']>,\n  deleteProcessSpecification?: Maybe<Scalars['Boolean']>,\n  deleteProductBatch?: Maybe<Scalars['Boolean']>,\n  deleteProposal?: Maybe<Scalars['Boolean']>,\n  deleteProposedIntent?: Maybe<Scalars['Boolean']>,\n  deleteProposedTo?: Maybe<Scalars['Boolean']>,\n  deleteRecipeExchange?: Maybe<Scalars['Boolean']>,\n  deleteRecipeFlow?: Maybe<Scalars['Boolean']>,\n  deleteRecipeProcess?: Maybe<Scalars['Boolean']>,\n  deleteRecipeResource?: Maybe<Scalars['Boolean']>,\n  deleteResourceSpecification?: Maybe<Scalars['Boolean']>,\n  deleteSatisfaction?: Maybe<Scalars['Boolean']>,\n  deleteScenario?: Maybe<Scalars['Boolean']>,\n  deleteScenarioDefinition?: Maybe<Scalars['Boolean']>,\n  deleteSettlement?: Maybe<Scalars['Boolean']>,\n  deleteSpatialThing?: Maybe<Scalars['Boolean']>,\n  deleteUnit?: Maybe<Scalars['Boolean']>,\n  deleteValueCalculation?: Maybe<Scalars['Boolean']>,\n  flag?: Maybe<Activity>,\n  follow?: Maybe<Activity>,\n  like?: Maybe<Activity>,\n  /** Authenticate an account and/or user */\n  login?: Maybe<LoginResponse>,\n  /** \n * Include an existing intent as part of a proposal.\n   * @param publishedIn the (`Proposal`) to include the intent in\n   * @param publishes the (`Intent`) to include as part of the proposal\n **/\n  proposeIntent?: Maybe<ProposedIntentResponse>,\n  /** \n * Send a proposal to another agent.\n   * @param proposed the (`Proposal`) to send to an involved agent\n   * @param proposedTo the (`Agent`) to include in the proposal\n **/\n  proposeTo?: Maybe<ProposedToResponse>,\n  /** Request a new confirmation email */\n  requestConfirmEmail?: Maybe<Scalars['String']>,\n  /** Request an email to be sent to reset a forgotten password */\n  requestResetPassword?: Maybe<Scalars['String']>,\n  /** Switch to a user (among those from the authenticated account) */\n  selectUser?: Maybe<LoginResponse>,\n  /** Register a new account. Returns the created `account_id` */\n  signup?: Maybe<Scalars['String']>,\n  /** Tag a thing (using a Pointer) with one or more Tags (or Categories, or even Pointers to anything that can become tag) */\n  tag?: Maybe<Scalars['Boolean']>,\n  updateAgentRelationship?: Maybe<AgentRelationshipResponse>,\n  updateAgentRelationshipRole?: Maybe<AgentRelationshipRoleResponse>,\n  updateAgreement?: Maybe<AgreementResponse>,\n  updateAppreciation?: Maybe<AppreciationResponse>,\n  /** Update a category */\n  updateCategory?: Maybe<Category>,\n  updateClaim?: Maybe<ClaimResponse>,\n  updateCommitment?: Maybe<CommitmentResponse>,\n  updateEconomicEvent?: Maybe<EconomicEventResponse>,\n  updateEconomicResource?: Maybe<EconomicResourceResponse>,\n  updateFulfillment?: Maybe<FulfillmentResponse>,\n  updateIntent?: Maybe<IntentResponse>,\n  updateObservablePhenomenon?: Maybe<ObservablePhenomenon>,\n  updateObservableProperty?: Maybe<ObservableProperty>,\n  updateObservation: Observation,\n  /** Update organization profile details */\n  updateOrganization?: Maybe<OrganizationResponse>,\n  /** Update profile details */\n  updatePerson?: Maybe<PersonResponse>,\n  updatePlan?: Maybe<PlanResponse>,\n  updateProcess?: Maybe<ProcessResponse>,\n  updateProcessSpecification?: Maybe<ProcessSpecificationResponse>,\n  updateProductBatch?: Maybe<ProductBatchResponse>,\n  updateProposal?: Maybe<ProposalResponse>,\n  updateRecipeExchange?: Maybe<RecipeExchangeResponse>,\n  updateRecipeFlow?: Maybe<RecipeFlowResponse>,\n  updateRecipeProcess?: Maybe<RecipeProcessResponse>,\n  updateRecipeResource?: Maybe<RecipeResourceResponse>,\n  updateResourceSpecification?: Maybe<ResourceSpecificationResponse>,\n  updateSatisfaction?: Maybe<SatisfactionResponse>,\n  updateScenario?: Maybe<ScenarioResponse>,\n  updateScenarioDefinition?: Maybe<ScenarioDefinitionResponse>,\n  updateSettlement?: Maybe<SettlementResponse>,\n  updateSpatialThing?: Maybe<SpatialThingResponse>,\n  updateUnit?: Maybe<UnitResponse>,\n  /** Edit user profile */\n  updateUser?: Maybe<Me>,\n  updateValueCalculation?: Maybe<ValueCalculationResponse>,\n};\n\n\nexport type RootMutationTypeAddTeamMemberArgs = {\n  label: Scalars['String'],\n  usernameOrEmail: Scalars['String']\n};\n\n\nexport type RootMutationTypeBoostArgs = {\n  id: Scalars['String']\n};\n\n\nexport type RootMutationTypeChangePasswordArgs = {\n  oldPassword?: Maybe<Scalars['String']>,\n  password: Scalars['String'],\n  passwordConfirmation: Scalars['String'],\n  token?: Maybe<Scalars['String']>\n};\n\n\nexport type RootMutationTypeConfirmEmailArgs = {\n  token: Scalars['String']\n};\n\n\nexport type RootMutationTypeCreateAgentRelationshipArgs = {\n  relationship: AgentRelationshipCreateParams\n};\n\n\nexport type RootMutationTypeCreateAgentRelationshipRoleArgs = {\n  agentRelationshipRole?: Maybe<AgentRelationshipRoleCreateParams>\n};\n\n\nexport type RootMutationTypeCreateAgreementArgs = {\n  agreement?: Maybe<AgreementCreateParams>\n};\n\n\nexport type RootMutationTypeCreateAppreciationArgs = {\n  appreciation: AppreciationCreateParams\n};\n\n\nexport type RootMutationTypeCreateCategoryArgs = {\n  category?: Maybe<CategoryInput>\n};\n\n\nexport type RootMutationTypeCreateClaimArgs = {\n  claim: ClaimCreateParams\n};\n\n\nexport type RootMutationTypeCreateCommitmentArgs = {\n  commitment?: Maybe<CommitmentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateEconomicEventArgs = {\n  event: EconomicEventCreateParams,\n  newInventoriedResource?: Maybe<EconomicResourceCreateParams>\n};\n\n\nexport type RootMutationTypeCreateFulfillmentArgs = {\n  fulfillment: FulfillmentCreateParams\n};\n\n\nexport type RootMutationTypeCreateIntentArgs = {\n  intent?: Maybe<IntentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateNeedArgs = {\n  intent?: Maybe<IntentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateObservablePhenomenonArgs = {\n  observablePhenomenon: ObservablePhenomenonInputParams\n};\n\n\nexport type RootMutationTypeCreateObservablePropertyArgs = {\n  observableProperty: ObservablePropertyInputParams\n};\n\n\nexport type RootMutationTypeCreateObservationArgs = {\n  observation: ObservationInputParams\n};\n\n\nexport type RootMutationTypeCreateOfferArgs = {\n  intent?: Maybe<IntentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateOrganizationArgs = {\n  organization: AgentCreateParams\n};\n\n\nexport type RootMutationTypeCreatePersonArgs = {\n  person: AgentCreateParams\n};\n\n\nexport type RootMutationTypeCreatePlanArgs = {\n  plan: PlanCreateParams\n};\n\n\nexport type RootMutationTypeCreatePostArgs = {\n  postContent: PostContentInput,\n  replyTo?: Maybe<Scalars['ID']>,\n  toCircles?: Maybe<Array<Maybe<Scalars['ID']>>>\n};\n\n\nexport type RootMutationTypeCreateProcessArgs = {\n  process: ProcessCreateParams\n};\n\n\nexport type RootMutationTypeCreateProcessSpecificationArgs = {\n  processSpecification?: Maybe<ProcessSpecificationCreateParams>\n};\n\n\nexport type RootMutationTypeCreateProductBatchArgs = {\n  productBatch: ProductBatchCreateParams\n};\n\n\nexport type RootMutationTypeCreateProposalArgs = {\n  proposal?: Maybe<ProposalCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeExchangeArgs = {\n  recipeExchange?: Maybe<RecipeExchangeCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeFlowArgs = {\n  recipeFlow?: Maybe<RecipeFlowCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeProcessArgs = {\n  recipeProcess?: Maybe<RecipeProcessCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeResourceArgs = {\n  recipeResource?: Maybe<RecipeResourceCreateParams>\n};\n\n\nexport type RootMutationTypeCreateResourceSpecificationArgs = {\n  resourceSpecification?: Maybe<ResourceSpecificationCreateParams>\n};\n\n\nexport type RootMutationTypeCreateSatisfactionArgs = {\n  satisfaction?: Maybe<SatisfactionCreateParams>\n};\n\n\nexport type RootMutationTypeCreateScenarioArgs = {\n  plan: ScenarioCreateParams\n};\n\n\nexport type RootMutationTypeCreateScenarioDefinitionArgs = {\n  plan: ScenarioDefinitionCreateParams\n};\n\n\nexport type RootMutationTypeCreateSettlementArgs = {\n  settlement: SettlementCreateParams\n};\n\n\nexport type RootMutationTypeCreateSpatialThingArgs = {\n  inScopeOf?: Maybe<Scalars['ID']>,\n  spatialThing: SpatialThingCreateParams\n};\n\n\nexport type RootMutationTypeCreateUnitArgs = {\n  unit: UnitCreateParams\n};\n\n\nexport type RootMutationTypeCreateUserArgs = {\n  character: CharacterInput,\n  images?: Maybe<ImagesUpload>,\n  profile: ProfileInput\n};\n\n\nexport type RootMutationTypeCreateValueCalculationArgs = {\n  valueCalculation: ValueCalculationCreateParams\n};\n\n\nexport type RootMutationTypeDeleteArgs = {\n  contextId: Scalars['String']\n};\n\n\nexport type RootMutationTypeDeleteAgentRelationshipArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteAgentRelationshipRoleArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteAgreementArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteAppreciationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteClaimArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteCommitmentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteEconomicEventArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteEconomicResourceArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteFulfillmentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteIntentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteObservablePhenomenonArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteObservablePropertyArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteObservationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteOrganizationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeletePersonArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeletePlanArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProcessArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProcessSpecificationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProductBatchArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProposalArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProposedIntentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProposedToArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeExchangeArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeFlowArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeProcessArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeResourceArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteResourceSpecificationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteSatisfactionArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteScenarioArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteScenarioDefinitionArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteSettlementArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteSpatialThingArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteUnitArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteValueCalculationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeFlagArgs = {\n  id: Scalars['String']\n};\n\n\nexport type RootMutationTypeFollowArgs = {\n  id: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type RootMutationTypeLikeArgs = {\n  id: Scalars['String']\n};\n\n\nexport type RootMutationTypeLoginArgs = {\n  emailOrUsername: Scalars['String'],\n  password: Scalars['String']\n};\n\n\nexport type RootMutationTypeProposeIntentArgs = {\n  publishedIn: Scalars['ID'],\n  publishes: Scalars['ID'],\n  reciprocal?: Maybe<Scalars['Boolean']>\n};\n\n\nexport type RootMutationTypeProposeToArgs = {\n  proposed: Scalars['ID'],\n  proposedTo: Scalars['ID']\n};\n\n\nexport type RootMutationTypeRequestConfirmEmailArgs = {\n  email: Scalars['String'],\n  url?: Maybe<Scalars['String']>\n};\n\n\nexport type RootMutationTypeRequestResetPasswordArgs = {\n  email: Scalars['String'],\n  url?: Maybe<Scalars['String']>\n};\n\n\nexport type RootMutationTypeSelectUserArgs = {\n  username: Scalars['String']\n};\n\n\nexport type RootMutationTypeSignupArgs = {\n  email: Scalars['String'],\n  inviteCode?: Maybe<Scalars['String']>,\n  password: Scalars['String'],\n  url?: Maybe<Scalars['String']>\n};\n\n\nexport type RootMutationTypeTagArgs = {\n  tags: Array<Maybe<Scalars['String']>>,\n  thing: Scalars['String']\n};\n\n\nexport type RootMutationTypeUpdateAgentRelationshipArgs = {\n  relationship: AgentRelationshipUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateAgentRelationshipRoleArgs = {\n  agentRelationshipRole?: Maybe<AgentRelationshipRoleUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateAgreementArgs = {\n  agreement?: Maybe<AgreementUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateAppreciationArgs = {\n  appreciation: AppreciationUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateCategoryArgs = {\n  category?: Maybe<CategoryInput>,\n  categoryId?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootMutationTypeUpdateClaimArgs = {\n  claim: ClaimUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateCommitmentArgs = {\n  commitment?: Maybe<CommitmentUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateEconomicEventArgs = {\n  event: EconomicEventUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateEconomicResourceArgs = {\n  resource: EconomicResourceUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateFulfillmentArgs = {\n  fulfillment: FulfillmentUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateIntentArgs = {\n  intent?: Maybe<IntentUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateObservablePhenomenonArgs = {\n  observablePhenomenon: ObservablePhenomenonInputParams\n};\n\n\nexport type RootMutationTypeUpdateObservablePropertyArgs = {\n  observableProperty: ObservablePropertyInputParams\n};\n\n\nexport type RootMutationTypeUpdateObservationArgs = {\n  observation: ObservationInputParams\n};\n\n\nexport type RootMutationTypeUpdateOrganizationArgs = {\n  organization: AgentUpdateParams\n};\n\n\nexport type RootMutationTypeUpdatePersonArgs = {\n  person: AgentUpdateParams\n};\n\n\nexport type RootMutationTypeUpdatePlanArgs = {\n  plan: PlanUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateProcessArgs = {\n  process: ProcessUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateProcessSpecificationArgs = {\n  processSpecification?: Maybe<ProcessSpecificationUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateProductBatchArgs = {\n  productBatch: ProductBatchUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateProposalArgs = {\n  proposal?: Maybe<ProposalUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeExchangeArgs = {\n  recipeExchange?: Maybe<RecipeExchangeUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeFlowArgs = {\n  recipeFlow?: Maybe<RecipeFlowUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeProcessArgs = {\n  recipeProcess?: Maybe<RecipeProcessUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeResourceArgs = {\n  recipeResource?: Maybe<RecipeResourceUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateResourceSpecificationArgs = {\n  resourceSpecification?: Maybe<ResourceSpecificationUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateSatisfactionArgs = {\n  satisfaction?: Maybe<SatisfactionUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateScenarioArgs = {\n  plan: ScenarioUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateScenarioDefinitionArgs = {\n  plan: ScenarioDefinitionUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateSettlementArgs = {\n  s0ettlement: SettlementUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateSpatialThingArgs = {\n  spatialThing: SpatialThingUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateUnitArgs = {\n  unit: UnitUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateUserArgs = {\n  images?: Maybe<ImagesUpload>,\n  profile?: Maybe<ProfileInput>\n};\n\n\nexport type RootMutationTypeUpdateValueCalculationArgs = {\n  valueCalculation: ValueCalculationUpdateParams\n};\n\nexport type RootQueryType = {\n   __typename?: 'RootQueryType',\n  action?: Maybe<Action>,\n  actions?: Maybe<Array<Action>>,\n  /** Get an activity */\n  activity?: Maybe<Activity>,\n  /** Find an agent (person or organization) by their ID */\n  agent?: Maybe<Agent>,\n  /** Retrieve details of an agent relationship by its ID */\n  agentRelationship?: Maybe<AgentRelationship>,\n  /** Retrieve details of an agent relationship role by its ID */\n  agentRelationshipRole?: Maybe<AgentRelationshipRole>,\n  /** Retrieve all possible kinds of associations that agents may have with one another in this collaboration space */\n  agentRelationshipRoles?: Maybe<Array<AgentRelationshipRole>>,\n  /** Retrieve details of all the relationships between all agents registered in this collaboration space */\n  agentRelationships?: Maybe<Array<AgentRelationship>>,\n  /** Loads all agents publicly registered within this collaboration space */\n  agents?: Maybe<Array<Agent>>,\n  agreement?: Maybe<Agreement>,\n  agreements?: Maybe<Array<Agreement>>,\n  /** Get list of categories we know about */\n  categories: CategoriesPage,\n  /** Get a category by ID */\n  category?: Maybe<Category>,\n  claim?: Maybe<Claim>,\n  claims?: Maybe<Array<Claim>>,\n  commitment?: Maybe<Commitment>,\n  commitments?: Maybe<Array<Commitment>>,\n  economicEvent?: Maybe<EconomicEvent>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  economicEventsFiltered?: Maybe<Array<EconomicEvent>>,\n  /** Get paginated list of economic events */\n  economicEventsPages: EconomicEventPage,\n  economicResource?: Maybe<EconomicResource>,\n  economicResources?: Maybe<Array<EconomicResource>>,\n  /** TEMPORARY - get filtered but non-paginated list of resources */\n  economicResourcesFiltered?: Maybe<Array<Maybe<EconomicResource>>>,\n  /** Get paginated list of economic resources */\n  economicResourcesPages: EconomicResourcePage,\n  /** Get activities in a feed */\n  feed?: Maybe<Array<Maybe<Activity>>>,\n  fulfillment?: Maybe<Fulfillment>,\n  fulfillments?: Maybe<Array<Fulfillment>>,\n  intent?: Maybe<Intent>,\n  intents?: Maybe<Array<Intent>>,\n  /** Get paginated list of intents */\n  intentsPages: IntentsPage,\n  /** Get information about and for the current account and/or user */\n  me?: Maybe<Me>,\n  measure?: Maybe<Measure>,\n  measures?: Maybe<Array<Measure>>,\n  measuresPages: MeasuresPage,\n  /** Loads details of the currently authenticated REA agent */\n  myAgent?: Maybe<Agent>,\n  /** Get paginated list of active needs (intents with no provider) */\n  needsPages: IntentsPage,\n  observablePhenomenon?: Maybe<ObservablePhenomenon>,\n  /** Get paginated list of observable phenomenon */\n  observablePhenomenonPages: ObservablePhenomenonPage,\n  observablePhenomenons?: Maybe<Array<ObservablePhenomenon>>,\n  observableProperties?: Maybe<Array<ObservableProperty>>,\n  /** Get paginated list of observable properties */\n  observablePropertiesPages: ObservablePropertyPage,\n  observableProperty?: Maybe<ObservableProperty>,\n  observation?: Maybe<Observation>,\n  observations?: Maybe<Array<Observation>>,\n  /** Get paginated list of observations */\n  observationsPages: ObservationPage,\n  /** Get paginated list of active offers (intents with no receiver) */\n  offersPages: IntentsPage,\n  /** Find an organization (group) agent by its ID */\n  organization?: Maybe<Organization>,\n  /** Loads all organizations publicly registered within this collaboration space */\n  organizations?: Maybe<Array<Organization>>,\n  /** Get paginated list of organizations */\n  organizationsPages: AgentsPage,\n  /** Loads all people who have publicly registered with this collaboration space. */\n  people?: Maybe<Array<Person>>,\n  /** Get paginated list of people */\n  peoplePages: AgentsPage,\n  /** Find a person by their ID */\n  person?: Maybe<Person>,\n  plan?: Maybe<Plan>,\n  plans?: Maybe<Array<Plan>>,\n  /** Get a post */\n  post?: Maybe<Post>,\n  /** Get all posts */\n  posts?: Maybe<Array<Maybe<Post>>>,\n  process?: Maybe<Process>,\n  processSpecification?: Maybe<ProcessSpecification>,\n  processSpecifications?: Maybe<Array<ProcessSpecification>>,\n  processes?: Maybe<Array<Process>>,\n  /** Get paginated list of processes */\n  processesPages: ProcessPage,\n  productBatch?: Maybe<ProductBatch>,\n  productBatches?: Maybe<Array<ProductBatch>>,\n  proposal?: Maybe<Proposal>,\n  proposals?: Maybe<Array<Proposal>>,\n  /** TEMPORARY - get filtered but non-paginated list of proposals */\n  proposalsFiltered?: Maybe<Array<Maybe<Proposal>>>,\n  /** Get paginated list of proposals */\n  proposalsPages: ProposalsPage,\n  recipeExchange?: Maybe<RecipeExchange>,\n  recipeExchanges?: Maybe<Array<RecipeExchange>>,\n  recipeFlow?: Maybe<RecipeFlow>,\n  recipeFlows?: Maybe<Array<RecipeFlow>>,\n  recipeProcess?: Maybe<RecipeProcess>,\n  recipeProcesses?: Maybe<Array<RecipeProcess>>,\n  recipeResource?: Maybe<RecipeResource>,\n  recipeResources?: Maybe<Array<RecipeResource>>,\n  resourceSpecification?: Maybe<ResourceSpecification>,\n  resourceSpecifications?: Maybe<Array<ResourceSpecification>>,\n  /** Get paginated list of resource specifications */\n  resourceSpecificationsPages: ResourceSpecificationPage,\n  satisfaction?: Maybe<Satisfaction>,\n  satisfactions?: Maybe<Array<Satisfaction>>,\n  scenario?: Maybe<Scenario>,\n  scenarioDefinition?: Maybe<ScenarioDefinition>,\n  scenarioDefinitions?: Maybe<Array<ScenarioDefinition>>,\n  scenarios?: Maybe<Array<Scenario>>,\n  settlement?: Maybe<Settlement>,\n  settlements?: Maybe<Array<Settlement>>,\n  spatialThing?: Maybe<SpatialThing>,\n  spatialThings?: Maybe<Array<SpatialThing>>,\n  spatialThingsPages: SpatialThingsPage,\n  /** Get a tag by ID */\n  tag?: Maybe<Tag>,\n  unit?: Maybe<Unit>,\n  units?: Maybe<Array<Unit>>,\n  unitsPages: UnitsPage,\n  /** Get a user */\n  user?: Maybe<User>,\n  valueCalculation?: Maybe<ValueCalculation>,\n  valueCalculationsPages: ValueCalculationPage,\n};\n\n\nexport type RootQueryTypeActionArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeActivityArgs = {\n  filter?: Maybe<ActivityFilters>\n};\n\n\nexport type RootQueryTypeAgentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipRoleArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipRolesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgreementArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgreementsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeCategoriesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeCategoryArgs = {\n  categoryId?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeClaimArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeClaimsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeCommitmentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>,\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicEventArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicEventsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicEventsFilteredArgs = {\n  action?: Maybe<Scalars['ID']>,\n  endDate?: Maybe<Scalars['String']>,\n  providerId?: Maybe<Scalars['ID']>,\n  receiverId?: Maybe<Scalars['ID']>,\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  startDate?: Maybe<Scalars['String']>\n};\n\n\nexport type RootQueryTypeEconomicEventsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeEconomicResourceArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicResourcesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicResourcesFilteredArgs = {\n  agent?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  currentLocation?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  geolocation?: Maybe<GeolocationFilters>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  state?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  tagIds?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  trackingIdentifier?: Maybe<Array<Maybe<Scalars['String']>>>\n};\n\n\nexport type RootQueryTypeEconomicResourcesPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeFeedArgs = {\n  filter?: Maybe<FeedFilters>,\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type RootQueryTypeFulfillmentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeFulfillmentsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeIntentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>,\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeIntentsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeMeasureArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeMeasuresArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeMeasuresPagesArgs = {\n  after?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  before?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeNeedsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeObservablePhenomenonArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservablePhenomenonPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeObservablePhenomenonsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservablePropertiesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservablePropertiesPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeObservablePropertyArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  agent?: Maybe<Array<Scalars['ID']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  hasFeatureOfInterest?: Maybe<Array<Scalars['ID']>>,\n  limit?: Maybe<Scalars['Int']>,\n  madeBySensor?: Maybe<Array<Scalars['ID']>>,\n  observedDuring?: Maybe<Array<Scalars['ID']>>,\n  observedProperty?: Maybe<Array<Scalars['ID']>>,\n  provider?: Maybe<Array<Scalars['ID']>>\n};\n\n\nexport type RootQueryTypeOffersPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeOrganizationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeOrganizationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeOrganizationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypePeopleArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePeoplePagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypePersonArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePlanArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePlansArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePostArgs = {\n  filter?: Maybe<PostFilters>\n};\n\n\nexport type RootQueryTypeProcessArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessSpecificationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessSpecificationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessesPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeProductBatchArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProductBatchesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProposalArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProposalsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProposalsFilteredArgs = {\n  agent?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  atLocation?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  geolocation?: Maybe<GeolocationFilters>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>\n};\n\n\nexport type RootQueryTypeProposalsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeRecipeExchangeArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeExchangesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeFlowArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeFlowsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeProcessArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeProcessesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeResourceArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeResourcesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeResourceSpecificationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeResourceSpecificationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeResourceSpecificationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  limit?: Maybe<Scalars['Int']>,\n  tagIds?: Maybe<Array<Maybe<Scalars['ID']>>>\n};\n\n\nexport type RootQueryTypeSatisfactionArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSatisfactionsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenarioArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenarioDefinitionArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenarioDefinitionsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenariosArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSettlementArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSettlementsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSpatialThingArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSpatialThingsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSpatialThingsPagesArgs = {\n  after?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  before?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeTagArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeUnitArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeUnitsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeUnitsPagesArgs = {\n  after?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  before?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeUserArgs = {\n  filter?: Maybe<CharacterFilters>\n};\n\n\nexport type RootQueryTypeValueCalculationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeValueCalculationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\nexport type RootSubscriptionType = {\n   __typename?: 'RootSubscriptionType',\n  intentCreated?: Maybe<Intent>,\n};\n\n\nexport type RootSubscriptionTypeIntentCreatedArgs = {\n  context?: Maybe<Scalars['String']>\n};\n\n/** \n * Represents many-to-many relationships between intents and commitments or events\n * that partially or full satisfy one or more intents.\n **/\nexport type Satisfaction = {\n   __typename?: 'Satisfaction',\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** A commitment or economic event fully or partially satisfying an intent. */\n  satisfiedBy: EventOrCommitment,\n  /** An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies: Intent,\n};\n\nexport type SatisfactionCreateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`Commitment`|`EconomicEvent`) A commitment or economic event fully or partially satisfying an intent. */\n  satisfiedBy: Scalars['ID'],\n  /** (`Intent`) An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies: Scalars['ID'],\n};\n\nexport type SatisfactionResponse = {\n   __typename?: 'SatisfactionResponse',\n  satisfaction?: Maybe<Satisfaction>,\n};\n\nexport type SatisfactionUpdateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`Commitment`|`EconomicEvent`) A commitment or economic event fully or partially satisfying an intent. */\n  satisfiedBy?: Maybe<Scalars['ID']>,\n  /** (`Intent`) An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies?: Maybe<Scalars['ID']>,\n};\n\n/** An estimated or analytical logical collection of higher level processes used for budgeting, analysis, plan refinement, etc. */\nexport type Scenario = {\n   __typename?: 'Scenario',\n  /** The scenario definition for this scenario, for example yearly budget. */\n  definedAs?: Maybe<ScenarioDefinition>,\n  /** The beginning date/time of the scenario, often the beginning of an accounting period. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The ending date/time of the scenario, often the end of an accounting period. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** An informal or formal textual identifier for a scenario. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** This scenario refines another scenario, often as time moves closer or for more detail. */\n  refinementOf?: Maybe<Scenario>,\n};\n\nexport type ScenarioCreateParams = {\n  /** (`ScenarioDefinition`) The scenario definition for this scenario, for example yearly budget. */\n  definedAs: Scalars['ID'],\n  /** The beginning date/time of the scenario, often the beginning of an accounting period. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The ending date/time of the scenario, often the end of an accounting period. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a scenario. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This scenario refines another scenario, often as time moves closer or for more detail. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\n/** The type definition of one or more scenarios, such as Yearly Budget. */\nexport type ScenarioDefinition = {\n   __typename?: 'ScenarioDefinition',\n  /** The duration of the scenario, often an accounting period. */\n  hasDuration?: Maybe<Duration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a scenario definition. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ScenarioDefinitionCreateParams = {\n  /** The duration of the scenario, often an accounting period. */\n  hasDuration?: Maybe<IDuration>,\n  /** An informal or formal textual identifier for a scenario definition. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ScenarioDefinitionResponse = {\n   __typename?: 'ScenarioDefinitionResponse',\n  scenarioDefinition?: Maybe<ScenarioDefinition>,\n};\n\nexport type ScenarioDefinitionUpdateParams = {\n  /** The duration of the scenario, often an accounting period. */\n  hasDuration?: Maybe<IDuration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a scenario definition. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ScenarioResponse = {\n   __typename?: 'ScenarioResponse',\n  scenario?: Maybe<Scenario>,\n};\n\nexport type ScenarioUpdateParams = {\n  /** (`ScenarioDefinition`) The scenario definition for this scenario, for example yearly budget. */\n  definedAs: Scalars['ID'],\n  /** The beginning date/time of the scenario, often the beginning of an accounting period. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The ending date/time of the scenario, often the end of an accounting period. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a scenario. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This scenario refines another scenario, often as time moves closer or for more detail. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\n/** Represents many-to-many relationships between claim and economic events that fully or partially settle one or more claims. */\nexport type Settlement = {\n   __typename?: 'Settlement',\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** The economic event fully or partially settling a claim. */\n  settledBy: EconomicEvent,\n  /** A claim which is fully or partially settled by an economic event. */\n  settles: Claim,\n};\n\nexport type SettlementCreateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event fully or partially settling a claim. */\n  settledBy: Scalars['ID'],\n  /** (`Claim`) A claim which is fully or partially settled by an economic event. */\n  settles: Scalars['ID'],\n};\n\nexport type SettlementResponse = {\n   __typename?: 'SettlementResponse',\n  settlement?: Maybe<Settlement>,\n};\n\nexport type SettlementUpdateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event fully or partially settling a claim. */\n  settledBy?: Maybe<Scalars['ID']>,\n  /** (`Claim`) A claim which is fully or partially settled by an economic event. */\n  settles?: Maybe<Scalars['ID']>,\n};\n\n/** A physical mappable location. */\nexport type SpatialThing = {\n   __typename?: 'SpatialThing',\n  /** Altitude. */\n  alt?: Maybe<Scalars['Float']>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  displayUsername?: Maybe<Scalars['String']>,\n  geom?: Maybe<Scalars['Json']>,\n  id: Scalars['ID'],\n  inScopeOf?: Maybe<AnyContext>,\n  /** Latitude. */\n  lat?: Maybe<Scalars['Float']>,\n  /** Longitude. */\n  long?: Maybe<Scalars['Float']>,\n  /** An address that will be recognized as mappable by mapping software. */\n  mappableAddress?: Maybe<Scalars['String']>,\n  /** An informal or formal textual identifier for a location. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type SpatialThingCreateParams = {\n  /** Altitude. */\n  alt?: Maybe<Scalars['Float']>,\n  /** Latitude. */\n  lat?: Maybe<Scalars['Float']>,\n  /** Longitude. */\n  long?: Maybe<Scalars['Float']>,\n  /** An address that will be recognized as mappable by mapping software. */\n  mappableAddress?: Maybe<Scalars['String']>,\n  /** An informal or formal textual identifier for a location. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type SpatialThingResponse = {\n   __typename?: 'SpatialThingResponse',\n  spatialThing?: Maybe<SpatialThing>,\n};\n\nexport type SpatialThingsPage = {\n   __typename?: 'SpatialThingsPage',\n  edges?: Maybe<Array<Maybe<SpatialThing>>>,\n  pageInfo?: Maybe<PageInfo>,\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\nexport type SpatialThingUpdateParams = {\n  /** Altitude. */\n  alt?: Maybe<Scalars['Float']>,\n  id: Scalars['ID'],\n  /** Latitude. */\n  lat?: Maybe<Scalars['Float']>,\n  /** Longitude. */\n  long?: Maybe<Scalars['Float']>,\n  /** An address that will be recognized as mappable by mapping software. */\n  mappableAddress?: Maybe<Scalars['String']>,\n  /** An informal or formal textual identifier for a location. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** A tag could be a category or hashtag or user or community or etc */\nexport type Tag = {\n   __typename?: 'Tag',\n  /** Unique URL (on original instance) */\n  canonicalUrl?: Maybe<Scalars['String']>,\n  /** The object used as a tag (eg. Category, Geolocation, Hashtag, User...) */\n  context?: Maybe<AnyContext>,\n  /** Unique URL (on original instance) */\n  displayUsername?: Maybe<Scalars['String']>,\n  /** The primary key of the tag */\n  id?: Maybe<Scalars['ID']>,\n  /** Name of the tag (derived from its context) */\n  name?: Maybe<Scalars['String']>,\n  /** Description of the tag (derived from its context) */\n  summary?: Maybe<Scalars['String']>,\n  /** Objects that were tagged with this tag */\n  tagged?: Maybe<Array<Maybe<AnyContext>>>,\n};\n\n/** Defines the unit of time measured in a temporal `Duration`. */\nexport enum TimeUnit {\n  Day = 'day',\n  Hour = 'hour',\n  Minute = 'minute',\n  Month = 'month',\n  Second = 'second',\n  Week = 'week',\n  Year = 'year'\n}\n\n/** \n * Defines a unit of measurement, along with its display symbol.\n * From OM2 vocabulary.\n **/\nexport type Unit = {\n   __typename?: 'Unit',\n  /** Added for CommonsPub */\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  id: Scalars['ID'],\n  inScopeOf?: Maybe<AnyContext>,\n  /** A human readable label for the unit, can be language specific. */\n  label: Scalars['String'],\n  /** A standard display symbol for a unit of measure. */\n  symbol: Scalars['String'],\n};\n\nexport type UnitCreateParams = {\n  inScopeOf?: Maybe<Scalars['ID']>,\n  /** A human readable label for the unit, can be language specific. */\n  label: Scalars['String'],\n  /** A standard display symbol for a unit of measure. */\n  symbol: Scalars['String'],\n};\n\nexport type UnitResponse = {\n   __typename?: 'UnitResponse',\n  unit?: Maybe<Unit>,\n};\n\nexport type UnitsPage = {\n   __typename?: 'UnitsPage',\n  edges?: Maybe<Array<Unit>>,\n  pageInfo?: Maybe<PageInfo>,\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\nexport type UnitUpdateParams = {\n  /** The primary key of the unit to update. */\n  id: Scalars['ID'],\n  /** A human readable label for the unit, can be language specific. */\n  label?: Maybe<Scalars['String']>,\n  /** A standard display symbol for a unit of measure. */\n  symbol?: Maybe<Scalars['String']>,\n};\n\n\n\nexport type User = {\n   __typename?: 'User',\n  boostActivities?: Maybe<Array<Maybe<Activity>>>,\n  character?: Maybe<Character>,\n  id?: Maybe<Scalars['ID']>,\n  isInstanceAdmin?: Maybe<Scalars['Boolean']>,\n  posts?: Maybe<Array<Maybe<Post>>>,\n  profile?: Maybe<Profile>,\n  userActivities?: Maybe<Array<Maybe<Activity>>>,\n};\n\n\nexport type UserBoostActivitiesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type UserPostsArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type UserUserActivitiesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n/** A calculation performed using custom formulas for a certain context. */\nexport type ValueCalculation = {\n   __typename?: 'ValueCalculation',\n  /** Relates a value calculation to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  formula: Scalars['String'],\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** An informal or formal textual identifier for an item. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping. */\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** Used to filter valueCalculations to find the one that matches the event. */\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** Relates a value calculation to a verb, like action, but for the related event. */\n  valueAction: Action,\n  /** The resource specification the event will apply to. */\n  valueResourceConformsTo?: Maybe<ResourceSpecification>,\n  /** References the unit used for the event. */\n  valueUnit: Unit,\n};\n\nexport type ValueCalculationCreateParams = {\n  action: Scalars['ID'],\n  formula: Scalars['String'],\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  name?: Maybe<Scalars['String']>,\n  note?: Maybe<Scalars['String']>,\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  valueAction: Scalars['ID'],\n  valueResourceConformsTo?: Maybe<Scalars['ID']>,\n  valueUnit: Scalars['ID'],\n};\n\nexport type ValueCalculationPage = {\n   __typename?: 'ValueCalculationPage',\n  edges: Array<ValueCalculation>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ValueCalculationResponse = {\n   __typename?: 'ValueCalculationResponse',\n  valueCalculation?: Maybe<ValueCalculation>,\n};\n\nexport type ValueCalculationUpdateParams = {\n  action?: Maybe<Scalars['ID']>,\n  formula?: Maybe<Scalars['String']>,\n  id: Scalars['ID'],\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  name?: Maybe<Scalars['String']>,\n  note?: Maybe<Scalars['String']>,\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  valueAction?: Maybe<Scalars['ID']>,\n  valueResourceConformsTo?: Maybe<Scalars['ID']>,\n  valueUnit?: Maybe<Scalars['ID']>,\n};\n\nexport type Verb = {\n   __typename?: 'Verb',\n  verb?: Maybe<Scalars['String']>,\n  verbDisplay?: Maybe<Scalars['String']>,\n};\n\n\n      export interface IntrospectionResultData {\n        __schema: {\n          types: {\n            kind: string;\n            name: string;\n            possibleTypes: {\n              name: string;\n            }[];\n          }[];\n        };\n      }\n\n      const result: IntrospectionResultData = {\n  \"__schema\": {\n    \"types\": [\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"AnyContext\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Activity\"\n          },\n          {\n            \"name\": \"Category\"\n          },\n          {\n            \"name\": \"EconomicEvent\"\n          },\n          {\n            \"name\": \"Intent\"\n          },\n          {\n            \"name\": \"Post\"\n          },\n          {\n            \"name\": \"Process\"\n          },\n          {\n            \"name\": \"SpatialThing\"\n          },\n          {\n            \"name\": \"Tag\"\n          },\n          {\n            \"name\": \"User\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"AccountingScope\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Category\"\n          },\n          {\n            \"name\": \"Organization\"\n          },\n          {\n            \"name\": \"Person\"\n          },\n          {\n            \"name\": \"Tag\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"INTERFACE\",\n        \"name\": \"Agent\",\n        \"possibleTypes\": []\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"ProductionFlowItem\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"EconomicEvent\"\n          },\n          {\n            \"name\": \"EconomicResource\"\n          },\n          {\n            \"name\": \"Process\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"EventOrCommitment\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Commitment\"\n          },\n          {\n            \"name\": \"EconomicEvent\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"AnyCharacter\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Category\"\n          },\n          {\n            \"name\": \"SpatialThing\"\n          },\n          {\n            \"name\": \"User\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"ObservableObject\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"EconomicResource\"\n          },\n          {\n            \"name\": \"Organization\"\n          },\n          {\n            \"name\": \"Person\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"ObservableResult\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Measure\"\n          },\n          {\n            \"name\": \"ObservablePhenomenon\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"Observer\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"EconomicResource\"\n          },\n          {\n            \"name\": \"Organization\"\n          },\n          {\n            \"name\": \"Person\"\n          },\n          {\n            \"name\": \"ResourceSpecification\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\n      export default result;\n    \n\n\nexport type ResolverTypeWrapper<T> = Promise<T> | T;\n\nexport type ResolverFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Promise<TResult> | TResult;\n\n\nexport type StitchingResolver<TResult, TParent, TContext, TArgs> = {\n  fragment: string;\n  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\n\nexport type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> =\n  | ResolverFn<TResult, TParent, TContext, TArgs>\n  | StitchingResolver<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => AsyncIterator<TResult> | Promise<AsyncIterator<TResult>>;\n\nexport type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\nexport interface SubscriptionSubscriberObject<TResult, TKey extends string, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<{ [key in TKey]: TResult }, TParent, TContext, TArgs>;\n  resolve?: SubscriptionResolveFn<TResult, { [key in TKey]: TResult }, TContext, TArgs>;\n}\n\nexport interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;\n  resolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;\n}\n\nexport type SubscriptionObject<TResult, TKey extends string, TParent, TContext, TArgs> =\n  | SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>\n  | SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionResolver<TResult, TKey extends string, TParent = {}, TContext = {}, TArgs = {}> =\n  | ((...args: any[]) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)\n  | SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;\n\nexport type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (\n  parent: TParent,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Maybe<TTypes>;\n\nexport type NextResolverFn<T> = () => Promise<T>;\n\nexport type DirectiveResolverFn<TResult = {}, TParent = {}, TContext = {}, TArgs = {}> = (\n  next: NextResolverFn<TResult>,\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\n/** Mapping between all available schema types and the resolvers types */\nexport type ResolversTypes = {\n  RootQueryType: ResolverTypeWrapper<{}>,\n  ID: ResolverTypeWrapper<Scalars['ID']>,\n  Action: ResolverTypeWrapper<Action>,\n  String: ResolverTypeWrapper<Scalars['String']>,\n  ActivityFilters: ActivityFilters,\n  Activity: ResolverTypeWrapper<Omit<Activity, 'object' | 'subject'> & { object?: Maybe<ResolversTypes['AnyContext']>, subject?: Maybe<ResolversTypes['AnyCharacter']> }>,\n  Paginate: Paginate,\n  Cursor: ResolverTypeWrapper<Scalars['Cursor']>,\n  Int: ResolverTypeWrapper<Scalars['Int']>,\n  Replied: ResolverTypeWrapper<Replied>,\n  Post: ResolverTypeWrapper<Post>,\n  PostContent: ResolverTypeWrapper<PostContent>,\n  AnyContext: ResolversTypes['Activity'] | ResolversTypes['Category'] | ResolversTypes['EconomicEvent'] | ResolversTypes['Intent'] | ResolversTypes['Post'] | ResolversTypes['Process'] | ResolversTypes['SpatialThing'] | ResolversTypes['Tag'] | ResolversTypes['User'],\n  Category: ResolverTypeWrapper<Omit<Category, 'caretaker'> & { caretaker?: Maybe<ResolversTypes['AnyContext']> }>,\n  Json: ResolverTypeWrapper<Scalars['Json']>,\n  CategoriesPage: ResolverTypeWrapper<CategoriesPage>,\n  PageInfo: ResolverTypeWrapper<PageInfo>,\n  Boolean: ResolverTypeWrapper<Scalars['Boolean']>,\n  EconomicEvent: ResolverTypeWrapper<Omit<EconomicEvent, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, trace?: Maybe<Array<ResolversTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversTypes['ProductionFlowItem']>> }>,\n  URI: ResolverTypeWrapper<Scalars['URI']>,\n  Appreciation: ResolverTypeWrapper<Appreciation>,\n  SpatialThing: ResolverTypeWrapper<Omit<SpatialThing, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversTypes['AnyContext']> }>,\n  Float: ResolverTypeWrapper<Scalars['Float']>,\n  ValueCalculation: ResolverTypeWrapper<Omit<ValueCalculation, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  AccountingScope: ResolversTypes['Category'] | ResolversTypes['Organization'] | ResolversTypes['Person'] | ResolversTypes['Tag'],\n  Organization: ResolverTypeWrapper<Omit<Organization, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  AgentType: AgentType,\n  agentCommitmentSearchParams: AgentCommitmentSearchParams,\n  DateTime: ResolverTypeWrapper<Scalars['DateTime']>,\n  Commitment: ResolverTypeWrapper<Omit<Commitment, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  Agreement: ResolverTypeWrapper<Agreement>,\n  Agent: ResolverTypeWrapper<Agent>,\n  agentEventSearchParams: AgentEventSearchParams,\n  IntentSearchParams: IntentSearchParams,\n  GeolocationFilters: GeolocationFilters,\n  GeolocationDistance: GeolocationDistance,\n  GeolocationPoint: GeolocationPoint,\n  Intent: ResolverTypeWrapper<Omit<Intent, 'inScopeOf' | 'tags'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversTypes['AnyContext']>>> }>,\n  Measure: ResolverTypeWrapper<Measure>,\n  Unit: ResolverTypeWrapper<Omit<Unit, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversTypes['AnyContext']> }>,\n  Process: ResolverTypeWrapper<Omit<Process, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, tags?: Maybe<Array<ResolversTypes['AnyContext']>>, trace?: Maybe<Array<ResolversTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversTypes['ProductionFlowItem']>> }>,\n  ProcessSpecification: ResolverTypeWrapper<ProcessSpecification>,\n  Scenario: ResolverTypeWrapper<Omit<Scenario, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  ScenarioDefinition: ResolverTypeWrapper<ScenarioDefinition>,\n  Duration: ResolverTypeWrapper<Duration>,\n  TimeUnit: TimeUnit,\n  Plan: ResolverTypeWrapper<Omit<Plan, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  planProcessSearchParams: PlanProcessSearchParams,\n  ProductionFlowItem: ResolversTypes['EconomicEvent'] | ResolversTypes['EconomicResource'] | ResolversTypes['Process'],\n  EconomicResource: ResolverTypeWrapper<Omit<EconomicResource, 'tags' | 'trace' | 'track'> & { tags?: Maybe<Array<ResolversTypes['AnyContext']>>, trace?: Maybe<Array<ResolversTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversTypes['ProductionFlowItem']>> }>,\n  ResourceSpecification: ResolverTypeWrapper<Omit<ResourceSpecification, 'tags'> & { tags?: Maybe<Array<ResolversTypes['AnyContext']>> }>,\n  ProductBatch: ResolverTypeWrapper<ProductBatch>,\n  ProposedIntent: ResolverTypeWrapper<ProposedIntent>,\n  Proposal: ResolverTypeWrapper<Omit<Proposal, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  ProposedTo: ResolverTypeWrapper<ProposedTo>,\n  Satisfaction: ResolverTypeWrapper<Omit<Satisfaction, 'satisfiedBy'> & { satisfiedBy: ResolversTypes['EventOrCommitment'] }>,\n  EventOrCommitment: ResolversTypes['Commitment'] | ResolversTypes['EconomicEvent'],\n  agentResourceSearchParams: AgentResourceSearchParams,\n  agentPlanSearchParams: AgentPlanSearchParams,\n  agentProcessSearchParams: AgentProcessSearchParams,\n  AgentRelationship: ResolverTypeWrapper<Omit<AgentRelationship, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  AgentRelationshipRole: ResolverTypeWrapper<AgentRelationshipRole>,\n  Fulfillment: ResolverTypeWrapper<Fulfillment>,\n  Person: ResolverTypeWrapper<Person>,\n  Tag: ResolverTypeWrapper<Omit<Tag, 'context' | 'tagged'> & { context?: Maybe<ResolversTypes['AnyContext']>, tagged?: Maybe<Array<Maybe<ResolversTypes['AnyContext']>>> }>,\n  User: ResolverTypeWrapper<User>,\n  Character: ResolverTypeWrapper<Character>,\n  Profile: ResolverTypeWrapper<Profile>,\n  AnyCharacter: ResolversTypes['Category'] | ResolversTypes['SpatialThing'] | ResolversTypes['User'],\n  Verb: ResolverTypeWrapper<Verb>,\n  Claim: ResolverTypeWrapper<Omit<Claim, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  EconomicEventPage: ResolverTypeWrapper<EconomicEventPage>,\n  EconomicResourcePage: ResolverTypeWrapper<EconomicResourcePage>,\n  FeedFilters: FeedFilters,\n  IntentsPage: ResolverTypeWrapper<IntentsPage>,\n  Me: ResolverTypeWrapper<Me>,\n  MeasuresPage: ResolverTypeWrapper<MeasuresPage>,\n  ObservablePhenomenon: ResolverTypeWrapper<ObservablePhenomenon>,\n  ObservableProperty: ResolverTypeWrapper<ObservableProperty>,\n  ObservablePhenomenonPage: ResolverTypeWrapper<ObservablePhenomenonPage>,\n  ObservablePropertyPage: ResolverTypeWrapper<ObservablePropertyPage>,\n  Observation: ResolverTypeWrapper<Omit<Observation, 'hasFeatureOfInterest' | 'hasResult' | 'inScopeOf' | 'madeBySensor'> & { hasFeatureOfInterest: ResolversTypes['ObservableObject'], hasResult: ResolversTypes['ObservableResult'], inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, madeBySensor: ResolversTypes['Observer'] }>,\n  ObservableObject: ResolversTypes['EconomicResource'] | ResolversTypes['Organization'] | ResolversTypes['Person'],\n  ObservableResult: ResolversTypes['Measure'] | ResolversTypes['ObservablePhenomenon'],\n  Observer: ResolversTypes['EconomicResource'] | ResolversTypes['Organization'] | ResolversTypes['Person'] | ResolversTypes['ResourceSpecification'],\n  ObservationPage: ResolverTypeWrapper<ObservationPage>,\n  AgentsPage: ResolverTypeWrapper<AgentsPage>,\n  PostFilters: PostFilters,\n  ProcessPage: ResolverTypeWrapper<ProcessPage>,\n  ProposalsPage: ResolverTypeWrapper<ProposalsPage>,\n  RecipeExchange: ResolverTypeWrapper<RecipeExchange>,\n  RecipeFlow: ResolverTypeWrapper<RecipeFlow>,\n  RecipeResource: ResolverTypeWrapper<RecipeResource>,\n  RecipeProcess: ResolverTypeWrapper<RecipeProcess>,\n  ResourceSpecificationPage: ResolverTypeWrapper<ResourceSpecificationPage>,\n  Settlement: ResolverTypeWrapper<Settlement>,\n  SpatialThingsPage: ResolverTypeWrapper<SpatialThingsPage>,\n  UnitsPage: ResolverTypeWrapper<UnitsPage>,\n  CharacterFilters: CharacterFilters,\n  ValueCalculationPage: ResolverTypeWrapper<ValueCalculationPage>,\n  RootMutationType: ResolverTypeWrapper<{}>,\n  AgentRelationshipCreateParams: AgentRelationshipCreateParams,\n  AgentRelationshipResponse: ResolverTypeWrapper<AgentRelationshipResponse>,\n  AgentRelationshipRoleCreateParams: AgentRelationshipRoleCreateParams,\n  AgentRelationshipRoleResponse: ResolverTypeWrapper<AgentRelationshipRoleResponse>,\n  AgreementCreateParams: AgreementCreateParams,\n  AgreementResponse: ResolverTypeWrapper<AgreementResponse>,\n  AppreciationCreateParams: AppreciationCreateParams,\n  AppreciationResponse: ResolverTypeWrapper<AppreciationResponse>,\n  CategoryInput: CategoryInput,\n  ClaimCreateParams: ClaimCreateParams,\n  IMeasure: IMeasure,\n  ClaimResponse: ResolverTypeWrapper<ClaimResponse>,\n  CommitmentCreateParams: CommitmentCreateParams,\n  CommitmentResponse: ResolverTypeWrapper<CommitmentResponse>,\n  EconomicEventCreateParams: EconomicEventCreateParams,\n  EconomicResourceCreateParams: EconomicResourceCreateParams,\n  EconomicEventResponse: ResolverTypeWrapper<EconomicEventResponse>,\n  FulfillmentCreateParams: FulfillmentCreateParams,\n  FulfillmentResponse: ResolverTypeWrapper<FulfillmentResponse>,\n  IntentCreateParams: IntentCreateParams,\n  IntentResponse: ResolverTypeWrapper<IntentResponse>,\n  ObservablePhenomenonInputParams: ObservablePhenomenonInputParams,\n  ObservablePropertyInputParams: ObservablePropertyInputParams,\n  ObservationInputParams: ObservationInputParams,\n  AgentCreateParams: AgentCreateParams,\n  OrganizationResponse: ResolverTypeWrapper<OrganizationResponse>,\n  PersonResponse: ResolverTypeWrapper<PersonResponse>,\n  PlanCreateParams: PlanCreateParams,\n  PlanResponse: ResolverTypeWrapper<PlanResponse>,\n  PostContentInput: PostContentInput,\n  ProcessCreateParams: ProcessCreateParams,\n  ProcessResponse: ResolverTypeWrapper<ProcessResponse>,\n  ProcessSpecificationCreateParams: ProcessSpecificationCreateParams,\n  ProcessSpecificationResponse: ResolverTypeWrapper<ProcessSpecificationResponse>,\n  ProductBatchCreateParams: ProductBatchCreateParams,\n  ProductBatchResponse: ResolverTypeWrapper<ProductBatchResponse>,\n  ProposalCreateParams: ProposalCreateParams,\n  ProposalResponse: ResolverTypeWrapper<ProposalResponse>,\n  RecipeExchangeCreateParams: RecipeExchangeCreateParams,\n  RecipeExchangeResponse: ResolverTypeWrapper<RecipeExchangeResponse>,\n  RecipeFlowCreateParams: RecipeFlowCreateParams,\n  RecipeFlowResponse: ResolverTypeWrapper<RecipeFlowResponse>,\n  RecipeProcessCreateParams: RecipeProcessCreateParams,\n  IDuration: IDuration,\n  RecipeProcessResponse: ResolverTypeWrapper<RecipeProcessResponse>,\n  RecipeResourceCreateParams: RecipeResourceCreateParams,\n  RecipeResourceResponse: ResolverTypeWrapper<RecipeResourceResponse>,\n  ResourceSpecificationCreateParams: ResourceSpecificationCreateParams,\n  ResourceSpecificationResponse: ResolverTypeWrapper<ResourceSpecificationResponse>,\n  SatisfactionCreateParams: SatisfactionCreateParams,\n  SatisfactionResponse: ResolverTypeWrapper<SatisfactionResponse>,\n  ScenarioCreateParams: ScenarioCreateParams,\n  ScenarioResponse: ResolverTypeWrapper<ScenarioResponse>,\n  ScenarioDefinitionCreateParams: ScenarioDefinitionCreateParams,\n  ScenarioDefinitionResponse: ResolverTypeWrapper<ScenarioDefinitionResponse>,\n  SettlementCreateParams: SettlementCreateParams,\n  SettlementResponse: ResolverTypeWrapper<SettlementResponse>,\n  SpatialThingCreateParams: SpatialThingCreateParams,\n  SpatialThingResponse: ResolverTypeWrapper<SpatialThingResponse>,\n  UnitCreateParams: UnitCreateParams,\n  UnitResponse: ResolverTypeWrapper<UnitResponse>,\n  CharacterInput: CharacterInput,\n  ImagesUpload: ImagesUpload,\n  Upload: ResolverTypeWrapper<Scalars['Upload']>,\n  ProfileInput: ProfileInput,\n  ValueCalculationCreateParams: ValueCalculationCreateParams,\n  ValueCalculationResponse: ResolverTypeWrapper<ValueCalculationResponse>,\n  LoginResponse: ResolverTypeWrapper<LoginResponse>,\n  ProposedIntentResponse: ResolverTypeWrapper<ProposedIntentResponse>,\n  ProposedToResponse: ResolverTypeWrapper<ProposedToResponse>,\n  AgentRelationshipUpdateParams: AgentRelationshipUpdateParams,\n  AgentRelationshipRoleUpdateParams: AgentRelationshipRoleUpdateParams,\n  AgreementUpdateParams: AgreementUpdateParams,\n  AppreciationUpdateParams: AppreciationUpdateParams,\n  ClaimUpdateParams: ClaimUpdateParams,\n  CommitmentUpdateParams: CommitmentUpdateParams,\n  EconomicEventUpdateParams: EconomicEventUpdateParams,\n  EconomicResourceUpdateParams: EconomicResourceUpdateParams,\n  EconomicResourceResponse: ResolverTypeWrapper<EconomicResourceResponse>,\n  FulfillmentUpdateParams: FulfillmentUpdateParams,\n  IntentUpdateParams: IntentUpdateParams,\n  AgentUpdateParams: AgentUpdateParams,\n  PlanUpdateParams: PlanUpdateParams,\n  ProcessUpdateParams: ProcessUpdateParams,\n  ProcessSpecificationUpdateParams: ProcessSpecificationUpdateParams,\n  ProductBatchUpdateParams: ProductBatchUpdateParams,\n  ProposalUpdateParams: ProposalUpdateParams,\n  RecipeExchangeUpdateParams: RecipeExchangeUpdateParams,\n  RecipeFlowUpdateParams: RecipeFlowUpdateParams,\n  RecipeProcessUpdateParams: RecipeProcessUpdateParams,\n  RecipeResourceUpdateParams: RecipeResourceUpdateParams,\n  ResourceSpecificationUpdateParams: ResourceSpecificationUpdateParams,\n  SatisfactionUpdateParams: SatisfactionUpdateParams,\n  ScenarioUpdateParams: ScenarioUpdateParams,\n  ScenarioDefinitionUpdateParams: ScenarioDefinitionUpdateParams,\n  SettlementUpdateParams: SettlementUpdateParams,\n  SpatialThingUpdateParams: SpatialThingUpdateParams,\n  UnitUpdateParams: UnitUpdateParams,\n  ValueCalculationUpdateParams: ValueCalculationUpdateParams,\n  RootSubscriptionType: ResolverTypeWrapper<{}>,\n};\n\n/** Mapping between all available schema types and the resolvers parents */\nexport type ResolversParentTypes = {\n  RootQueryType: {},\n  ID: Scalars['ID'],\n  Action: Action,\n  String: Scalars['String'],\n  ActivityFilters: ActivityFilters,\n  Activity: Omit<Activity, 'object' | 'subject'> & { object?: Maybe<ResolversParentTypes['AnyContext']>, subject?: Maybe<ResolversParentTypes['AnyCharacter']> },\n  Paginate: Paginate,\n  Cursor: Scalars['Cursor'],\n  Int: Scalars['Int'],\n  Replied: Replied,\n  Post: Post,\n  PostContent: PostContent,\n  AnyContext: ResolversParentTypes['Activity'] | ResolversParentTypes['Category'] | ResolversParentTypes['EconomicEvent'] | ResolversParentTypes['Intent'] | ResolversParentTypes['Post'] | ResolversParentTypes['Process'] | ResolversParentTypes['SpatialThing'] | ResolversParentTypes['Tag'] | ResolversParentTypes['User'],\n  Category: Omit<Category, 'caretaker'> & { caretaker?: Maybe<ResolversParentTypes['AnyContext']> },\n  Json: Scalars['Json'],\n  CategoriesPage: CategoriesPage,\n  PageInfo: PageInfo,\n  Boolean: Scalars['Boolean'],\n  EconomicEvent: Omit<EconomicEvent, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversParentTypes['AnyContext']>>>, trace?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>> },\n  URI: Scalars['URI'],\n  Appreciation: Appreciation,\n  SpatialThing: Omit<SpatialThing, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversParentTypes['AnyContext']> },\n  Float: Scalars['Float'],\n  ValueCalculation: Omit<ValueCalculation, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  AccountingScope: ResolversParentTypes['Category'] | ResolversParentTypes['Organization'] | ResolversParentTypes['Person'] | ResolversParentTypes['Tag'],\n  Organization: Omit<Organization, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  AgentType: AgentType,\n  agentCommitmentSearchParams: AgentCommitmentSearchParams,\n  DateTime: Scalars['DateTime'],\n  Commitment: Omit<Commitment, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  Agreement: Agreement,\n  Agent: Agent,\n  agentEventSearchParams: AgentEventSearchParams,\n  IntentSearchParams: IntentSearchParams,\n  GeolocationFilters: GeolocationFilters,\n  GeolocationDistance: GeolocationDistance,\n  GeolocationPoint: GeolocationPoint,\n  Intent: Omit<Intent, 'inScopeOf' | 'tags'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversParentTypes['AnyContext']>>> },\n  Measure: Measure,\n  Unit: Omit<Unit, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversParentTypes['AnyContext']> },\n  Process: Omit<Process, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, tags?: Maybe<Array<ResolversParentTypes['AnyContext']>>, trace?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>> },\n  ProcessSpecification: ProcessSpecification,\n  Scenario: Omit<Scenario, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  ScenarioDefinition: ScenarioDefinition,\n  Duration: Duration,\n  TimeUnit: TimeUnit,\n  Plan: Omit<Plan, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  planProcessSearchParams: PlanProcessSearchParams,\n  ProductionFlowItem: ResolversParentTypes['EconomicEvent'] | ResolversParentTypes['EconomicResource'] | ResolversParentTypes['Process'],\n  EconomicResource: Omit<EconomicResource, 'tags' | 'trace' | 'track'> & { tags?: Maybe<Array<ResolversParentTypes['AnyContext']>>, trace?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>> },\n  ResourceSpecification: Omit<ResourceSpecification, 'tags'> & { tags?: Maybe<Array<ResolversParentTypes['AnyContext']>> },\n  ProductBatch: ProductBatch,\n  ProposedIntent: ProposedIntent,\n  Proposal: Omit<Proposal, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  ProposedTo: ProposedTo,\n  Satisfaction: Omit<Satisfaction, 'satisfiedBy'> & { satisfiedBy: ResolversParentTypes['EventOrCommitment'] },\n  EventOrCommitment: ResolversParentTypes['Commitment'] | ResolversParentTypes['EconomicEvent'],\n  agentResourceSearchParams: AgentResourceSearchParams,\n  agentPlanSearchParams: AgentPlanSearchParams,\n  agentProcessSearchParams: AgentProcessSearchParams,\n  AgentRelationship: Omit<AgentRelationship, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  AgentRelationshipRole: AgentRelationshipRole,\n  Fulfillment: Fulfillment,\n  Person: Person,\n  Tag: Omit<Tag, 'context' | 'tagged'> & { context?: Maybe<ResolversParentTypes['AnyContext']>, tagged?: Maybe<Array<Maybe<ResolversParentTypes['AnyContext']>>> },\n  User: User,\n  Character: Character,\n  Profile: Profile,\n  AnyCharacter: ResolversParentTypes['Category'] | ResolversParentTypes['SpatialThing'] | ResolversParentTypes['User'],\n  Verb: Verb,\n  Claim: Omit<Claim, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  EconomicEventPage: EconomicEventPage,\n  EconomicResourcePage: EconomicResourcePage,\n  FeedFilters: FeedFilters,\n  IntentsPage: IntentsPage,\n  Me: Me,\n  MeasuresPage: MeasuresPage,\n  ObservablePhenomenon: ObservablePhenomenon,\n  ObservableProperty: ObservableProperty,\n  ObservablePhenomenonPage: ObservablePhenomenonPage,\n  ObservablePropertyPage: ObservablePropertyPage,\n  Observation: Omit<Observation, 'hasFeatureOfInterest' | 'hasResult' | 'inScopeOf' | 'madeBySensor'> & { hasFeatureOfInterest: ResolversParentTypes['ObservableObject'], hasResult: ResolversParentTypes['ObservableResult'], inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, madeBySensor: ResolversParentTypes['Observer'] },\n  ObservableObject: ResolversParentTypes['EconomicResource'] | ResolversParentTypes['Organization'] | ResolversParentTypes['Person'],\n  ObservableResult: ResolversParentTypes['Measure'] | ResolversParentTypes['ObservablePhenomenon'],\n  Observer: ResolversParentTypes['EconomicResource'] | ResolversParentTypes['Organization'] | ResolversParentTypes['Person'] | ResolversParentTypes['ResourceSpecification'],\n  ObservationPage: ObservationPage,\n  AgentsPage: AgentsPage,\n  PostFilters: PostFilters,\n  ProcessPage: ProcessPage,\n  ProposalsPage: ProposalsPage,\n  RecipeExchange: RecipeExchange,\n  RecipeFlow: RecipeFlow,\n  RecipeResource: RecipeResource,\n  RecipeProcess: RecipeProcess,\n  ResourceSpecificationPage: ResourceSpecificationPage,\n  Settlement: Settlement,\n  SpatialThingsPage: SpatialThingsPage,\n  UnitsPage: UnitsPage,\n  CharacterFilters: CharacterFilters,\n  ValueCalculationPage: ValueCalculationPage,\n  RootMutationType: {},\n  AgentRelationshipCreateParams: AgentRelationshipCreateParams,\n  AgentRelationshipResponse: AgentRelationshipResponse,\n  AgentRelationshipRoleCreateParams: AgentRelationshipRoleCreateParams,\n  AgentRelationshipRoleResponse: AgentRelationshipRoleResponse,\n  AgreementCreateParams: AgreementCreateParams,\n  AgreementResponse: AgreementResponse,\n  AppreciationCreateParams: AppreciationCreateParams,\n  AppreciationResponse: AppreciationResponse,\n  CategoryInput: CategoryInput,\n  ClaimCreateParams: ClaimCreateParams,\n  IMeasure: IMeasure,\n  ClaimResponse: ClaimResponse,\n  CommitmentCreateParams: CommitmentCreateParams,\n  CommitmentResponse: CommitmentResponse,\n  EconomicEventCreateParams: EconomicEventCreateParams,\n  EconomicResourceCreateParams: EconomicResourceCreateParams,\n  EconomicEventResponse: EconomicEventResponse,\n  FulfillmentCreateParams: FulfillmentCreateParams,\n  FulfillmentResponse: FulfillmentResponse,\n  IntentCreateParams: IntentCreateParams,\n  IntentResponse: IntentResponse,\n  ObservablePhenomenonInputParams: ObservablePhenomenonInputParams,\n  ObservablePropertyInputParams: ObservablePropertyInputParams,\n  ObservationInputParams: ObservationInputParams,\n  AgentCreateParams: AgentCreateParams,\n  OrganizationResponse: OrganizationResponse,\n  PersonResponse: PersonResponse,\n  PlanCreateParams: PlanCreateParams,\n  PlanResponse: PlanResponse,\n  PostContentInput: PostContentInput,\n  ProcessCreateParams: ProcessCreateParams,\n  ProcessResponse: ProcessResponse,\n  ProcessSpecificationCreateParams: ProcessSpecificationCreateParams,\n  ProcessSpecificationResponse: ProcessSpecificationResponse,\n  ProductBatchCreateParams: ProductBatchCreateParams,\n  ProductBatchResponse: ProductBatchResponse,\n  ProposalCreateParams: ProposalCreateParams,\n  ProposalResponse: ProposalResponse,\n  RecipeExchangeCreateParams: RecipeExchangeCreateParams,\n  RecipeExchangeResponse: RecipeExchangeResponse,\n  RecipeFlowCreateParams: RecipeFlowCreateParams,\n  RecipeFlowResponse: RecipeFlowResponse,\n  RecipeProcessCreateParams: RecipeProcessCreateParams,\n  IDuration: IDuration,\n  RecipeProcessResponse: RecipeProcessResponse,\n  RecipeResourceCreateParams: RecipeResourceCreateParams,\n  RecipeResourceResponse: RecipeResourceResponse,\n  ResourceSpecificationCreateParams: ResourceSpecificationCreateParams,\n  ResourceSpecificationResponse: ResourceSpecificationResponse,\n  SatisfactionCreateParams: SatisfactionCreateParams,\n  SatisfactionResponse: SatisfactionResponse,\n  ScenarioCreateParams: ScenarioCreateParams,\n  ScenarioResponse: ScenarioResponse,\n  ScenarioDefinitionCreateParams: ScenarioDefinitionCreateParams,\n  ScenarioDefinitionResponse: ScenarioDefinitionResponse,\n  SettlementCreateParams: SettlementCreateParams,\n  SettlementResponse: SettlementResponse,\n  SpatialThingCreateParams: SpatialThingCreateParams,\n  SpatialThingResponse: SpatialThingResponse,\n  UnitCreateParams: UnitCreateParams,\n  UnitResponse: UnitResponse,\n  CharacterInput: CharacterInput,\n  ImagesUpload: ImagesUpload,\n  Upload: Scalars['Upload'],\n  ProfileInput: ProfileInput,\n  ValueCalculationCreateParams: ValueCalculationCreateParams,\n  ValueCalculationResponse: ValueCalculationResponse,\n  LoginResponse: LoginResponse,\n  ProposedIntentResponse: ProposedIntentResponse,\n  ProposedToResponse: ProposedToResponse,\n  AgentRelationshipUpdateParams: AgentRelationshipUpdateParams,\n  AgentRelationshipRoleUpdateParams: AgentRelationshipRoleUpdateParams,\n  AgreementUpdateParams: AgreementUpdateParams,\n  AppreciationUpdateParams: AppreciationUpdateParams,\n  ClaimUpdateParams: ClaimUpdateParams,\n  CommitmentUpdateParams: CommitmentUpdateParams,\n  EconomicEventUpdateParams: EconomicEventUpdateParams,\n  EconomicResourceUpdateParams: EconomicResourceUpdateParams,\n  EconomicResourceResponse: EconomicResourceResponse,\n  FulfillmentUpdateParams: FulfillmentUpdateParams,\n  IntentUpdateParams: IntentUpdateParams,\n  AgentUpdateParams: AgentUpdateParams,\n  PlanUpdateParams: PlanUpdateParams,\n  ProcessUpdateParams: ProcessUpdateParams,\n  ProcessSpecificationUpdateParams: ProcessSpecificationUpdateParams,\n  ProductBatchUpdateParams: ProductBatchUpdateParams,\n  ProposalUpdateParams: ProposalUpdateParams,\n  RecipeExchangeUpdateParams: RecipeExchangeUpdateParams,\n  RecipeFlowUpdateParams: RecipeFlowUpdateParams,\n  RecipeProcessUpdateParams: RecipeProcessUpdateParams,\n  RecipeResourceUpdateParams: RecipeResourceUpdateParams,\n  ResourceSpecificationUpdateParams: ResourceSpecificationUpdateParams,\n  SatisfactionUpdateParams: SatisfactionUpdateParams,\n  ScenarioUpdateParams: ScenarioUpdateParams,\n  ScenarioDefinitionUpdateParams: ScenarioDefinitionUpdateParams,\n  SettlementUpdateParams: SettlementUpdateParams,\n  SpatialThingUpdateParams: SpatialThingUpdateParams,\n  UnitUpdateParams: UnitUpdateParams,\n  ValueCalculationUpdateParams: ValueCalculationUpdateParams,\n  RootSubscriptionType: {},\n};\n\nexport type AccountingScopeResolvers<ContextType = any, ParentType extends ResolversParentTypes['AccountingScope'] = ResolversParentTypes['AccountingScope']> = {\n  __resolveType: TypeResolveFn<'Category' | 'Organization' | 'Person' | 'Tag', ParentType, ContextType>\n};\n\nexport type ActionResolvers<ContextType = any, ParentType extends ResolversParentTypes['Action'] = ResolversParentTypes['Action']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inputOutput?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  onhandEffect?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  pairsWith?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceEffect?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n};\n\nexport type ActivityResolvers<ContextType = any, ParentType extends ResolversParentTypes['Activity'] = ResolversParentTypes['Activity']> = {\n  directReplies?: Resolver<Maybe<Array<Maybe<ResolversTypes['Replied']>>>, ParentType, ContextType, ActivityDirectRepliesArgs>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  object?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  objectId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  subject?: Resolver<Maybe<ResolversTypes['AnyCharacter']>, ParentType, ContextType>,\n  subjectId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  verb?: Resolver<Maybe<ResolversTypes['Verb']>, ParentType, ContextType>,\n};\n\nexport type AgentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Agent'] = ResolversParentTypes['Agent']> = {\n  __resolveType: TypeResolveFn<null, ParentType, ContextType>,\n  agentType?: Resolver<Maybe<ResolversTypes['AgentType']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, AgentCommitmentsArgs>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, AgentEconomicEventsArgs>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, AgentIntentsArgs>,\n  inventoriedEconomicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, AgentInventoriedEconomicResourcesArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, AgentPlansArgs>,\n  primaryLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, AgentProcessesArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType>,\n  relationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, AgentRelationshipsArgs>,\n  relationshipsAsObject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, AgentRelationshipsAsObjectArgs>,\n  relationshipsAsSubject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, AgentRelationshipsAsSubjectArgs>,\n  roles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType>,\n};\n\nexport type AgentRelationshipResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationship'] = ResolversParentTypes['AgentRelationship']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  object?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  relationship?: Resolver<ResolversTypes['AgentRelationshipRole'], ParentType, ContextType>,\n  subject?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n};\n\nexport type AgentRelationshipResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationshipResponse'] = ResolversParentTypes['AgentRelationshipResponse']> = {\n  agentRelationship?: Resolver<ResolversTypes['AgentRelationship'], ParentType, ContextType>,\n};\n\nexport type AgentRelationshipRoleResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationshipRole'] = ResolversParentTypes['AgentRelationshipRole']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inverseRoleLabel?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  roleLabel?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n};\n\nexport type AgentRelationshipRoleResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationshipRoleResponse'] = ResolversParentTypes['AgentRelationshipRoleResponse']> = {\n  agentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRole']>, ParentType, ContextType>,\n};\n\nexport type AgentsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentsPage'] = ResolversParentTypes['AgentsPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Agent']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type AgreementResolvers<ContextType = any, ParentType extends ResolversParentTypes['Agreement'] = ResolversParentTypes['Agreement']> = {\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  involvedAgents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type AgreementResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgreementResponse'] = ResolversParentTypes['AgreementResponse']> = {\n  agreement?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType>,\n};\n\nexport type AnyCharacterResolvers<ContextType = any, ParentType extends ResolversParentTypes['AnyCharacter'] = ResolversParentTypes['AnyCharacter']> = {\n  __resolveType: TypeResolveFn<'Category' | 'SpatialThing' | 'User', ParentType, ContextType>\n};\n\nexport type AnyContextResolvers<ContextType = any, ParentType extends ResolversParentTypes['AnyContext'] = ResolversParentTypes['AnyContext']> = {\n  __resolveType: TypeResolveFn<'Activity' | 'Category' | 'EconomicEvent' | 'Intent' | 'Post' | 'Process' | 'SpatialThing' | 'Tag' | 'User', ParentType, ContextType>\n};\n\nexport type AppreciationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Appreciation'] = ResolversParentTypes['Appreciation']> = {\n  appreciationOf?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  appreciationWith?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type AppreciationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AppreciationResponse'] = ResolversParentTypes['AppreciationResponse']> = {\n  appreciation?: Resolver<Maybe<ResolversTypes['Appreciation']>, ParentType, ContextType>,\n};\n\nexport type CategoriesPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['CategoriesPage'] = ResolversParentTypes['CategoriesPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Category']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type CategoryResolvers<ContextType = any, ParentType extends ResolversParentTypes['Category'] = ResolversParentTypes['Category']> = {\n  caretaker?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  extraInfo?: Resolver<Maybe<ResolversTypes['Json']>, ParentType, ContextType>,\n  facet?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  parentCategory?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType>,\n  parentCategoryId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  prefix?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  subCategories?: Resolver<Maybe<Array<Maybe<ResolversTypes['CategoriesPage']>>>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type CharacterResolvers<ContextType = any, ParentType extends ResolversParentTypes['Character'] = ResolversParentTypes['Character']> = {\n  username?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ClaimResolvers<ContextType = any, ParentType extends ResolversParentTypes['Claim'] = ResolversParentTypes['Claim']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  calculatedUsing?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  receiver?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  triggeredBy?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n};\n\nexport type ClaimResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ClaimResponse'] = ResolversParentTypes['ClaimResponse']> = {\n  claim?: Resolver<Maybe<ResolversTypes['Claim']>, ParentType, ContextType>,\n};\n\nexport type CommitmentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Commitment'] = ResolversParentTypes['Commitment']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  clauseOf?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  fulfilledBy?: Resolver<Maybe<Array<ResolversTypes['Fulfillment']>>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasPointInTime?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  independentDemandOf?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType>,\n  inputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  involvedAgents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  receiver?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfies?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType>,\n};\n\nexport type CommitmentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['CommitmentResponse'] = ResolversParentTypes['CommitmentResponse']> = {\n  commitment?: Resolver<Maybe<ResolversTypes['Commitment']>, ParentType, ContextType>,\n};\n\nexport interface CursorScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Cursor'], any> {\n  name: 'Cursor'\n}\n\nexport interface DateTimeScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['DateTime'], any> {\n  name: 'DateTime'\n}\n\nexport type DurationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Duration'] = ResolversParentTypes['Duration']> = {\n  numericDuration?: Resolver<ResolversTypes['Float'], ParentType, ContextType>,\n  unitType?: Resolver<ResolversTypes['TimeUnit'], ParentType, ContextType>,\n};\n\nexport type EconomicEventResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicEvent'] = ResolversParentTypes['EconomicEvent']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  appreciatedBy?: Resolver<Maybe<Array<ResolversTypes['Appreciation']>>, ParentType, ContextType>,\n  appreciationOf?: Resolver<Maybe<Array<ResolversTypes['Appreciation']>>, ParentType, ContextType>,\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  calculatedUsing?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  fulfills?: Resolver<Maybe<Array<ResolversTypes['Fulfillment']>>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasPointInTime?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  inputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  realizationOf?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType>,\n  receiver?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfies?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, ParentType, ContextType>,\n  toResourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  trace?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicEventTraceArgs>,\n  track?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicEventTrackArgs>,\n  triggeredBy?: Resolver<Maybe<ResolversTypes['EconomicEvent']>, ParentType, ContextType>,\n};\n\nexport type EconomicEventPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicEventPage'] = ResolversParentTypes['EconomicEventPage']> = {\n  edges?: Resolver<Array<ResolversTypes['EconomicEvent']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type EconomicEventResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicEventResponse'] = ResolversParentTypes['EconomicEventResponse']> = {\n  economicEvent?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  economicResource?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  reciprocalEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType>,\n};\n\nexport type EconomicResourceResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicResource'] = ResolversParentTypes['EconomicResource']> = {\n  accountingQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  classifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  conformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  containedIn?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  contains?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType>,\n  currentLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  lot?: Resolver<Maybe<ResolversTypes['ProductBatch']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  onhandQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  primaryAccountable?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  stage?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n  state?: Resolver<Maybe<ResolversTypes['Action']>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<ResolversTypes['AnyContext']>>, ParentType, ContextType>,\n  trace?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicResourceTraceArgs>,\n  track?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicResourceTrackArgs>,\n  trackingIdentifier?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  unitOfEffort?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n};\n\nexport type EconomicResourcePageResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicResourcePage'] = ResolversParentTypes['EconomicResourcePage']> = {\n  edges?: Resolver<Array<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type EconomicResourceResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicResourceResponse'] = ResolversParentTypes['EconomicResourceResponse']> = {\n  economicResource?: Resolver<ResolversTypes['EconomicResource'], ParentType, ContextType>,\n};\n\nexport type EventOrCommitmentResolvers<ContextType = any, ParentType extends ResolversParentTypes['EventOrCommitment'] = ResolversParentTypes['EventOrCommitment']> = {\n  __resolveType: TypeResolveFn<'Commitment' | 'EconomicEvent', ParentType, ContextType>\n};\n\nexport type FulfillmentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Fulfillment'] = ResolversParentTypes['Fulfillment']> = {\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  fulfilledBy?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  fulfills?: Resolver<ResolversTypes['Commitment'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n};\n\nexport type FulfillmentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['FulfillmentResponse'] = ResolversParentTypes['FulfillmentResponse']> = {\n  fulfillment?: Resolver<Maybe<ResolversTypes['Fulfillment']>, ParentType, ContextType>,\n};\n\nexport type IntentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Intent'] = ResolversParentTypes['Intent']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  availableQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasPointInTime?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  inputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  provider?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  publishedIn?: Resolver<Maybe<Array<ResolversTypes['ProposedIntent']>>, ParentType, ContextType>,\n  receiver?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfiedBy?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, ParentType, ContextType>,\n};\n\nexport type IntentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['IntentResponse'] = ResolversParentTypes['IntentResponse']> = {\n  intent?: Resolver<ResolversTypes['Intent'], ParentType, ContextType>,\n};\n\nexport type IntentsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['IntentsPage'] = ResolversParentTypes['IntentsPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Intent']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport interface JsonScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Json'], any> {\n  name: 'Json'\n}\n\nexport type LoginResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['LoginResponse'] = ResolversParentTypes['LoginResponse']> = {\n  currentAccountId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  currentUser?: Resolver<Maybe<ResolversTypes['User']>, ParentType, ContextType>,\n  currentUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  token?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type MeResolvers<ContextType = any, ParentType extends ResolversParentTypes['Me'] = ResolversParentTypes['Me']> = {\n  accountId?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  flagsForModeration?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeFlagsForModerationArgs>,\n  followed?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeFollowedArgs>,\n  followers?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeFollowersArgs>,\n  likeActivities?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeLikeActivitiesArgs>,\n  token?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  user?: Resolver<Maybe<ResolversTypes['User']>, ParentType, ContextType>,\n  userFeed?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeUserFeedArgs>,\n  userNotifications?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeUserNotificationsArgs>,\n  users?: Resolver<Maybe<Array<Maybe<ResolversTypes['User']>>>, ParentType, ContextType>,\n};\n\nexport type MeasureResolvers<ContextType = any, ParentType extends ResolversParentTypes['Measure'] = ResolversParentTypes['Measure']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  hasNumericalValue?: Resolver<ResolversTypes['Float'], ParentType, ContextType>,\n  hasUnit?: Resolver<ResolversTypes['Unit'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n};\n\nexport type MeasuresPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['MeasuresPage'] = ResolversParentTypes['MeasuresPage']> = {\n  edges?: Resolver<Maybe<Array<ResolversTypes['Measure']>>, ParentType, ContextType>,\n  pageInfo?: Resolver<Maybe<ResolversTypes['PageInfo']>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport type ObservableObjectResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservableObject'] = ResolversParentTypes['ObservableObject']> = {\n  __resolveType: TypeResolveFn<'EconomicResource' | 'Organization' | 'Person', ParentType, ContextType>\n};\n\nexport type ObservablePhenomenonResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservablePhenomenon'] = ResolversParentTypes['ObservablePhenomenon']> = {\n  choiceOf?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType>,\n  formulaQuantifier?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ObservablePhenomenonPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservablePhenomenonPage'] = ResolversParentTypes['ObservablePhenomenonPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ObservablePropertyResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservableProperty'] = ResolversParentTypes['ObservableProperty']> = {\n  hasChoices?: Resolver<Maybe<Array<ResolversTypes['ObservablePhenomenon']>>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ObservablePropertyPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservablePropertyPage'] = ResolversParentTypes['ObservablePropertyPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ObservableProperty']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ObservableResultResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservableResult'] = ResolversParentTypes['ObservableResult']> = {\n  __resolveType: TypeResolveFn<'Measure' | 'ObservablePhenomenon', ParentType, ContextType>\n};\n\nexport type ObservationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Observation'] = ResolversParentTypes['Observation']> = {\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  hasFeatureOfInterest?: Resolver<ResolversTypes['ObservableObject'], ParentType, ContextType>,\n  hasResult?: Resolver<ResolversTypes['ObservableResult'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  madeBySensor?: Resolver<ResolversTypes['Observer'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  observedDuring?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  observedProperty?: Resolver<ResolversTypes['ObservableProperty'], ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resultTime?: Resolver<ResolversTypes['DateTime'], ParentType, ContextType>,\n};\n\nexport type ObservationPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservationPage'] = ResolversParentTypes['ObservationPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Observation']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ObserverResolvers<ContextType = any, ParentType extends ResolversParentTypes['Observer'] = ResolversParentTypes['Observer']> = {\n  __resolveType: TypeResolveFn<'EconomicResource' | 'Organization' | 'Person' | 'ResourceSpecification', ParentType, ContextType>\n};\n\nexport type OrganizationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Organization'] = ResolversParentTypes['Organization']> = {\n  agentType?: Resolver<Maybe<ResolversTypes['AgentType']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, OrganizationCommitmentsArgs>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, OrganizationEconomicEventsArgs>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, OrganizationIntentsArgs>,\n  inventoriedEconomicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, OrganizationInventoriedEconomicResourcesArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, OrganizationPlansArgs>,\n  primaryLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, OrganizationProcessesArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType>,\n  relationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, OrganizationRelationshipsArgs>,\n  relationshipsAsObject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, OrganizationRelationshipsAsObjectArgs>,\n  relationshipsAsSubject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, OrganizationRelationshipsAsSubjectArgs>,\n  roles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType>,\n};\n\nexport type OrganizationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['OrganizationResponse'] = ResolversParentTypes['OrganizationResponse']> = {\n  agent?: Resolver<ResolversTypes['Organization'], ParentType, ContextType>,\n};\n\nexport type PageInfoResolvers<ContextType = any, ParentType extends ResolversParentTypes['PageInfo'] = ResolversParentTypes['PageInfo']> = {\n  endCursor?: Resolver<Maybe<Array<ResolversTypes['Cursor']>>, ParentType, ContextType>,\n  hasNextPage?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  hasPreviousPage?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  startCursor?: Resolver<Maybe<Array<ResolversTypes['Cursor']>>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport type PersonResolvers<ContextType = any, ParentType extends ResolversParentTypes['Person'] = ResolversParentTypes['Person']> = {\n  agentType?: Resolver<Maybe<ResolversTypes['AgentType']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, PersonCommitmentsArgs>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, PersonEconomicEventsArgs>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, PersonIntentsArgs>,\n  inventoriedEconomicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, PersonInventoriedEconomicResourcesArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, PersonPlansArgs>,\n  primaryLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, PersonProcessesArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType>,\n  relationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, PersonRelationshipsArgs>,\n  relationshipsAsObject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, PersonRelationshipsAsObjectArgs>,\n  relationshipsAsSubject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, PersonRelationshipsAsSubjectArgs>,\n  roles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType>,\n};\n\nexport type PersonResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['PersonResponse'] = ResolversParentTypes['PersonResponse']> = {\n  agent?: Resolver<ResolversTypes['Person'], ParentType, ContextType>,\n};\n\nexport type PlanResolvers<ContextType = any, ParentType extends ResolversParentTypes['Plan'] = ResolversParentTypes['Plan']> = {\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  independentDemands?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, PlanProcessesArgs>,\n  refinementOf?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n};\n\nexport type PlanResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['PlanResponse'] = ResolversParentTypes['PlanResponse']> = {\n  plan?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType>,\n};\n\nexport type PostResolvers<ContextType = any, ParentType extends ResolversParentTypes['Post'] = ResolversParentTypes['Post']> = {\n  activity?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  postContent?: Resolver<Maybe<ResolversTypes['PostContent']>, ParentType, ContextType>,\n};\n\nexport type PostContentResolvers<ContextType = any, ParentType extends ResolversParentTypes['PostContent'] = ResolversParentTypes['PostContent']> = {\n  htmlBody?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ProcessResolvers<ContextType = any, ParentType extends ResolversParentTypes['Process'] = ResolversParentTypes['Process']> = {\n  basedOn?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n  classifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  committedInputs?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, ProcessCommittedInputsArgs>,\n  committedOutputs?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, ProcessCommittedOutputsArgs>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  inputs?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, ProcessInputsArgs>,\n  intendedInputs?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, ProcessIntendedInputsArgs>,\n  intendedOutputs?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, ProcessIntendedOutputsArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  nestedIn?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n  nextProcesses?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputs?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, ProcessOutputsArgs>,\n  plannedWithin?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType>,\n  previousProcesses?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<ResolversTypes['AnyContext']>>, ParentType, ContextType>,\n  trace?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, ProcessTraceArgs>,\n  track?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, ProcessTrackArgs>,\n  unplannedEconomicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, ProcessUnplannedEconomicEventsArgs>,\n  workingAgents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType>,\n};\n\nexport type ProcessPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessPage'] = ResolversParentTypes['ProcessPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Process']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ProcessResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessResponse'] = ResolversParentTypes['ProcessResponse']> = {\n  process?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n};\n\nexport type ProcessSpecificationResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessSpecification'] = ResolversParentTypes['ProcessSpecification']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ProcessSpecificationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessSpecificationResponse'] = ResolversParentTypes['ProcessSpecificationResponse']> = {\n  processSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n};\n\nexport type ProductBatchResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProductBatch'] = ResolversParentTypes['ProductBatch']> = {\n  batchNumber?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  expiryDate?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  productionDate?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n};\n\nexport type ProductBatchResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProductBatchResponse'] = ResolversParentTypes['ProductBatchResponse']> = {\n  productBatch?: Resolver<ResolversTypes['ProductBatch'], ParentType, ContextType>,\n};\n\nexport type ProductionFlowItemResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProductionFlowItem'] = ResolversParentTypes['ProductionFlowItem']> = {\n  __resolveType: TypeResolveFn<'EconomicEvent' | 'EconomicResource' | 'Process', ParentType, ContextType>\n};\n\nexport type ProfileResolvers<ContextType = any, ParentType extends ResolversParentTypes['Profile'] = ResolversParentTypes['Profile']> = {\n  icon?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  location?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  website?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ProposalResolvers<ContextType = any, ParentType extends ResolversParentTypes['Proposal'] = ResolversParentTypes['Proposal']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  creator?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  eligibleLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  publishedTo?: Resolver<Maybe<Array<ResolversTypes['ProposedTo']>>, ParentType, ContextType>,\n  publishes?: Resolver<Maybe<Array<ResolversTypes['ProposedIntent']>>, ParentType, ContextType>,\n  unitBased?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n};\n\nexport type ProposalResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposalResponse'] = ResolversParentTypes['ProposalResponse']> = {\n  proposal?: Resolver<Maybe<ResolversTypes['Proposal']>, ParentType, ContextType>,\n};\n\nexport type ProposalsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposalsPage'] = ResolversParentTypes['ProposalsPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Proposal']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ProposedIntentResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedIntent'] = ResolversParentTypes['ProposedIntent']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  publishedIn?: Resolver<ResolversTypes['Proposal'], ParentType, ContextType>,\n  publishes?: Resolver<ResolversTypes['Intent'], ParentType, ContextType>,\n  reciprocal?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n};\n\nexport type ProposedIntentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedIntentResponse'] = ResolversParentTypes['ProposedIntentResponse']> = {\n  proposedIntent?: Resolver<Maybe<ResolversTypes['ProposedIntent']>, ParentType, ContextType>,\n};\n\nexport type ProposedToResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedTo'] = ResolversParentTypes['ProposedTo']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  proposed?: Resolver<ResolversTypes['Proposal'], ParentType, ContextType>,\n  proposedTo?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n};\n\nexport type ProposedToResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedToResponse'] = ResolversParentTypes['ProposedToResponse']> = {\n  proposedTo?: Resolver<Maybe<ResolversTypes['ProposedTo']>, ParentType, ContextType>,\n};\n\nexport type RecipeExchangeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeExchange'] = ResolversParentTypes['RecipeExchange']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type RecipeExchangeResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeExchangeResponse'] = ResolversParentTypes['RecipeExchangeResponse']> = {\n  recipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchange']>, ParentType, ContextType>,\n};\n\nexport type RecipeFlowResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeFlow'] = ResolversParentTypes['RecipeFlow']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  recipeFlowResource?: Resolver<Maybe<ResolversTypes['RecipeResource']>, ParentType, ContextType>,\n  recipeInputOf?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType>,\n  recipeOutputOf?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n};\n\nexport type RecipeFlowResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeFlowResponse'] = ResolversParentTypes['RecipeFlowResponse']> = {\n  recipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlow']>, ParentType, ContextType>,\n};\n\nexport type RecipeProcessResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeProcess'] = ResolversParentTypes['RecipeProcess']> = {\n  hasDuration?: Resolver<Maybe<ResolversTypes['Duration']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  processClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  processConformsTo?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n};\n\nexport type RecipeProcessResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeProcessResponse'] = ResolversParentTypes['RecipeProcessResponse']> = {\n  recipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType>,\n};\n\nexport type RecipeResourceResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeResource'] = ResolversParentTypes['RecipeResource']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  substitutable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  unitOfEffort?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n  unitOfResource?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n};\n\nexport type RecipeResourceResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeResourceResponse'] = ResolversParentTypes['RecipeResourceResponse']> = {\n  recipeResource?: Resolver<Maybe<ResolversTypes['RecipeResource']>, ParentType, ContextType>,\n};\n\nexport type RepliedResolvers<ContextType = any, ParentType extends ResolversParentTypes['Replied'] = ResolversParentTypes['Replied']> = {\n  activity?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType>,\n  directReplies?: Resolver<Maybe<Array<Maybe<ResolversTypes['Replied']>>>, ParentType, ContextType, RepliedDirectRepliesArgs>,\n  post?: Resolver<Maybe<ResolversTypes['Post']>, ParentType, ContextType>,\n  postContent?: Resolver<Maybe<ResolversTypes['PostContent']>, ParentType, ContextType>,\n  replyToId?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  threadId?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n};\n\nexport type ResourceSpecificationResolvers<ContextType = any, ParentType extends ResolversParentTypes['ResourceSpecification'] = ResolversParentTypes['ResourceSpecification']> = {\n  conformingResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType>,\n  defaultUnitOfEffort?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n  defaultUnitOfResource?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<ResolversTypes['AnyContext']>>, ParentType, ContextType>,\n};\n\nexport type ResourceSpecificationPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ResourceSpecificationPage'] = ResolversParentTypes['ResourceSpecificationPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ResourceSpecificationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ResourceSpecificationResponse'] = ResolversParentTypes['ResourceSpecificationResponse']> = {\n  resourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n};\n\nexport type RootMutationTypeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RootMutationType'] = ResolversParentTypes['RootMutationType']> = {\n  addTeamMember?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeAddTeamMemberArgs, 'label' | 'usernameOrEmail'>>,\n  boost?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeBoostArgs, 'id'>>,\n  changePassword?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeChangePasswordArgs, 'password' | 'passwordConfirmation'>>,\n  confirmEmail?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeConfirmEmailArgs, 'token'>>,\n  createAgentRelationship?: Resolver<Maybe<ResolversTypes['AgentRelationshipResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateAgentRelationshipArgs, 'relationship'>>,\n  createAgentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRoleResponse']>, ParentType, ContextType, RootMutationTypeCreateAgentRelationshipRoleArgs>,\n  createAgreement?: Resolver<Maybe<ResolversTypes['AgreementResponse']>, ParentType, ContextType, RootMutationTypeCreateAgreementArgs>,\n  createAppreciation?: Resolver<Maybe<ResolversTypes['AppreciationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateAppreciationArgs, 'appreciation'>>,\n  createCategory?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType, RootMutationTypeCreateCategoryArgs>,\n  createClaim?: Resolver<Maybe<ResolversTypes['ClaimResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateClaimArgs, 'claim'>>,\n  createCommitment?: Resolver<Maybe<ResolversTypes['CommitmentResponse']>, ParentType, ContextType, RootMutationTypeCreateCommitmentArgs>,\n  createEconomicEvent?: Resolver<Maybe<ResolversTypes['EconomicEventResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateEconomicEventArgs, 'event'>>,\n  createFulfillment?: Resolver<Maybe<ResolversTypes['FulfillmentResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateFulfillmentArgs, 'fulfillment'>>,\n  createIntent?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeCreateIntentArgs>,\n  createNeed?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeCreateNeedArgs>,\n  createObservablePhenomenon?: Resolver<Maybe<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateObservablePhenomenonArgs, 'observablePhenomenon'>>,\n  createObservableProperty?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateObservablePropertyArgs, 'observableProperty'>>,\n  createObservation?: Resolver<ResolversTypes['Observation'], ParentType, ContextType, RequireFields<RootMutationTypeCreateObservationArgs, 'observation'>>,\n  createOffer?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeCreateOfferArgs>,\n  createOrganization?: Resolver<Maybe<ResolversTypes['OrganizationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateOrganizationArgs, 'organization'>>,\n  createPerson?: Resolver<Maybe<ResolversTypes['PersonResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreatePersonArgs, 'person'>>,\n  createPlan?: Resolver<Maybe<ResolversTypes['PlanResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreatePlanArgs, 'plan'>>,\n  createPost?: Resolver<Maybe<ResolversTypes['Post']>, ParentType, ContextType, RequireFields<RootMutationTypeCreatePostArgs, 'postContent'>>,\n  createProcess?: Resolver<Maybe<ResolversTypes['ProcessResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateProcessArgs, 'process'>>,\n  createProcessSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecificationResponse']>, ParentType, ContextType, RootMutationTypeCreateProcessSpecificationArgs>,\n  createProductBatch?: Resolver<Maybe<ResolversTypes['ProductBatchResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateProductBatchArgs, 'productBatch'>>,\n  createProposal?: Resolver<Maybe<ResolversTypes['ProposalResponse']>, ParentType, ContextType, RootMutationTypeCreateProposalArgs>,\n  createRecipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchangeResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeExchangeArgs>,\n  createRecipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlowResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeFlowArgs>,\n  createRecipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcessResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeProcessArgs>,\n  createRecipeResource?: Resolver<Maybe<ResolversTypes['RecipeResourceResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeResourceArgs>,\n  createResourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecificationResponse']>, ParentType, ContextType, RootMutationTypeCreateResourceSpecificationArgs>,\n  createSatisfaction?: Resolver<Maybe<ResolversTypes['SatisfactionResponse']>, ParentType, ContextType, RootMutationTypeCreateSatisfactionArgs>,\n  createScenario?: Resolver<Maybe<ResolversTypes['ScenarioResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateScenarioArgs, 'plan'>>,\n  createScenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinitionResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateScenarioDefinitionArgs, 'plan'>>,\n  createSettlement?: Resolver<Maybe<ResolversTypes['SettlementResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateSettlementArgs, 'settlement'>>,\n  createSpatialThing?: Resolver<Maybe<ResolversTypes['SpatialThingResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateSpatialThingArgs, 'spatialThing'>>,\n  createUnit?: Resolver<Maybe<ResolversTypes['UnitResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateUnitArgs, 'unit'>>,\n  createUser?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateUserArgs, 'character' | 'profile'>>,\n  createValueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateValueCalculationArgs, 'valueCalculation'>>,\n  delete?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteArgs, 'contextId'>>,\n  deleteAgentRelationship?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAgentRelationshipArgs, 'id'>>,\n  deleteAgentRelationshipRole?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAgentRelationshipRoleArgs, 'id'>>,\n  deleteAgreement?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAgreementArgs, 'id'>>,\n  deleteAppreciation?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAppreciationArgs, 'id'>>,\n  deleteClaim?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteClaimArgs, 'id'>>,\n  deleteCommitment?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteCommitmentArgs, 'id'>>,\n  deleteEconomicEvent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteEconomicEventArgs, 'id'>>,\n  deleteEconomicResource?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteEconomicResourceArgs, 'id'>>,\n  deleteFulfillment?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteFulfillmentArgs, 'id'>>,\n  deleteIntent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteIntentArgs, 'id'>>,\n  deleteObservablePhenomenon?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteObservablePhenomenonArgs, 'id'>>,\n  deleteObservableProperty?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteObservablePropertyArgs, 'id'>>,\n  deleteObservation?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteObservationArgs, 'id'>>,\n  deleteOrganization?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteOrganizationArgs, 'id'>>,\n  deletePerson?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeletePersonArgs, 'id'>>,\n  deletePlan?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeletePlanArgs, 'id'>>,\n  deleteProcess?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProcessArgs, 'id'>>,\n  deleteProcessSpecification?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProcessSpecificationArgs, 'id'>>,\n  deleteProductBatch?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProductBatchArgs, 'id'>>,\n  deleteProposal?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProposalArgs, 'id'>>,\n  deleteProposedIntent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProposedIntentArgs, 'id'>>,\n  deleteProposedTo?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProposedToArgs, 'id'>>,\n  deleteRecipeExchange?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeExchangeArgs, 'id'>>,\n  deleteRecipeFlow?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeFlowArgs, 'id'>>,\n  deleteRecipeProcess?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeProcessArgs, 'id'>>,\n  deleteRecipeResource?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeResourceArgs, 'id'>>,\n  deleteResourceSpecification?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteResourceSpecificationArgs, 'id'>>,\n  deleteSatisfaction?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteSatisfactionArgs, 'id'>>,\n  deleteScenario?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteScenarioArgs, 'id'>>,\n  deleteScenarioDefinition?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteScenarioDefinitionArgs, 'id'>>,\n  deleteSettlement?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteSettlementArgs, 'id'>>,\n  deleteSpatialThing?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteSpatialThingArgs, 'id'>>,\n  deleteUnit?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteUnitArgs, 'id'>>,\n  deleteValueCalculation?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteValueCalculationArgs, 'id'>>,\n  flag?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeFlagArgs, 'id'>>,\n  follow?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeFollowArgs, 'id' | 'username'>>,\n  like?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeLikeArgs, 'id'>>,\n  login?: Resolver<Maybe<ResolversTypes['LoginResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeLoginArgs, 'emailOrUsername' | 'password'>>,\n  proposeIntent?: Resolver<Maybe<ResolversTypes['ProposedIntentResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeProposeIntentArgs, 'publishedIn' | 'publishes'>>,\n  proposeTo?: Resolver<Maybe<ResolversTypes['ProposedToResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeProposeToArgs, 'proposed' | 'proposedTo'>>,\n  requestConfirmEmail?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeRequestConfirmEmailArgs, 'email'>>,\n  requestResetPassword?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeRequestResetPasswordArgs, 'email'>>,\n  selectUser?: Resolver<Maybe<ResolversTypes['LoginResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeSelectUserArgs, 'username'>>,\n  signup?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeSignupArgs, 'email' | 'password'>>,\n  tag?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeTagArgs, 'tags' | 'thing'>>,\n  updateAgentRelationship?: Resolver<Maybe<ResolversTypes['AgentRelationshipResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateAgentRelationshipArgs, 'relationship'>>,\n  updateAgentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRoleResponse']>, ParentType, ContextType, RootMutationTypeUpdateAgentRelationshipRoleArgs>,\n  updateAgreement?: Resolver<Maybe<ResolversTypes['AgreementResponse']>, ParentType, ContextType, RootMutationTypeUpdateAgreementArgs>,\n  updateAppreciation?: Resolver<Maybe<ResolversTypes['AppreciationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateAppreciationArgs, 'appreciation'>>,\n  updateCategory?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType, RootMutationTypeUpdateCategoryArgs>,\n  updateClaim?: Resolver<Maybe<ResolversTypes['ClaimResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateClaimArgs, 'claim'>>,\n  updateCommitment?: Resolver<Maybe<ResolversTypes['CommitmentResponse']>, ParentType, ContextType, RootMutationTypeUpdateCommitmentArgs>,\n  updateEconomicEvent?: Resolver<Maybe<ResolversTypes['EconomicEventResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateEconomicEventArgs, 'event'>>,\n  updateEconomicResource?: Resolver<Maybe<ResolversTypes['EconomicResourceResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateEconomicResourceArgs, 'resource'>>,\n  updateFulfillment?: Resolver<Maybe<ResolversTypes['FulfillmentResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateFulfillmentArgs, 'fulfillment'>>,\n  updateIntent?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeUpdateIntentArgs>,\n  updateObservablePhenomenon?: Resolver<Maybe<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateObservablePhenomenonArgs, 'observablePhenomenon'>>,\n  updateObservableProperty?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateObservablePropertyArgs, 'observableProperty'>>,\n  updateObservation?: Resolver<ResolversTypes['Observation'], ParentType, ContextType, RequireFields<RootMutationTypeUpdateObservationArgs, 'observation'>>,\n  updateOrganization?: Resolver<Maybe<ResolversTypes['OrganizationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateOrganizationArgs, 'organization'>>,\n  updatePerson?: Resolver<Maybe<ResolversTypes['PersonResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdatePersonArgs, 'person'>>,\n  updatePlan?: Resolver<Maybe<ResolversTypes['PlanResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdatePlanArgs, 'plan'>>,\n  updateProcess?: Resolver<Maybe<ResolversTypes['ProcessResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateProcessArgs, 'process'>>,\n  updateProcessSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecificationResponse']>, ParentType, ContextType, RootMutationTypeUpdateProcessSpecificationArgs>,\n  updateProductBatch?: Resolver<Maybe<ResolversTypes['ProductBatchResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateProductBatchArgs, 'productBatch'>>,\n  updateProposal?: Resolver<Maybe<ResolversTypes['ProposalResponse']>, ParentType, ContextType, RootMutationTypeUpdateProposalArgs>,\n  updateRecipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchangeResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeExchangeArgs>,\n  updateRecipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlowResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeFlowArgs>,\n  updateRecipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcessResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeProcessArgs>,\n  updateRecipeResource?: Resolver<Maybe<ResolversTypes['RecipeResourceResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeResourceArgs>,\n  updateResourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecificationResponse']>, ParentType, ContextType, RootMutationTypeUpdateResourceSpecificationArgs>,\n  updateSatisfaction?: Resolver<Maybe<ResolversTypes['SatisfactionResponse']>, ParentType, ContextType, RootMutationTypeUpdateSatisfactionArgs>,\n  updateScenario?: Resolver<Maybe<ResolversTypes['ScenarioResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateScenarioArgs, 'plan'>>,\n  updateScenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinitionResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateScenarioDefinitionArgs, 'plan'>>,\n  updateSettlement?: Resolver<Maybe<ResolversTypes['SettlementResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateSettlementArgs, 's0ettlement'>>,\n  updateSpatialThing?: Resolver<Maybe<ResolversTypes['SpatialThingResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateSpatialThingArgs, 'spatialThing'>>,\n  updateUnit?: Resolver<Maybe<ResolversTypes['UnitResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateUnitArgs, 'unit'>>,\n  updateUser?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RootMutationTypeUpdateUserArgs>,\n  updateValueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateValueCalculationArgs, 'valueCalculation'>>,\n};\n\nexport type RootQueryTypeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RootQueryType'] = ResolversParentTypes['RootQueryType']> = {\n  action?: Resolver<Maybe<ResolversTypes['Action']>, ParentType, ContextType, RootQueryTypeActionArgs>,\n  actions?: Resolver<Maybe<Array<ResolversTypes['Action']>>, ParentType, ContextType>,\n  activity?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RootQueryTypeActivityArgs>,\n  agent?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType, RootQueryTypeAgentArgs>,\n  agentRelationship?: Resolver<Maybe<ResolversTypes['AgentRelationship']>, ParentType, ContextType, RootQueryTypeAgentRelationshipArgs>,\n  agentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRole']>, ParentType, ContextType, RootQueryTypeAgentRelationshipRoleArgs>,\n  agentRelationshipRoles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType, RootQueryTypeAgentRelationshipRolesArgs>,\n  agentRelationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, RootQueryTypeAgentRelationshipsArgs>,\n  agents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType, RootQueryTypeAgentsArgs>,\n  agreement?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType, RootQueryTypeAgreementArgs>,\n  agreements?: Resolver<Maybe<Array<ResolversTypes['Agreement']>>, ParentType, ContextType, RootQueryTypeAgreementsArgs>,\n  categories?: Resolver<ResolversTypes['CategoriesPage'], ParentType, ContextType, RootQueryTypeCategoriesArgs>,\n  category?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType, RootQueryTypeCategoryArgs>,\n  claim?: Resolver<Maybe<ResolversTypes['Claim']>, ParentType, ContextType, RootQueryTypeClaimArgs>,\n  claims?: Resolver<Maybe<Array<ResolversTypes['Claim']>>, ParentType, ContextType, RootQueryTypeClaimsArgs>,\n  commitment?: Resolver<Maybe<ResolversTypes['Commitment']>, ParentType, ContextType, RootQueryTypeCommitmentArgs>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, RootQueryTypeCommitmentsArgs>,\n  economicEvent?: Resolver<Maybe<ResolversTypes['EconomicEvent']>, ParentType, ContextType, RootQueryTypeEconomicEventArgs>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, RootQueryTypeEconomicEventsArgs>,\n  economicEventsFiltered?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, RootQueryTypeEconomicEventsFilteredArgs>,\n  economicEventsPages?: Resolver<ResolversTypes['EconomicEventPage'], ParentType, ContextType, RootQueryTypeEconomicEventsPagesArgs>,\n  economicResource?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType, RootQueryTypeEconomicResourceArgs>,\n  economicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, RootQueryTypeEconomicResourcesArgs>,\n  economicResourcesFiltered?: Resolver<Maybe<Array<Maybe<ResolversTypes['EconomicResource']>>>, ParentType, ContextType, RootQueryTypeEconomicResourcesFilteredArgs>,\n  economicResourcesPages?: Resolver<ResolversTypes['EconomicResourcePage'], ParentType, ContextType, RootQueryTypeEconomicResourcesPagesArgs>,\n  feed?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, RootQueryTypeFeedArgs>,\n  fulfillment?: Resolver<Maybe<ResolversTypes['Fulfillment']>, ParentType, ContextType, RootQueryTypeFulfillmentArgs>,\n  fulfillments?: Resolver<Maybe<Array<ResolversTypes['Fulfillment']>>, ParentType, ContextType, RootQueryTypeFulfillmentsArgs>,\n  intent?: Resolver<Maybe<ResolversTypes['Intent']>, ParentType, ContextType, RootQueryTypeIntentArgs>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, RootQueryTypeIntentsArgs>,\n  intentsPages?: Resolver<ResolversTypes['IntentsPage'], ParentType, ContextType, RootQueryTypeIntentsPagesArgs>,\n  me?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType>,\n  measure?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType, RootQueryTypeMeasureArgs>,\n  measures?: Resolver<Maybe<Array<ResolversTypes['Measure']>>, ParentType, ContextType, RootQueryTypeMeasuresArgs>,\n  measuresPages?: Resolver<ResolversTypes['MeasuresPage'], ParentType, ContextType, RootQueryTypeMeasuresPagesArgs>,\n  myAgent?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  needsPages?: Resolver<ResolversTypes['IntentsPage'], ParentType, ContextType, RootQueryTypeNeedsPagesArgs>,\n  observablePhenomenon?: Resolver<Maybe<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType, RootQueryTypeObservablePhenomenonArgs>,\n  observablePhenomenonPages?: Resolver<ResolversTypes['ObservablePhenomenonPage'], ParentType, ContextType, RootQueryTypeObservablePhenomenonPagesArgs>,\n  observablePhenomenons?: Resolver<Maybe<Array<ResolversTypes['ObservablePhenomenon']>>, ParentType, ContextType, RootQueryTypeObservablePhenomenonsArgs>,\n  observableProperties?: Resolver<Maybe<Array<ResolversTypes['ObservableProperty']>>, ParentType, ContextType, RootQueryTypeObservablePropertiesArgs>,\n  observablePropertiesPages?: Resolver<ResolversTypes['ObservablePropertyPage'], ParentType, ContextType, RootQueryTypeObservablePropertiesPagesArgs>,\n  observableProperty?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType, RootQueryTypeObservablePropertyArgs>,\n  observation?: Resolver<Maybe<ResolversTypes['Observation']>, ParentType, ContextType, RootQueryTypeObservationArgs>,\n  observations?: Resolver<Maybe<Array<ResolversTypes['Observation']>>, ParentType, ContextType, RootQueryTypeObservationsArgs>,\n  observationsPages?: Resolver<ResolversTypes['ObservationPage'], ParentType, ContextType, RootQueryTypeObservationsPagesArgs>,\n  offersPages?: Resolver<ResolversTypes['IntentsPage'], ParentType, ContextType, RootQueryTypeOffersPagesArgs>,\n  organization?: Resolver<Maybe<ResolversTypes['Organization']>, ParentType, ContextType, RootQueryTypeOrganizationArgs>,\n  organizations?: Resolver<Maybe<Array<ResolversTypes['Organization']>>, ParentType, ContextType, RootQueryTypeOrganizationsArgs>,\n  organizationsPages?: Resolver<ResolversTypes['AgentsPage'], ParentType, ContextType, RootQueryTypeOrganizationsPagesArgs>,\n  people?: Resolver<Maybe<Array<ResolversTypes['Person']>>, ParentType, ContextType, RootQueryTypePeopleArgs>,\n  peoplePages?: Resolver<ResolversTypes['AgentsPage'], ParentType, ContextType, RootQueryTypePeoplePagesArgs>,\n  person?: Resolver<Maybe<ResolversTypes['Person']>, ParentType, ContextType, RootQueryTypePersonArgs>,\n  plan?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType, RootQueryTypePlanArgs>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, RootQueryTypePlansArgs>,\n  post?: Resolver<Maybe<ResolversTypes['Post']>, ParentType, ContextType, RootQueryTypePostArgs>,\n  posts?: Resolver<Maybe<Array<Maybe<ResolversTypes['Post']>>>, ParentType, ContextType>,\n  process?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType, RootQueryTypeProcessArgs>,\n  processSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType, RootQueryTypeProcessSpecificationArgs>,\n  processSpecifications?: Resolver<Maybe<Array<ResolversTypes['ProcessSpecification']>>, ParentType, ContextType, RootQueryTypeProcessSpecificationsArgs>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, RootQueryTypeProcessesArgs>,\n  processesPages?: Resolver<ResolversTypes['ProcessPage'], ParentType, ContextType, RootQueryTypeProcessesPagesArgs>,\n  productBatch?: Resolver<Maybe<ResolversTypes['ProductBatch']>, ParentType, ContextType, RootQueryTypeProductBatchArgs>,\n  productBatches?: Resolver<Maybe<Array<ResolversTypes['ProductBatch']>>, ParentType, ContextType, RootQueryTypeProductBatchesArgs>,\n  proposal?: Resolver<Maybe<ResolversTypes['Proposal']>, ParentType, ContextType, RootQueryTypeProposalArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType, RootQueryTypeProposalsArgs>,\n  proposalsFiltered?: Resolver<Maybe<Array<Maybe<ResolversTypes['Proposal']>>>, ParentType, ContextType, RootQueryTypeProposalsFilteredArgs>,\n  proposalsPages?: Resolver<ResolversTypes['ProposalsPage'], ParentType, ContextType, RootQueryTypeProposalsPagesArgs>,\n  recipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchange']>, ParentType, ContextType, RootQueryTypeRecipeExchangeArgs>,\n  recipeExchanges?: Resolver<Maybe<Array<ResolversTypes['RecipeExchange']>>, ParentType, ContextType, RootQueryTypeRecipeExchangesArgs>,\n  recipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlow']>, ParentType, ContextType, RootQueryTypeRecipeFlowArgs>,\n  recipeFlows?: Resolver<Maybe<Array<ResolversTypes['RecipeFlow']>>, ParentType, ContextType, RootQueryTypeRecipeFlowsArgs>,\n  recipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType, RootQueryTypeRecipeProcessArgs>,\n  recipeProcesses?: Resolver<Maybe<Array<ResolversTypes['RecipeProcess']>>, ParentType, ContextType, RootQueryTypeRecipeProcessesArgs>,\n  recipeResource?: Resolver<Maybe<ResolversTypes['RecipeResource']>, ParentType, ContextType, RootQueryTypeRecipeResourceArgs>,\n  recipeResources?: Resolver<Maybe<Array<ResolversTypes['RecipeResource']>>, ParentType, ContextType, RootQueryTypeRecipeResourcesArgs>,\n  resourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType, RootQueryTypeResourceSpecificationArgs>,\n  resourceSpecifications?: Resolver<Maybe<Array<ResolversTypes['ResourceSpecification']>>, ParentType, ContextType, RootQueryTypeResourceSpecificationsArgs>,\n  resourceSpecificationsPages?: Resolver<ResolversTypes['ResourceSpecificationPage'], ParentType, ContextType, RootQueryTypeResourceSpecificationsPagesArgs>,\n  satisfaction?: Resolver<Maybe<ResolversTypes['Satisfaction']>, ParentType, ContextType, RootQueryTypeSatisfactionArgs>,\n  satisfactions?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType, RootQueryTypeSatisfactionsArgs>,\n  scenario?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType, RootQueryTypeScenarioArgs>,\n  scenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinition']>, ParentType, ContextType, RootQueryTypeScenarioDefinitionArgs>,\n  scenarioDefinitions?: Resolver<Maybe<Array<ResolversTypes['ScenarioDefinition']>>, ParentType, ContextType, RootQueryTypeScenarioDefinitionsArgs>,\n  scenarios?: Resolver<Maybe<Array<ResolversTypes['Scenario']>>, ParentType, ContextType, RootQueryTypeScenariosArgs>,\n  settlement?: Resolver<Maybe<ResolversTypes['Settlement']>, ParentType, ContextType, RootQueryTypeSettlementArgs>,\n  settlements?: Resolver<Maybe<Array<ResolversTypes['Settlement']>>, ParentType, ContextType, RootQueryTypeSettlementsArgs>,\n  spatialThing?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType, RootQueryTypeSpatialThingArgs>,\n  spatialThings?: Resolver<Maybe<Array<ResolversTypes['SpatialThing']>>, ParentType, ContextType, RootQueryTypeSpatialThingsArgs>,\n  spatialThingsPages?: Resolver<ResolversTypes['SpatialThingsPage'], ParentType, ContextType, RootQueryTypeSpatialThingsPagesArgs>,\n  tag?: Resolver<Maybe<ResolversTypes['Tag']>, ParentType, ContextType, RootQueryTypeTagArgs>,\n  unit?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType, RootQueryTypeUnitArgs>,\n  units?: Resolver<Maybe<Array<ResolversTypes['Unit']>>, ParentType, ContextType, RootQueryTypeUnitsArgs>,\n  unitsPages?: Resolver<ResolversTypes['UnitsPage'], ParentType, ContextType, RootQueryTypeUnitsPagesArgs>,\n  user?: Resolver<Maybe<ResolversTypes['User']>, ParentType, ContextType, RootQueryTypeUserArgs>,\n  valueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType, RootQueryTypeValueCalculationArgs>,\n  valueCalculationsPages?: Resolver<ResolversTypes['ValueCalculationPage'], ParentType, ContextType, RootQueryTypeValueCalculationsPagesArgs>,\n};\n\nexport type RootSubscriptionTypeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RootSubscriptionType'] = ResolversParentTypes['RootSubscriptionType']> = {\n  intentCreated?: SubscriptionResolver<Maybe<ResolversTypes['Intent']>, \"intentCreated\", ParentType, ContextType, RootSubscriptionTypeIntentCreatedArgs>,\n};\n\nexport type SatisfactionResolvers<ContextType = any, ParentType extends ResolversParentTypes['Satisfaction'] = ResolversParentTypes['Satisfaction']> = {\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfiedBy?: Resolver<ResolversTypes['EventOrCommitment'], ParentType, ContextType>,\n  satisfies?: Resolver<ResolversTypes['Intent'], ParentType, ContextType>,\n};\n\nexport type SatisfactionResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['SatisfactionResponse'] = ResolversParentTypes['SatisfactionResponse']> = {\n  satisfaction?: Resolver<Maybe<ResolversTypes['Satisfaction']>, ParentType, ContextType>,\n};\n\nexport type ScenarioResolvers<ContextType = any, ParentType extends ResolversParentTypes['Scenario'] = ResolversParentTypes['Scenario']> = {\n  definedAs?: Resolver<Maybe<ResolversTypes['ScenarioDefinition']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  refinementOf?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n};\n\nexport type ScenarioDefinitionResolvers<ContextType = any, ParentType extends ResolversParentTypes['ScenarioDefinition'] = ResolversParentTypes['ScenarioDefinition']> = {\n  hasDuration?: Resolver<Maybe<ResolversTypes['Duration']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ScenarioDefinitionResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ScenarioDefinitionResponse'] = ResolversParentTypes['ScenarioDefinitionResponse']> = {\n  scenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinition']>, ParentType, ContextType>,\n};\n\nexport type ScenarioResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ScenarioResponse'] = ResolversParentTypes['ScenarioResponse']> = {\n  scenario?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n};\n\nexport type SettlementResolvers<ContextType = any, ParentType extends ResolversParentTypes['Settlement'] = ResolversParentTypes['Settlement']> = {\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  settledBy?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  settles?: Resolver<ResolversTypes['Claim'], ParentType, ContextType>,\n};\n\nexport type SettlementResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['SettlementResponse'] = ResolversParentTypes['SettlementResponse']> = {\n  settlement?: Resolver<Maybe<ResolversTypes['Settlement']>, ParentType, ContextType>,\n};\n\nexport type SpatialThingResolvers<ContextType = any, ParentType extends ResolversParentTypes['SpatialThing'] = ResolversParentTypes['SpatialThing']> = {\n  alt?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  geom?: Resolver<Maybe<ResolversTypes['Json']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  lat?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  long?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  mappableAddress?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type SpatialThingResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['SpatialThingResponse'] = ResolversParentTypes['SpatialThingResponse']> = {\n  spatialThing?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n};\n\nexport type SpatialThingsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['SpatialThingsPage'] = ResolversParentTypes['SpatialThingsPage']> = {\n  edges?: Resolver<Maybe<Array<Maybe<ResolversTypes['SpatialThing']>>>, ParentType, ContextType>,\n  pageInfo?: Resolver<Maybe<ResolversTypes['PageInfo']>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport type TagResolvers<ContextType = any, ParentType extends ResolversParentTypes['Tag'] = ResolversParentTypes['Tag']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  context?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  tagged?: Resolver<Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, ParentType, ContextType>,\n};\n\nexport type UnitResolvers<ContextType = any, ParentType extends ResolversParentTypes['Unit'] = ResolversParentTypes['Unit']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  symbol?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n};\n\nexport type UnitResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['UnitResponse'] = ResolversParentTypes['UnitResponse']> = {\n  unit?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n};\n\nexport type UnitsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['UnitsPage'] = ResolversParentTypes['UnitsPage']> = {\n  edges?: Resolver<Maybe<Array<ResolversTypes['Unit']>>, ParentType, ContextType>,\n  pageInfo?: Resolver<Maybe<ResolversTypes['PageInfo']>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport interface UploadScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Upload'], any> {\n  name: 'Upload'\n}\n\nexport interface UriScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['URI'], any> {\n  name: 'URI'\n}\n\nexport type UserResolvers<ContextType = any, ParentType extends ResolversParentTypes['User'] = ResolversParentTypes['User']> = {\n  boostActivities?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, UserBoostActivitiesArgs>,\n  character?: Resolver<Maybe<ResolversTypes['Character']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  isInstanceAdmin?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  posts?: Resolver<Maybe<Array<Maybe<ResolversTypes['Post']>>>, ParentType, ContextType, UserPostsArgs>,\n  profile?: Resolver<Maybe<ResolversTypes['Profile']>, ParentType, ContextType>,\n  userActivities?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, UserUserActivitiesArgs>,\n};\n\nexport type ValueCalculationResolvers<ContextType = any, ParentType extends ResolversParentTypes['ValueCalculation'] = ResolversParentTypes['ValueCalculation']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  formula?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  valueAction?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  valueResourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  valueUnit?: Resolver<ResolversTypes['Unit'], ParentType, ContextType>,\n};\n\nexport type ValueCalculationPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ValueCalculationPage'] = ResolversParentTypes['ValueCalculationPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ValueCalculationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ValueCalculationResponse'] = ResolversParentTypes['ValueCalculationResponse']> = {\n  valueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n};\n\nexport type VerbResolvers<ContextType = any, ParentType extends ResolversParentTypes['Verb'] = ResolversParentTypes['Verb']> = {\n  verb?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  verbDisplay?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type Resolvers<ContextType = any> = {\n  AccountingScope?: AccountingScopeResolvers,\n  Action?: ActionResolvers<ContextType>,\n  Activity?: ActivityResolvers<ContextType>,\n  Agent?: AgentResolvers,\n  AgentRelationship?: AgentRelationshipResolvers<ContextType>,\n  AgentRelationshipResponse?: AgentRelationshipResponseResolvers<ContextType>,\n  AgentRelationshipRole?: AgentRelationshipRoleResolvers<ContextType>,\n  AgentRelationshipRoleResponse?: AgentRelationshipRoleResponseResolvers<ContextType>,\n  AgentsPage?: AgentsPageResolvers<ContextType>,\n  Agreement?: AgreementResolvers<ContextType>,\n  AgreementResponse?: AgreementResponseResolvers<ContextType>,\n  AnyCharacter?: AnyCharacterResolvers,\n  AnyContext?: AnyContextResolvers,\n  Appreciation?: AppreciationResolvers<ContextType>,\n  AppreciationResponse?: AppreciationResponseResolvers<ContextType>,\n  CategoriesPage?: CategoriesPageResolvers<ContextType>,\n  Category?: CategoryResolvers<ContextType>,\n  Character?: CharacterResolvers<ContextType>,\n  Claim?: ClaimResolvers<ContextType>,\n  ClaimResponse?: ClaimResponseResolvers<ContextType>,\n  Commitment?: CommitmentResolvers<ContextType>,\n  CommitmentResponse?: CommitmentResponseResolvers<ContextType>,\n  Cursor?: GraphQLScalarType,\n  DateTime?: GraphQLScalarType,\n  Duration?: DurationResolvers<ContextType>,\n  EconomicEvent?: EconomicEventResolvers<ContextType>,\n  EconomicEventPage?: EconomicEventPageResolvers<ContextType>,\n  EconomicEventResponse?: EconomicEventResponseResolvers<ContextType>,\n  EconomicResource?: EconomicResourceResolvers<ContextType>,\n  EconomicResourcePage?: EconomicResourcePageResolvers<ContextType>,\n  EconomicResourceResponse?: EconomicResourceResponseResolvers<ContextType>,\n  EventOrCommitment?: EventOrCommitmentResolvers,\n  Fulfillment?: FulfillmentResolvers<ContextType>,\n  FulfillmentResponse?: FulfillmentResponseResolvers<ContextType>,\n  Intent?: IntentResolvers<ContextType>,\n  IntentResponse?: IntentResponseResolvers<ContextType>,\n  IntentsPage?: IntentsPageResolvers<ContextType>,\n  Json?: GraphQLScalarType,\n  LoginResponse?: LoginResponseResolvers<ContextType>,\n  Me?: MeResolvers<ContextType>,\n  Measure?: MeasureResolvers<ContextType>,\n  MeasuresPage?: MeasuresPageResolvers<ContextType>,\n  ObservableObject?: ObservableObjectResolvers,\n  ObservablePhenomenon?: ObservablePhenomenonResolvers<ContextType>,\n  ObservablePhenomenonPage?: ObservablePhenomenonPageResolvers<ContextType>,\n  ObservableProperty?: ObservablePropertyResolvers<ContextType>,\n  ObservablePropertyPage?: ObservablePropertyPageResolvers<ContextType>,\n  ObservableResult?: ObservableResultResolvers,\n  Observation?: ObservationResolvers<ContextType>,\n  ObservationPage?: ObservationPageResolvers<ContextType>,\n  Observer?: ObserverResolvers,\n  Organization?: OrganizationResolvers<ContextType>,\n  OrganizationResponse?: OrganizationResponseResolvers<ContextType>,\n  PageInfo?: PageInfoResolvers<ContextType>,\n  Person?: PersonResolvers<ContextType>,\n  PersonResponse?: PersonResponseResolvers<ContextType>,\n  Plan?: PlanResolvers<ContextType>,\n  PlanResponse?: PlanResponseResolvers<ContextType>,\n  Post?: PostResolvers<ContextType>,\n  PostContent?: PostContentResolvers<ContextType>,\n  Process?: ProcessResolvers<ContextType>,\n  ProcessPage?: ProcessPageResolvers<ContextType>,\n  ProcessResponse?: ProcessResponseResolvers<ContextType>,\n  ProcessSpecification?: ProcessSpecificationResolvers<ContextType>,\n  ProcessSpecificationResponse?: ProcessSpecificationResponseResolvers<ContextType>,\n  ProductBatch?: ProductBatchResolvers<ContextType>,\n  ProductBatchResponse?: ProductBatchResponseResolvers<ContextType>,\n  ProductionFlowItem?: ProductionFlowItemResolvers,\n  Profile?: ProfileResolvers<ContextType>,\n  Proposal?: ProposalResolvers<ContextType>,\n  ProposalResponse?: ProposalResponseResolvers<ContextType>,\n  ProposalsPage?: ProposalsPageResolvers<ContextType>,\n  ProposedIntent?: ProposedIntentResolvers<ContextType>,\n  ProposedIntentResponse?: ProposedIntentResponseResolvers<ContextType>,\n  ProposedTo?: ProposedToResolvers<ContextType>,\n  ProposedToResponse?: ProposedToResponseResolvers<ContextType>,\n  RecipeExchange?: RecipeExchangeResolvers<ContextType>,\n  RecipeExchangeResponse?: RecipeExchangeResponseResolvers<ContextType>,\n  RecipeFlow?: RecipeFlowResolvers<ContextType>,\n  RecipeFlowResponse?: RecipeFlowResponseResolvers<ContextType>,\n  RecipeProcess?: RecipeProcessResolvers<ContextType>,\n  RecipeProcessResponse?: RecipeProcessResponseResolvers<ContextType>,\n  RecipeResource?: RecipeResourceResolvers<ContextType>,\n  RecipeResourceResponse?: RecipeResourceResponseResolvers<ContextType>,\n  Replied?: RepliedResolvers<ContextType>,\n  ResourceSpecification?: ResourceSpecificationResolvers<ContextType>,\n  ResourceSpecificationPage?: ResourceSpecificationPageResolvers<ContextType>,\n  ResourceSpecificationResponse?: ResourceSpecificationResponseResolvers<ContextType>,\n  RootMutationType?: RootMutationTypeResolvers<ContextType>,\n  RootQueryType?: RootQueryTypeResolvers<ContextType>,\n  RootSubscriptionType?: RootSubscriptionTypeResolvers<ContextType>,\n  Satisfaction?: SatisfactionResolvers<ContextType>,\n  SatisfactionResponse?: SatisfactionResponseResolvers<ContextType>,\n  Scenario?: ScenarioResolvers<ContextType>,\n  ScenarioDefinition?: ScenarioDefinitionResolvers<ContextType>,\n  ScenarioDefinitionResponse?: ScenarioDefinitionResponseResolvers<ContextType>,\n  ScenarioResponse?: ScenarioResponseResolvers<ContextType>,\n  Settlement?: SettlementResolvers<ContextType>,\n  SettlementResponse?: SettlementResponseResolvers<ContextType>,\n  SpatialThing?: SpatialThingResolvers<ContextType>,\n  SpatialThingResponse?: SpatialThingResponseResolvers<ContextType>,\n  SpatialThingsPage?: SpatialThingsPageResolvers<ContextType>,\n  Tag?: TagResolvers<ContextType>,\n  Unit?: UnitResolvers<ContextType>,\n  UnitResponse?: UnitResponseResolvers<ContextType>,\n  UnitsPage?: UnitsPageResolvers<ContextType>,\n  Upload?: GraphQLScalarType,\n  URI?: GraphQLScalarType,\n  User?: UserResolvers<ContextType>,\n  ValueCalculation?: ValueCalculationResolvers<ContextType>,\n  ValueCalculationPage?: ValueCalculationPageResolvers<ContextType>,\n  ValueCalculationResponse?: ValueCalculationResponseResolvers<ContextType>,\n  Verb?: VerbResolvers<ContextType>,\n};\n\n\n/**\n * @deprecated\n * Use \"Resolvers\" root object instead. If you wish to get \"IResolvers\", add \"typesPrefix: I\" to your config.\n*/\nexport type IResolvers<ContextType = any> = Resolvers<ContextType>;\n","export const PHOENIX_SOCKET_ENDPOINT = process.env.REACT_APP_PHOENIX_SOCKET_ENDPOINT;\nexport const GRAPHQL_ENDPOINT = process.env.REACT_APP_GRAPHQL_ENDPOINT;\nexport const NODE_ENV = process.env.NODE_ENV;\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\nexport const SENTRY_KEY = process.env.REACT_APP_SENTRY_API_KEY;\nexport const DEFAULT_PAGE_SIZE = parseInt(`${process.env.REACT_APP_DEFAULT_PAGE_SIZE}`) || 15;\n\nexport const APP_NAME = 'WeLoop';\nexport const INSTANCE_DESCRIPTION = 'Federated economic network for Reflow pilots';\nexport const INVITE_ONLY_TEXT =\n  process.env.REACT_APP_INVITE_ONLY_TEXT ||\n  'Please note, signups on this instance are currently invite-only.';\nexport const INSTANCE_TAGLINE = 'Co-creating circular and regenerative resource flows in cities';\nexport const INSTANCE_PROMPT =\n  \"You don't need to sign up to preview what people are sharing and discussing publicly.\";\nexport const prompt_signin = 'Sign in';\nexport const my_timeline = 'My Timeline';\nexport const instance_bg_img =\n  'https://reflowproject.eu/wp-content/uploads/2019/08/reflow-cocreation-1.png';\nexport const logo_large_url =\n  'https://raw.githubusercontent.com/reflow-project/weloop/main/src/static/img/weloop_logo_1200x512.png';\nexport const logo_small_url =\n  'https://raw.githubusercontent.com/reflow-project/weloop/main/src/static/img/weloop_logo_128x128-01.png';\n\nexport const terms_markdown_text = {\n  // replace the text as needed\n  terms_users: 'This is a test instance. Your data is not secure or private.',\n  terms_cookies: 'This site uses cookies.',\n  terms_indexing:\n    'Information you post on this site may be publicly available and will be copied onto other servers in the federated network.'\n};\n\nexport const terms_markdown_urls = {\n  // replace the URLs as needed, or enable/disable to use `terms_markdown_text` instead\n  enabled: false,\n  terms_users: '',\n  terms_cookies: '',\n  terms_indexing: ''\n};\n\nexport const terms_privacy = {\n  // replace the URLs as needed, or enable/disable to use `text_markdown` instead\n  enabled: true,\n  // replace the URL with that of your instance's privacy policy (in markdown format)\n  url_markdown: 'https://reflowproject.eu/privacy-policy',\n  // replace the text as needed (in markdown format as well)\n  text_markdown:\n    'This site uses cookies and follows GDPR rules. Contact the instance operators if you want your data exported or deleted.'\n};\n\nexport const related_urls = {\n  // replace the URLs as needed\n  project_homepage: 'https://weloop.reflowproject.eu',\n  code: 'https://github.com/reflow-project/weloop/',\n  feedback: 'https://github.com/reflow-project/weloop/issues'\n};\n\nexport const IS_DEV = NODE_ENV === 'development';\n\nexport type LocaleDef = { code: string; desc: string; rtl: boolean };\n\nexport const locales: LocaleDef[] = [\n  { code: 'en_GB', desc: 'English, British', rtl: false },\n  { code: 'en_US', desc: 'English, USA', rtl: false },\n  { code: 'es_MX', desc: 'Español, Méjico', rtl: false },\n  { code: 'es_ES', desc: 'Español, España', rtl: false },\n  { code: 'fr_FR', desc: 'Français, France', rtl: false },\n  { code: 'eu', desc: 'Euskara', rtl: false },\n  { code: 'ar_SA', desc: 'العربية, المملكة العربية السعودية', rtl: true }\n];\n\nexport const languages = {\n  en_GB: 'English, British',\n  en_US: 'English, USA',\n  es_MX: 'Español, Méjico',\n  es_ES: 'Español, España',\n  fr_FR: 'Français, France',\n  eu: 'Euskara',\n  ar_SA: 'العربية, المملكة العربية السعودية'\n};\nexport type LocaleKey = keyof typeof languages;\n// export const locales = Object.keys(languages) as LocaleKey[];\n\nconst mothershipAppId = process.env.REACT_APP_MOTHERSHIP_API_ID;\nconst mothershipApiKey = process.env.REACT_APP_MOTHERSHIP_API_KEY;\nconst mothershipEnv = process.env.REACT_APP_MOTHERSHIP_ENV;\n\nexport const mothershipCreds =\n  mothershipAppId && mothershipApiKey\n    ? {\n        appId: mothershipAppId,\n        apiKey: mothershipApiKey,\n        indexName: mothershipEnv\n      }\n    : null;\n\nexport const searchDisabled = !mothershipAppId || !mothershipApiKey;\nexport const USERNAME_REGEX = /^[a-zA-Z][a-zA-Z0-9-]{2,}$/;\nexport const EMAIL_REGEX = /^.+@.+\\..+$/;\nexport const DOMAIN_REGEX = /^.+\\..+$/;\n\nexport const max_file_size = '10MB';\n\nexport const accepted_file_types =\n  '.pdf, .rtf, .docx, .doc, .odt, .ott, .xls, .xlsx, .ods, .ots, .csv, .ppt, .pps, .pptx, .odp, .otp, .odg, .otg, .odc, .ogg, .mp3, .flac, .m4a, .wav, .mp4, .mkv, .flv, .avi, .gif, .jpg, .jpeg, .png, .svg, .webm, .eps, .tex, .mbz';\n\n// these licenses must match the icons (in the same order) configured in the UploadResource UI module\n// please use standard identifiers from https://spdx.org/licenses/preview/ in order to preserve interoperability\nexport const accepted_license_types = ['CC0-1.0', 'CC-BY-4.0', 'CC-BY-SA-4.0'];\n\nexport const nord = {\n  // Main\n  app: '#2E3440',\n  appInverse: '#3B4252',\n  primary: '#BF616A',\n  secondary: '#D08770',\n  tertiary: '#EBCB8B',\n\n  // Status\n  positive: '#2db783',\n  negative: '#ff5a5f',\n  warning: '#ffebb3',\n\n  // Monochrome\n  lightest: '#333333',\n  lighter: '#444444',\n  light: '#666666',\n  mediumlight: '#999999',\n  medium: '#D1D3D8',\n  mediumdark: '#EEEEEE',\n  dark: '#F3F3F3',\n  darker: '#F8F8F8',\n  darkest: '#FFFFFF',\n  border: '1px solid #2E3440'\n};\n\nexport const colors = {\n  // Reflow\n  app: 'rgb(245, 246, 247)',\n  appInverse: '#fff',\n  primary: '#05244F',\n  secondary: '#02e379',\n  tertiary: '#D1D3D8',\n\n  // Status\n  positive: '#2db783',\n  negative: '#ff5a5f',\n  warning: '#ffebb3',\n\n  // Monochrome\n  lightest: '#FFFFFF',\n  lighter: '#F8F8F8',\n  light: '#F3F3F3',\n  mediumlight: '#EEEEEE',\n  medium: '#D1D3D8',\n  mediumdark: '#999999',\n  dark: '#666666',\n  darker: '#444444',\n  darkest: '#333333',\n  border: '1px solid #F3F3F3'\n};\n\nexport const typography = {\n  type: {\n    primary: '\"Barlow\", \"Open Sans\", sans-serif'\n  },\n  size: {\n    s1: '12px',\n    s2: '14px',\n    s3: '16px',\n    m1: '20px',\n    m2: '24px',\n    m3: '28px',\n    l1: '32px',\n    l2: '40px',\n    l3: '48px',\n    code: '90px'\n  }\n};\n\n/* log ENV if DEV */\nIS_DEV &&\n  console.log(`-environment-\n${Object.keys(process.env)\n  .map(key => `${key}=${process.env[key]}`)\n  .join('\\n')}\n-------------\n`);\n/***/\n","const { GraphQLError } = require('graphql');\n// FORKED FROM: https://github.com/jaydenseric/apollo-upload-client\n\nconst { ApolloLink, Observable } = require('apollo-link');\nconst {\n  selectURI,\n  selectHttpOptionsAndBody,\n  fallbackHttpConfig,\n  serializeFetchParameter,\n  createSignalIfSupported,\n  parseAndCheckHttpResponse\n} = require('apollo-link-http-common');\nconst { extractFiles } = require('extract-files');\n\n/**\n * A React Native [`File`](https://developer.mozilla.org/docs/web/api/file)\n * substitute.\n *\n * Be aware that inspecting network requests with Chrome dev tools interferes\n * with the React Native `FormData` implementation, causing network errors.\n * @kind typedef\n * @name ReactNativeFileSubstitute\n * @type {object}\n * @see [`extract-files` docs](https://github.com/jaydenseric/extract-files#type-reactnativefilesubstitute).\n * @see [React Native `FormData` polyfill source](https://github.com/facebook/react-native/blob/v0.45.1/Libraries/Network/FormData.js#L34).\n * @prop {string} uri Filesystem path.\n * @prop {string} [name] File name.\n * @prop {string} [type] File content type. Some environments (particularly Android) require a valid MIME type; Expo `ImageResult.type` is unreliable as it can be just `image`.\n * @example <caption>A camera roll file.</caption>\n * ```js\n * {\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg'\n * }\n * ```\n */\n\n/**\n * Used to mark a\n * [React Native `File` substitute]{@link ReactNativeFileSubstitute}.\n * It’s too risky to assume all objects with `uri`, `type` and `name` properties\n * are files to extract. Re-exported from [`extract-files`](https://npm.im/extract-files)\n * for convenience.\n * @kind class\n * @name ReactNativeFile\n * @param {ReactNativeFileSubstitute} file A React Native [`File`](https://developer.mozilla.org/docs/web/api/file) substitute.\n * @example <caption>A React Native file that can be used in query or mutation variables.</caption>\n * ```js\n * const { ReactNativeFile } = require('apollo-upload-client')\n *\n * const file = new ReactNativeFile({\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg'\n * })\n * ```\n */\n\n/**\n * GraphQL request `fetch` options.\n * @kind typedef\n * @name FetchOptions\n * @type {object}\n * @see [Polyfillable fetch options](https://github.github.io/fetch#options).\n * @prop {object} headers HTTP request headers.\n * @prop {string} [credentials] Authentication credentials mode.\n */\n\nconst setPath = (map, path, value) => {\n  const parts = path.trim().split('.');\n  let i;\n  for (i = 0; i < parts.length - 1; i++) {\n    map = map[parts[i]];\n  }\n  map[parts[i]] = value;\n};\n\n/**\n * Creates a terminating [Apollo Link](https://apollographql.com/docs/link)\n * capable of file uploads. Options match [`createHttpLink`](https://apollographql.com/docs/link/links/http#options).\n * @see [GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec).\n * @see [apollo-link on GitHub](https://github.com/apollographql/apollo-link).\n * @kind function\n * @name createUploadLink\n * @param {object} options Options.\n * @param {string} [options.uri=/graphql] GraphQL endpoint URI.\n * @param {Function} [options.fetch] [`fetch`](https://fetch.spec.whatwg.org) implementation to use, defaulting to the `fetch` global.\n * @param {FetchOptions} [options.fetchOptions] `fetch` options; overridden by upload requirements.\n * @param {string} [options.credentials] Overrides `options.fetchOptions.credentials`.\n * @param {object} [options.headers] Merges with and overrides `options.fetchOptions.headers`.\n * @param {boolean} [options.includeExtensions=false] Toggles sending `extensions` fields to the GraphQL server.\n * @returns {ApolloLink} A terminating [Apollo Link](https://apollographql.com/docs/link) capable of file uploads.\n * @example <caption>A basic Apollo Client setup.</caption>\n * ```js\n * const { ApolloClient } = require('apollo-client')\n * const { InMemoryCache } = require('apollo-cache-inmemory')\n * const { createUploadLink } = require('apollo-upload-client')\n *\n * const client = new ApolloClient({\n *   cache: new InMemoryCache(),\n *   link: createUploadLink()\n * })\n * ```\n */\nexport const createUploadLink = ({\n  uri: fetchUri = '/graphql',\n  fetch: linkFetch = fetch,\n  fetchOptions,\n  credentials,\n  headers,\n  includeExtensions\n} = {}) => {\n  const linkConfig = {\n    http: { includeExtensions },\n    options: fetchOptions,\n    credentials,\n    headers\n  };\n\n  return new ApolloLink(operation => {\n    const uri = selectURI(operation, fetchUri);\n    const context = operation.getContext();\n\n    // Apollo Engine client awareness:\n    // https://apollographql.com/docs/platform/client-awareness\n\n    const {\n      // From Apollo Client config.\n      clientAwareness: { name, version } = {},\n      headers\n    } = context;\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: {\n        // Client awareness headers are context overridable.\n        ...(name && { 'apollographql-client-name': name }),\n        ...(version && { 'apollographql-client-version': version }),\n        ...headers\n      }\n    };\n\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig\n    );\n\n    const { clone, files } = extractFiles(body);\n\n    if (files.size) {\n      // Automatically set by fetch when the body is a FormData instance.\n      delete options.headers['content-type'];\n\n      // GraphQL multipart request spec:\n      // https://github.com/jaydenseric/graphql-multipart-request-spec\n\n      const form = new FormData();\n      form.append('operationName', clone.operationName);\n      form.append('query', clone.query);\n\n      // update paths in variables\n      let i = 0;\n      files.forEach(paths => {\n        paths.forEach(path => setPath(clone, path, String(++i)));\n      });\n      form.append('variables', JSON.stringify(clone.variables));\n\n      // actually add files to form\n      i = 0;\n      files.forEach((paths, file) => {\n        form.append(++i, file, file.name);\n      });\n\n      options.body = form;\n    } else options.body = serializeFetchParameter(clone, 'Payload');\n\n    return new Observable(observer => {\n      // If no abort controller signal was provided in fetch options, and the\n      // environment supports the AbortController interface, create and use a\n      // default abort controller.\n      let abortController;\n      if (!options.signal) {\n        const { controller } = createSignalIfSupported();\n        if (controller) {\n          abortController = controller;\n          options.signal = abortController.signal;\n        }\n      }\n\n      linkFetch(uri, options)\n        .then(response => {\n          // Forward the response on the context.\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          observer.next(result);\n          observer.complete();\n        })\n        .catch(error => {\n          if (error.name === 'AbortError')\n            // Fetch was aborted.\n            return;\n\n          if (error.result && error.result.errors && error.result.data)\n            // There is a GraphQL result to forward.\n            observer.next(error.result);\n\n          observer.next({ errors: [new GraphQLError(String(error))] });\n        });\n\n      // Cleanup function.\n      return () => {\n        if (abortController)\n          // Abort fetch.\n          abortController.abort();\n      };\n    });\n  });\n};\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type CreateUserMutationVariables = {\n  profileName: Types.Scalars['String'],\n  userName?: Types.Maybe<Types.Scalars['String']>,\n  summary?: Types.Maybe<Types.Scalars['String']>\n};\n\n\nexport type CreateUserMutation = (\n  { __typename: 'RootMutationType' }\n  & { createUser: Types.Maybe<(\n    { __typename: 'Me' }\n    & Pick<Types.Me, 'accountId'>\n    & { user: Types.Maybe<(\n      { __typename: 'User' }\n      & { character: Types.Maybe<(\n        { __typename: 'Character' }\n        & Pick<Types.Character, 'username'>\n      )>, profile: Types.Maybe<(\n        { __typename: 'Profile' }\n        & Pick<Types.Profile, 'name' | 'summary'>\n      )> }\n    )> }\n  )> }\n);\n\nexport type UpdateUserMutationVariables = {\n  userName?: Types.Maybe<Types.Scalars['String']>,\n  summary?: Types.Maybe<Types.Scalars['String']>,\n  icon?: Types.Maybe<Types.Scalars['Upload']>,\n  image?: Types.Maybe<Types.Scalars['Upload']>\n};\n\n\nexport type UpdateUserMutation = (\n  { __typename: 'RootMutationType' }\n  & { updateUser: Types.Maybe<(\n    { __typename: 'Me' }\n    & { user: Types.Maybe<(\n      { __typename: 'User' }\n      & { profile: Types.Maybe<(\n        { __typename: 'Profile' }\n        & Pick<Types.Profile, 'name' | 'summary' | 'icon' | 'image'>\n      )> }\n    )> }\n  )> }\n);\n\n\nexport const CreateUserDocument = gql`\n    mutation createUser($profileName: String!, $userName: String, $summary: String) {\n  createUser(profile: {name: $profileName, summary: $summary}, character: {username: $userName}) {\n    accountId\n    user {\n      character {\n        username\n      }\n      profile {\n        name\n        summary\n      }\n    }\n  }\n}\n    `;\nexport type CreateUserMutationFn = ApolloReactCommon.MutationFunction<CreateUserMutation, CreateUserMutationVariables>;\n\n/**\n * __useCreateUserMutation__\n *\n * To run a mutation, you first call `useCreateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserMutation, { data, loading, error }] = useCreateUserMutation({\n *   variables: {\n *      profileName: // value for 'profileName'\n *      userName: // value for 'userName'\n *      summary: // value for 'summary'\n *   },\n * });\n */\nexport function useCreateUserMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateUserMutation, CreateUserMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateUserMutation, CreateUserMutationVariables>(CreateUserDocument, baseOptions);\n      }\nexport type CreateUserMutationHookResult = ReturnType<typeof useCreateUserMutation>;\nexport type CreateUserMutationResult = ApolloReactCommon.MutationResult<CreateUserMutation>;\nexport type CreateUserMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateUserMutation, CreateUserMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation updateUser($userName: String, $summary: String, $icon: Upload, $image: Upload) {\n  updateUser(images: {icon: $icon, image: $image}, profile: {summary: $summary, name: $userName}) {\n    user {\n      profile {\n        name\n        summary\n        icon\n        image\n      }\n    }\n  }\n}\n    `;\nexport type UpdateUserMutationFn = ApolloReactCommon.MutationFunction<UpdateUserMutation, UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      userName: // value for 'userName'\n *      summary: // value for 'summary'\n *      icon: // value for 'icon'\n *      image: // value for 'image'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<UpdateUserMutation, UpdateUserMutationVariables>) {\n        return ApolloReactHooks.useMutation<UpdateUserMutation, UpdateUserMutationVariables>(UpdateUserDocument, baseOptions);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = ApolloReactCommon.MutationResult<UpdateUserMutation>;\nexport type UpdateUserMutationOptions = ApolloReactCommon.BaseMutationOptions<UpdateUserMutation, UpdateUserMutationVariables>;\n\n\nexport interface CreateUserMutationOperation {\n  operationName: 'createUser'\n  result: CreateUserMutation\n  variables: CreateUserMutationVariables\n  type: 'mutation'\n}\nexport const CreateUserMutationName:CreateUserMutationOperation['operationName'] = 'createUser'\n\nexport const CreateUserMutationRefetch = (\n  variables:CreateUserMutationVariables, \n  context?:any\n)=>({\n  query:CreateUserDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface UpdateUserMutationOperation {\n  operationName: 'updateUser'\n  result: UpdateUserMutation\n  variables: UpdateUserMutationVariables\n  type: 'mutation'\n}\nexport const UpdateUserMutationName:UpdateUserMutationOperation['operationName'] = 'updateUser'\n\nexport const UpdateUserMutationRefetch = (\n  variables:UpdateUserMutationVariables, \n  context?:any\n)=>({\n  query:UpdateUserDocument,\n  variables,\n  context\n})\n      \n","import * as AbsintheSocket from '@absinthe/socket';\nimport { createAbsintheSocketLink } from '@absinthe/socket-apollo-link';\nimport { hasSubscription } from '@jumpn/utils-graphql';\nimport {\n  defaultDataIdFromObject,\n  InMemoryCache,\n  IntrospectionFragmentMatcher\n} from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink, FetchResult, Observable } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport apolloLogger from 'apollo-link-logger';\nimport {\n  AnonLoginMutationName,\n  ConfirmEmailMutationName,\n  ResetPwdMutationName,\n  UpdateLostPasswordMutationName,\n  ChangePasswordMutationName,\n  AnonSignUpMutationName\n} from '../fe/session/anon.generated';\n// import { MeLogoutMutationName } from 'fe/session/me.generated';\nimport { GraphQLError } from 'graphql';\nimport HttpStatus from 'http-status-codes';\nimport { Socket as PhoenixSocket } from 'phoenix';\nimport { RootMutationType, RootQueryType } from '../graphql/types.generated';\nimport { GRAPHQL_ENDPOINT, IS_DEV, PHOENIX_SOCKET_ENDPOINT } from '../mn-constants';\nimport { getOpType } from '../util/apollo/operation';\nimport { KVStore } from '../util/keyvaluestore/types';\nimport { createUploadLink } from './uploadLink.js';\nimport introspectionQueryResultData from 'graphql/types.generated';\nimport { CreateUserMutationName } from '../HOC/pages/user/UserPage.generated';\n\nexport type MutationName = keyof RootMutationType;\nexport type QueryName = keyof RootQueryType;\nexport type OperationName = QueryName | MutationName;\n\ninterface Cfg {\n  localKVStore: KVStore;\n  appLinks: ApolloLink[];\n}\n\nconst AUTH_TOKEN_KEY = 'AUTH_TOKEN';\n\nexport default async function initialise({ localKVStore, appLinks }: Cfg) {\n  let authToken = localKVStore.get(AUTH_TOKEN_KEY);\n\n  const fragmentMatcher = new IntrospectionFragmentMatcher({\n    introspectionQueryResultData\n  });\n\n  const cache = new InMemoryCache({\n    fragmentMatcher,\n    cacheRedirects: {\n      Query: {\n        activity: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Activity', id: args.activityId }),\n        collection: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Collection', id: args.collectionId }),\n        community: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Community', id: args.communityId }),\n        comment: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Comment', id: args.commentId }),\n        user: (_, args, { getCacheKey }) => getCacheKey({ __typename: 'User', id: args.userId }),\n        thread: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Thread', id: args.threadId }),\n        resource: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Resource', id: args.resourceId })\n      }\n    },\n    dataIdFromObject: obj => {\n      switch (obj.__typename) {\n        case 'User': {\n          //@ts-ignore\n          const id: string = 'userId' in obj ? obj.userId : obj.id;\n          return id;\n        }\n        //   case 'Me': return (obj as Me).email\n        default:\n          return defaultDataIdFromObject(obj); // fall back to default handling\n      }\n    }\n  });\n\n  const setToken = (token?: string | null | undefined) => {\n    if (!token) {\n      delToken();\n    } else {\n      authToken = token;\n      localKVStore.set(AUTH_TOKEN_KEY, token);\n    }\n  };\n\n  const delToken = () => {\n    authToken = undefined;\n    localKVStore.del(AUTH_TOKEN_KEY);\n  };\n\n  const setTokenLink = new ApolloLink((operation, nextLink) => {\n    const { operationName } = operation;\n\n    if (\n      operationName === ConfirmEmailMutationName ||\n      operationName === ChangePasswordMutationName ||\n      operationName === ResetPwdMutationName ||\n      operationName === UpdateLostPasswordMutationName ||\n      operationName === AnonSignUpMutationName ||\n      operationName === AnonLoginMutationName\n    ) {\n      delToken();\n    }\n\n    return nextLink(operation).map(resp => {\n      if (\n        operationName === AnonLoginMutationName ||\n        operationName === ConfirmEmailMutationName ||\n        operationName === CreateUserMutationName\n      ) {\n        if (operationName === CreateUserMutationName && !resp.data?.login?.token) {\n          return resp;\n        }\n\n        setToken(\n          resp.data?.login?.token ||\n            resp.data?.confirmEmail?.accountId ||\n            resp.data?.resetPassword?.token\n        );\n      }\n      return resp;\n    });\n  });\n\n  /**\n   * This context link is used to assign the necessary Authorization header\n   * to all HTTP requests to the GraphQL backend. In the case that the user\n   * is authenticated it sets their access token as the value, otherwise null.\n   */\n  const authLink = setContext((_, { headers }) => {\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: authToken ? `Bearer ${authToken}` : null\n      }\n    };\n  });\n\n  const errorLink = onError(errorResponse => {\n    const { operation, response, graphQLErrors, networkError } = errorResponse;\n    if (networkError) {\n      // NETWORK ERROR\n      const message =\n        'statusCode' in networkError\n          ? HttpStatus.getStatusText(networkError.statusCode)\n          : networkError.message;\n      return Observable.of<FetchResult>({\n        errors: [new GraphQLError(`network error:${message}`)]\n      });\n    } else if (graphQLErrors) {\n      // GRAPHQL ERROR\n      const unexpectedError = graphQLErrors.find(\n        err =>\n          /Failed to fetch/gi.test(err.message) ||\n          /JSON.parse/gi.test(err.message) ||\n          /ServerParseError/gi.test(err.message)\n      );\n      return Observable.of<FetchResult>({\n        errors: unexpectedError ? [new GraphQLError(`Unexpected error`)] : graphQLErrors\n      });\n    } else if (response?.errors) {\n      // RESPONSE ERROR\n      return Observable.of<FetchResult>({\n        data: response.data,\n        errors: response.errors\n      });\n    } else {\n      // UNKNOWN ERROR\n      const respStr = JSON.stringify(response, null, 2);\n      const message = `unknown error:\\noperation:${operation}\\nresponse:${respStr}`;\n      return Observable.of<FetchResult>({\n        errors: [new GraphQLError(message)]\n      });\n    }\n  });\n\n  const clientAwarenessHeadersLinkForNonApollo3Server = setContext((_, ctx) => {\n    const { headers } = ctx;\n    return {\n      ...ctx,\n      clientAwareness: undefined,\n      headers: {\n        ...headers\n      }\n    };\n  });\n\n  const ALLOWED_ANONYMOUS_MUTATIONS = [\n    AnonSignUpMutationName,\n    AnonLoginMutationName,\n    ResetPwdMutationName,\n    ConfirmEmailMutationName,\n    ChangePasswordMutationName,\n    UpdateLostPasswordMutationName\n  ];\n  const alertBlockMutationsForAnonymousLink = new ApolloLink((operation, nextLink) => {\n    if (!authToken) {\n      const optype = getOpType(operation);\n      if (\n        optype === 'mutation' &&\n        //@ts-ignore\n        !ALLOWED_ANONYMOUS_MUTATIONS.includes(operation.operationName)\n      ) {\n        return Observable.of<FetchResult>({\n          errors: [new GraphQLError('You should log in for performing this operation!')]\n        });\n      }\n    }\n\n    return nextLink(operation);\n  });\n  // used for graphql query and mutations\n  const httpLink = ApolloLink.from(\n    [\n      IS_DEV ? apolloLogger : null,\n      ...appLinks,\n      alertBlockMutationsForAnonymousLink,\n      errorLink,\n      authLink,\n      clientAwarenessHeadersLinkForNonApollo3Server,\n      setTokenLink,\n      createUploadLink({ uri: GRAPHQL_ENDPOINT!! })\n    ].filter(Boolean)\n  );\n\n  // used for graphql subscriptions\n  const absintheSocket = createAbsintheSocketLink(\n    AbsintheSocket.create(new PhoenixSocket(PHOENIX_SOCKET_ENDPOINT))\n  );\n  // if the operation is a subscription then use\n  // the absintheSocket otherwise use the httpLink\n  const link = ApolloLink.split(\n    operation => hasSubscription(operation.query),\n    absintheSocket,\n    httpLink\n  );\n  const client = new ApolloClient({\n    cache,\n    link,\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'cache-first',\n        errorPolicy: 'ignore'\n      },\n      query: {\n        fetchPolicy: 'cache-first',\n        errorPolicy: 'all'\n      },\n      mutate: {\n        errorPolicy: 'all'\n      }\n    }\n  });\n  return {\n    client\n  };\n}\n","import { MoodleThemeInterface } from './styled';\nimport { colors, typography } from 'mn-constants';\n\n// Global style variables\nexport const theme: MoodleThemeInterface = {\n  breakpoints: ['40em', '52em', '64em'],\n  // fontSizes: ['12px', '14px', '16px', '20px', '24px', '28px', '32px', '48px'],\n  colors: {\n    // Main\n    app: colors.app,\n    appInverse: colors.appInverse,\n    primary: colors.primary,\n    secondary: colors.secondary,\n    tertiary: colors.tertiary,\n\n    // Status\n    positive: colors.positive,\n    negative: colors.negative,\n    warning: colors.warning,\n\n    // Monochrome\n    lightest: colors.lightest,\n    lighter: colors.lighter,\n    light: colors.light,\n    mediumlight: colors.mediumlight,\n    medium: colors.medium,\n    mediumdark: colors.mediumdark,\n    dark: colors.dark,\n    darker: colors.darker,\n    darkest: colors.darkest,\n\n    border: colors.border\n  },\n  variants: {\n    negative: {\n      bg: colors.negative,\n      color: colors.light\n    },\n    positive: {\n      bg: colors.positive,\n      color: colors.light\n    },\n    warning: {\n      bg: colors.warning,\n      color: colors.darker\n    },\n    avatar: {\n      borderRadius: '100% !important'\n    }\n  },\n  text: {\n    subhead: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s3,\n      color: colors.dark,\n      textTransform: 'capitalize',\n      letterSpacing: '0.5px',\n      fontWeight: '600'\n    },\n    suptitle: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s1,\n      color: colors.dark,\n      textTransform: 'uppercase',\n      letterSpacing: '1px',\n      fontWeight: '700'\n    },\n    link: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s2,\n      color: colors.dark,\n      letterSpacing: '.5px',\n      fontWeight: '600'\n    },\n    text: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s2,\n      color: colors.dark,\n      letterSpacing: '.5px',\n      fontWeight: '500'\n    },\n    heading: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.m3,\n      color: colors.dark,\n      letterSpacing: '1px',\n      fontWeight: '800'\n    }\n  },\n  buttons: {\n    primary: {\n      fontWeight: '600',\n      height: '40px',\n      px: 4,\n      backgroundColor: colors.primary,\n      borderRadius: '4px',\n      fontSize: typography.size.s2,\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      letterSpacing: '1px'\n    },\n    danger: {\n      fontWeight: '600',\n      height: '40px',\n      px: 4,\n      backgroundColor: colors.negative,\n      color: colors.lighter,\n      borderRadius: '4px',\n      fontSize: typography.size.s2,\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      letterSpacing: '1px'\n    },\n    outline: {\n      fontWeight: '600',\n      height: '40px',\n      px: 4,\n      backgroundColor: 'transparent',\n      borderRadius: '4px',\n      fontSize: typography.size.s2,\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      letterSpacing: '1px',\n      color: colors.dark,\n      border: `1px solid ${colors.primary}`\n    }\n  },\n  space: ['0px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n  fontFamily: typography.type.primary\n};\n","import React, { FC } from 'react';\nimport { moodlenet } from 'ui/themes';\nimport { ThemeProvider as StyledTheme } from 'styled-components';\nimport { MoodleThemeInterface } from 'ui/themes/styled';\n\nconst ThemeProvider: FC<{ theme?: MoodleThemeInterface | undefined }> = ({\n  children,\n  theme = moodlenet\n}) => {\n  return <StyledTheme theme={theme}>{children}</StyledTheme>;\n};\n\nexport default ThemeProvider;\n","import { ExecutionResult, GraphQLError } from 'graphql';\nimport { toast, ToastContent, ToastOptions } from 'react-toastify';\nimport { ApolloLink } from 'apollo-link';\nimport { getOperationNameAndType } from 'util/apollo/operation';\nimport Maybe from 'graphql/tsutils/Maybe';\n\nexport interface APICTX<Data = any> {\n  ctx?: string;\n  noShowError?: boolean;\n  noShowSuccess?: boolean;\n  errorMsg?: (errors: readonly GraphQLError[]) => string;\n  successMsg?: (data: Data) => string;\n}\n\nconst defaultErrorMsg = (ctx: string, errors: readonly GraphQLError[]) => {\n  const errorMsg = errors.map(_ => _.message).join('\\n');\n  return `Ooops, something went wrong with ${ctx}: \\n${errorMsg}`;\n};\nconst defaultSuccessMsg = (ctx: string) => `${ctx} success`;\n\nexport const notifyGqlResponse = <Data>(opts: APICTX<Data> = {}) => (\n  resp: ExecutionResult<Data>\n) => {\n  if (resp.errors && !opts.noShowError) {\n    const errorMsg = opts.errorMsg\n      ? opts.errorMsg(resp.errors)\n      : defaultErrorMsg(opts.ctx || 'this operation', resp.errors);\n    notify(errorMsg, { type: 'error' });\n  } else if (!resp.errors && resp.data && !opts.noShowSuccess) {\n    const successMsg = opts.successMsg\n      ? opts.successMsg(resp.data)\n      : defaultSuccessMsg(opts.ctx || '');\n    notify(successMsg, { type: 'success' });\n  }\n  return resp;\n};\n\nexport const notify = (content: ToastContent, options: ToastOptions) =>\n  toast(content, options);\n\nconst MN_CTX_FLD = 'MN_CTX_FLD';\nexport const mnCtx = <Data>(opts: APICTX<Data>) => ({ [MN_CTX_FLD]: opts });\nexport const getMnCtx = <Data>(context: any): undefined | APICTX<Data> =>\n  context ? context[MN_CTX_FLD] : undefined;\n\nexport const MngErrorLink = new ApolloLink((operation, forward) => {\n  const [, opType] = getOperationNameAndType(operation.query);\n  const mnCtx = operation.getContext()[MN_CTX_FLD] as Maybe<APICTX>;\n  const noShowSuccess =\n    opType === 'query' || (!mnCtx?.ctx && !mnCtx?.successMsg);\n\n  return forward(operation).map(\n    notifyGqlResponse({\n      noShowSuccess,\n      ctx: operation.operationName,\n      ...operation.getContext()[MN_CTX_FLD]\n    })\n  );\n});\n","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type MeQueryVariables = {};\n\n\nexport type MeQuery = (\n  { __typename: 'RootQueryType' }\n  & { me: Types.Maybe<(\n    { __typename: 'Me' }\n    & UseMeDataFragment\n  )> }\n);\n\nexport type UseMeDataFragment = (\n  { __typename: 'Me' }\n  & Pick<Types.Me, 'accountId'>\n  & { user: Types.Maybe<(\n    { __typename: 'User' }\n    & Pick<Types.User, 'id'>\n    & { profile: Types.Maybe<(\n      { __typename: 'Profile' }\n      & Pick<Types.Profile, 'image' | 'icon' | 'name' | 'summary'>\n    )>, character: Types.Maybe<(\n      { __typename: 'Character' }\n      & Pick<Types.Character, 'username'>\n    )> }\n  )>, users: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'User' }\n    & Pick<Types.User, 'id'>\n    & { profile: Types.Maybe<(\n      { __typename: 'Profile' }\n      & Pick<Types.Profile, 'name' | 'summary' | 'icon' | 'image'>\n    )>, character: Types.Maybe<(\n      { __typename: 'Character' }\n      & Pick<Types.Character, 'username'>\n    )> }\n  )>>>, flagsForModeration: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'Activity' }\n    & Pick<Types.Activity, 'id'>\n    & { verb: Types.Maybe<(\n      { __typename: 'Verb' }\n      & Pick<Types.Verb, 'verb' | 'verbDisplay'>\n    )>, subject: Types.Maybe<{ __typename: 'Category' } | { __typename: 'SpatialThing' } | { __typename: 'User' }>, object: Types.Maybe<{ __typename: 'Activity' } | { __typename: 'Category' } | { __typename: 'EconomicEvent' } | { __typename: 'Intent' } | { __typename: 'Post' } | { __typename: 'Process' } | { __typename: 'SpatialThing' } | { __typename: 'Tag' } | { __typename: 'User' }> }\n  )>>>, userFeed: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'Activity' }\n    & Pick<Types.Activity, 'id'>\n    & { verb: Types.Maybe<(\n      { __typename: 'Verb' }\n      & Pick<Types.Verb, 'verb' | 'verbDisplay'>\n    )>, object: Types.Maybe<{ __typename: 'Activity' } | { __typename: 'Category' } | { __typename: 'EconomicEvent' } | { __typename: 'Intent' } | { __typename: 'Post' } | { __typename: 'Process' } | { __typename: 'SpatialThing' } | { __typename: 'Tag' } | { __typename: 'User' }> }\n  )>>> }\n);\n\nexport const UseMeDataFragmentDoc = gql`\n    fragment UseMeData on Me {\n  accountId\n  user {\n    id\n    profile {\n      image\n      icon\n      name\n      summary\n    }\n    character {\n      username\n    }\n  }\n  users {\n    id\n    profile {\n      name\n      summary\n      icon\n      image\n    }\n    character {\n      username\n    }\n  }\n  flagsForModeration {\n    id\n    verb {\n      verb\n      verbDisplay\n    }\n    subject {\n      __typename\n    }\n    object {\n      __typename\n    }\n  }\n  userFeed {\n    id\n    verb {\n      verb\n      verbDisplay\n    }\n    object {\n      __typename\n    }\n  }\n}\n    `;\nexport const MeDocument = gql`\n    query me {\n  me {\n    ...UseMeData\n  }\n}\n    ${UseMeDataFragmentDoc}`;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\n\n\nexport interface MeQueryOperation {\n  operationName: 'me'\n  result: MeQuery\n  variables: MeQueryVariables\n  type: 'query'\n}\nexport const MeQueryName:MeQueryOperation['operationName'] = 'me'\n\nexport const MeQueryRefetch = (\n  variables:MeQueryVariables, \n  context?:any\n)=>({\n  query:MeDocument,\n  variables,\n  context\n})\n      \n","import { mnCtx } from 'fe/lib/graphql/ctx';\nimport { useMemo } from 'react';\nimport * as GQL from './me.generated';\n\nexport const useMe = () => {\n  const meQ = GQL.useMeQuery({ context: mnCtx({ noShowError: true }) });\n\n  return useMemo(() => {\n    const me = meQ.data?.me;\n    const loading = meQ.loading;\n    return {\n      me,\n      loading\n    };\n  }, [meQ]);\n};\n","import React, { createContext, FC, useMemo, useReducer } from 'react';\n\nexport interface SideBarContext {\n  isOpen: boolean;\n  toggleOpen(): unknown;\n}\nexport const SideBarContext = createContext<SideBarContext>({\n  isOpen: true,\n  toggleOpen: () => true\n});\nexport const ProvideSideBarContext: FC = ({ children }) => {\n  const [isOpen, toggleOpen] = useReducer(is => !is, true);\n  const ctx = useMemo<SideBarContext>(\n    () => ({\n      isOpen,\n      toggleOpen\n    }),\n    [isOpen, toggleOpen]\n  );\n  return <SideBarContext.Provider value={ctx}>{children}</SideBarContext.Provider>;\n};\n","import { KVStore, CreateKVStore } from './types';\n\ntype Type = 'session' | 'local';\nexport const SESSION: Type = 'session';\nexport const LOCAL: Type = 'local';\nexport const createLocalSessionKVStorage = (type: Type): CreateKVStore => (\n  prefix = ''\n): KVStore => {\n  const storage = type === 'local' ? localStorage : sessionStorage;\n  const pkey = (key: string) => `${prefix}${key}`;\n  const get: KVStore['get'] = key => parse(storage.getItem(pkey(key)), type, pkey(key));\n  const set: KVStore['set'] = (key, val) => storage.setItem(pkey(key), serialize(val));\n  const del: KVStore['del'] = key => {\n    const val = get(pkey(key));\n    storage.removeItem(pkey(key));\n    return val;\n  };\n  return {\n    get,\n    set,\n    del\n  };\n};\n\nconst parse = (str: string | null, type: Type, key: string): any => {\n  if (str === null) {\n    return null;\n  }\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    console.warn(`KVStore[${type}]#parse: could not parse ${str} at key [${key}]`);\n    return null;\n  }\n};\nconst serialize = (val: any) => JSON.stringify(val);\n","import { Settings } from 'luxon';\nimport { Catalog, Catalogs, I18n, setupI18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React, { createContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport { IS_DEV, LocaleDef, locales as available } from '../../mn-constants';\nimport { createLocalSessionKVStorage, LOCAL } from 'util/keyvaluestore/localSessionStorage';\nconst LOCALIZATION_STORE = 'LOCALIZATION';\nconst LOCALE_KEY = '#locale';\nconst kvstore = createLocalSessionKVStorage(LOCAL)(LOCALIZATION_STORE);\nexport type LocaleContextT = {\n  current: LocaleDef;\n  i18n: I18n;\n  available: LocaleDef[];\n  set(locale: LocaleDef): void;\n};\nconst getStoredLocaleCode = (): string | null => kvstore.get(LOCALE_KEY);\nconst setStoredLocaleCode = (localeCode: string): void => kvstore.set(LOCALE_KEY, localeCode);\n\nconst savedLangCode = getStoredLocaleCode();\nconst defaultLocale =\n  (savedLangCode && available.find(locale => locale.code === savedLangCode)) || available[0];\n\nexport const i18n = setupI18n({\n  locales: available.map(locale => locale.code)\n});\nexport const LocaleContext = createContext<LocaleContextT>({\n  current: defaultLocale,\n  i18n,\n  available,\n  set: () => void 0\n});\nexport const ProvideLocalizationCtx: React.FC = ({ children }) => {\n  const [current, setCurrent] = useState(defaultLocale);\n  const [catalogs, setCatalogs] = useState<Catalogs>({});\n  useEffect(() => {\n    setHTMLDirection(current.rtl);\n    if (catalogs[current.code]) {\n      return;\n    }\n    loadCatalog(current.code)\n      .then(cat => setCatalogs({ ...catalogs, [current.code]: cat }))\n      .catch(err => console.error(`Error loading Locale: ${current.code}`, err));\n  }, [catalogs, current]);\n\n  const set = useCallback(\n    (locale: LocaleDef) => {\n      setCurrent(locale);\n      const { code } = locale;\n      Settings.defaultLocale = code.split('_')[0];\n      setStoredLocaleCode(code);\n    },\n    [setCurrent]\n  );\n\n  const localeContextValue = useMemo<LocaleContextT>(\n    () => ({\n      current,\n      available,\n      i18n,\n      set\n    }),\n    [current, set]\n  );\n\n  return (\n    <I18nProvider i18n={i18n} language={current.code} catalogs={catalogs}>\n      <LocaleContext.Provider value={localeContextValue}>{children}</LocaleContext.Provider>\n    </I18nProvider>\n  );\n};\n\nconst loadCatalog = async (localeCode: string): Promise<Catalog> => {\n  if (IS_DEV) {\n    return import(\n      /* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n      `@lingui/loader!../../locales/${localeCode}/messages.po`\n    );\n  } else {\n    return import(\n      /* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n      `../../locales/${localeCode}/messages.js`\n    );\n  }\n};\n\nconst setHTMLDirection = (RTL: boolean) => {\n  const htmlEl = document.querySelector('html');\n  if (htmlEl) {\n    const dir = RTL ? 'rtl' : 'ltr';\n    htmlEl.style.direction = dir;\n    htmlEl.classList.remove('--rtl', '--ltr');\n    htmlEl.classList.add(`--${dir}`);\n  }\n};\n","import * as styledComponents from 'styled-components';\n\nexport interface MoodleThemeInterface {\n  breakpoints: string[];\n  colors: {\n    app: string;\n    appInverse: string;\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    positive: string;\n    negative: string;\n    warning: string;\n    lightest: string;\n    lighter: string;\n    light: string;\n    mediumlight: string;\n    medium: string;\n    mediumdark: string;\n    dark: string;\n    darker: string;\n    darkest: string;\n\n    border: string;\n  };\n  text: {\n    subhead: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      textTransform: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    suptitle: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      textTransform: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    link: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    text: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    heading: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n  };\n  variants: {\n    negative: {\n      bg: string;\n      color: string;\n    };\n    positive: {\n      bg: string;\n      color: string;\n    };\n    warning: {\n      bg: string;\n      color: string;\n    };\n    avatar: {\n      borderRadius: string;\n    };\n  };\n  buttons: {\n    primary: {\n      fontWeight: string;\n      borderRadius: string;\n      height: string;\n      px: number;\n      fontSize: string;\n      backgroundColor: string;\n      cursor: string;\n      textTransform: string;\n      letterSpacing: string;\n    };\n    danger: {\n      fontWeight: string;\n      borderRadius: string;\n      height: string;\n      color: string;\n      px: number;\n      fontSize: string;\n      backgroundColor: string;\n      cursor: string;\n      textTransform: string;\n      letterSpacing: string;\n    };\n\n    outline: {\n      fontWeight: string;\n      borderRadius: string;\n      height: string;\n      px: number;\n      fontSize: string;\n      backgroundColor: string;\n      cursor: string;\n      color: string;\n      textTransform: string;\n      letterSpacing: string;\n      border: string;\n    };\n  };\n  space: string[];\n  fontFamily: string;\n}\n\nexport interface StyledThemeInterface {\n  theme: MoodleThemeInterface;\n}\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n  withTheme\n} = styledComponents;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider, withTheme };\n\nexport default styled;\n","import * as React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\nimport './loader.css';\nconst Bounce = styled(Box)<{ color: string }>`\n  background-color: ${props =>\n    props.color === 'primary' ? '#ffffffeb' : props.theme.colors.primary};\n`;\n\n/**\n * Loader spinner component.\n * @param props {Object} props of the loader\n * @constructor\n */\nfunction Loader({ ...props }) {\n  return (\n    <div className=\"spinner\" {...props}>\n      <Bounce color={props.variant} className=\"bounce1\" />\n      <Bounce color={props.variant} className=\"bounce2\" />\n      <Bounce color={props.variant} className=\"bounce3\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { FC } from 'react';\nimport styled from 'ui/themes/styled';\nimport Loader from '../Loader';\nimport { darken, lighten, transitions } from 'polished';\nimport { Button } from 'rebass/styled-components';\nimport { ButtonProps } from 'rebass';\nimport media from 'styled-media-query';\n\nconst WrapperButton = styled(Button)<{\n  variant: string;\n  isIcon: boolean;\n  disabled: boolean;\n}>`\n  ${transitions('background, 0.2s')};\n  width: ${props => (props.isIcon === true ? '40px' : 'auto')};\n  border-radius: ${props => (props.isIcon === true ? '100%' : '4px')};\n  padding: ${props => (props.isIcon === true ? '0px' : 'auto')};\n  opacity: ${props => (props.disabled === true ? '0.7' : '1')};\n  cursor: ${props => (props.disabled === true ? 'default' : 'pointer')};\n  background:  ${props => props.variant === 'warning' && props.theme.colors.negative};\n  ${media.lessThan('medium')`\n    padding:  10px;\n  `};\n  &.show-more {\n    width: auto;\n    padding: 3px 8px;\n    background: transparent;\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    ${transitions('background, 0.2s')}\n    \n    svg {\n      stroke: ${props => props.theme.colors.primary};\n      margin-right: 10px;\n    }\n    \n    &:hover {\n        background: #f3f3f3;\n      }\n  }\n  &:hover && not:['disabled\\'] {\n    background: ${props => {\n      switch (props.variant) {\n        case 'primary': {\n          return darken('0.1', props.theme.colors.primary);\n        }\n        case 'danger': {\n          return lighten('0.1', props.theme.colors.primary);\n        }\n        default: {\n          lighten('0.3', props.theme.colors.primary);\n        }\n      }\n    }}\n  }\n}}\n`;\n\nexport interface Props extends ButtonProps {\n  isSubmitting?: boolean;\n  variant?: string;\n  isDisabled?: boolean;\n  isIcon?: boolean;\n  className?: string;\n  fullWidth?: boolean;\n}\n\nconst MNButton: FC<Props> = props => (\n  //@ts-ignore\n  <WrapperButton\n    {...props}\n    width={props.fullWidth ? '100%' : props.width || ''}\n    className={props.variant === 'show-more' ? 'show-more' : ''}\n    isSubmitting={props.isSubmitting}\n    disabled={props.isDisabled}\n    isIcon={props.isIcon}\n    variant={props.variant}\n  >\n    {props.isSubmitting ? <Loader variant={props.variant} /> : props.children}\n  </WrapperButton>\n);\n\nexport default MNButton;\n","import React, { FC } from 'react';\nimport styled from 'ui/themes/styled';\nimport { INSTANCE_TAGLINE } from 'mn-constants'; // + instance_bg_img\nimport { GRAPHQL_ENDPOINT } from 'mn-constants';\nimport { Link } from 'react-router-dom';\nimport { LocaleContext } from 'context/global/localizationCtx';\nimport { logo_large_url } from 'mn-constants';\nexport interface Props {\n  isHome?: boolean;\n}\n\nconst LogoContainer: FC<Props> = props => {\n  const { i18n } = React.useContext(LocaleContext);\n\n  return (\n    <Header>\n      {props.isHome ? (\n        <Logo />\n      ) : (\n        <Link to=\"/\">\n          <Logo />\n        </Link>\n      )}\n      <Tagline>{i18n._(INSTANCE_TAGLINE)}</Tagline>\n      <Tagline>{GRAPHQL_ENDPOINT}</Tagline>\n    </Header>\n  );\n};\n\nexport default LogoContainer;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n`;\n\nconst Logo = styled.div`\n  background: url(\"${logo_large_url}\");\n  width: 300px;\n  display: inline-block;\n  height: 100px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst Tagline = styled.h5`\n  margin-top: 8px;\n  margin-bottom: 40px;\n  color: #000000a1;\n  font-weight: 500;\n`;\n","import styled from '../../themes/styled';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { typography } from 'mn-constants';\n\nexport const WrapperPanel = styled(Flex)`\n  width: 240px;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0 0 0 8px;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n  font-family: ${props => props.theme.fontFamily};\n  &.extra {\n    width: 100%;\n  }\n  ${media.lessThan('1095px')`\n  width: 290px;\n`};\n  ${media.lessThan('1005px')`\n   display: none;\n  `};\n`;\n\nexport const PanelInner = styled(Flex)`\n  position: sticky;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  z-index: 0;\n`;\n\nexport const Panel = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n  margin-bottom: 8px !important;\n`;\n\nexport const PanelTitle = styled(Text)`\n  text-transform: capitalize;\n  border-bottom: ${props => props.theme.colors.border};\n  padding: 16px;\n  color: ${props => props.theme.colors.darker};\n  font-size: ${typography.size.s1};\n  font-weight: 600;\n`;\n\nexport const Nav = styled(Box)`\n  padding: 16px;\n`;\n\nexport const NavItem = styled(Text)`\ncolor: ${props => props.theme.colors.dark}\nfont-size: ${typography.size.s2};\na {\n  color: ${props => props.theme.colors.dark}\n  text-decoration: none;\n}\n  `;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { Input } from '@rebass/forms';\nimport { LocaleContext } from 'context/global/localizationCtx';\nimport { instance_bg_img, INSTANCE_DESCRIPTION, INSTANCE_PROMPT } from 'mn-constants'; // + instance_bg_img\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\nimport Button from 'ui/elements/Button';\nimport LogoContainer from 'ui/elements/Logo';\nimport { Panel, WrapperPanel } from 'ui/elements/Panel';\nimport styled from 'ui/themes/styled';\n\nlet tt = {\n  login: i18nMark('Sign in'),\n  placeholders: {\n    email: i18nMark('Enter your email'),\n    password: i18nMark('Enter your password')\n  }\n};\n\nexport interface Props {\n  formik: FormikHook<LoginFormValues>;\n}\n\nexport interface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nexport const Login: React.FC<Props> = ({ formik }) => {\n  const { i18n } = React.useContext(LocaleContext);\n\n  return (\n    <>\n      <Container>\n        <LoginWrapper>\n          <LogoContainer isHome={true} />\n          <FormWrapper>\n            <FormLogin>\n              <LoginForm>\n                <Box p={3}>\n                  <form onSubmit={formik.handleSubmit}>\n                    <Input\n                      placeholder={tt.placeholders.email}\n                      name=\"email\"\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                    />\n                    <Spacer />\n                    <Input\n                      type=\"password\"\n                      placeholder={tt.placeholders.password}\n                      name=\"password\"\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                    />\n                    <Button\n                      mt={3}\n                      variant=\"primary\"\n                      isSubmitting={formik.isSubmitting}\n                      isDisabled={formik.isSubmitting}\n                      type=\"submit\"\n                      style={{ width: '100%' }}\n                      onClick={formik.submitForm}\n                    >\n                      <Trans>Sign in</Trans>\n                    </Button>\n                  </form>\n                </Box>\n              </LoginForm>\n              <ResetPass variant=\"text\" my={3} mt={2}>\n                <Link to=\"/reset\">\n                  <Trans>Trouble logging in?</Trans>\n                </Link>\n              </ResetPass>\n            </FormLogin>\n            <Or>\n              <Trans>Or</Trans>\n            </Or>\n            <Browse mt={3} p={3}>\n              <Text variant=\"heading\">\n                <Trans>Browse this instance</Trans>\n              </Text>\n              <Text variant=\"text\" mt={2}>\n                {i18n._(INSTANCE_PROMPT)}\n              </Text>\n              <Link to={'/discover'}>\n                <Button mt={3} variant=\"outline\">\n                  <Trans>Browse</Trans>\n                </Button>\n              </Link>\n            </Browse>\n          </FormWrapper>\n          <Right>\n            <Link to=\"signup\">\n              <Button\n                mb={2}\n                style={{ width: '100%', height: '50px' }}\n                variant=\"outline\"\n                // onClick={this.props.handleSignup}\n              >\n                <Trans>Sign up</Trans>\n              </Button>\n            </Link>\n            <WrapperPanel className=\"extra\">\n              <Panel>\n                <Background />\n                <Infos p={3}>\n                  <Info>\n                    <Text variant=\"suptitle\">\n                      <Trans>Instance description</Trans>\n                    </Text>\n                    <Text mt={2} variant=\"text\">\n                      {INSTANCE_DESCRIPTION}\n                    </Text>\n                  </Info>\n                </Infos>\n              </Panel>\n            </WrapperPanel>\n          </Right>\n        </LoginWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n\nconst Background = styled(Box)`\n  background: url(\"${instance_bg_img}\");\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  padding: 50%;\n  width: 400px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`;\n\nconst Infos = styled(Box)``;\n\nconst Info = styled(Box)``;\n\nconst LoginWrapper = styled.div`\n  display: grid;\n  grid-column-gap: 16px;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas: 'header header' 'form image' 'footer footer';\n  ${media.lessThan('medium')`\n    grid-template-columns: 1fr;\n    grid-template-areas: 'header' 'image' 'form' 'footer';\n    padding: 16px\n  `};\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 900px;\n  margin-top: 60px;\n  padding-bottom: 50px;\n`;\n\nconst FormWrapper = styled.div`\n  grid-area: form;\n`;\n\nconst FormLogin = styled.div`\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  height: inherit;\n  border: 1px solid #dddfe2;\n  text-align: left;\n  height: fit-content;\n`;\n\nconst Right = styled(Box)`\n  .extra {\n    width: 100%;\n    margin-left: 0px;\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst Browse = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  a {\n    text-decoration: none;\n    color: ${props => props.theme.colors.mediumdark};\n    button {\n      color: ${props => props.theme.colors.mediumdark} !important;\n    }\n  }\n`;\n\nconst Or = styled.div`\n  position: relative;\n  color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n  margin-top: 24px;\n  &:before {\n    position: absolute;\n    content: '';\n    width: calc(50% - 24px);\n    left: 0;\n    top: 8px;\n    height: 1px;\n    display: block;\n    background: rgba(0, 0, 0, 0.45);\n  }\n  &:after {\n    position: absolute;\n    content: '';\n    width: calc(50% - 24px);\n    right: 0;\n    top: 8px;\n    height: 1px;\n    display: block;\n    background: rgba(0, 0, 0, 0.45);\n  }\n`;\n\nconst ResetPass = styled(Text)`\n  text-align: center;\n  text-decoration: underline;\n  cursor: pointer;\n  a {\n    color: inherit;\n  }\n`;\n\nconst LoginForm = styled.div`\n  margin: 0;\n  margin-bottom: 16px;\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n`;\n\nconst Spacer = styled.div`\n  width: 10px;\n  height: 10px;\n`;\n","import { DataProxy } from 'apollo-cache';\nimport { useMemo } from 'react';\nimport * as GQL from './anon.generated';\nimport { MeDocument, MeQuery, MeQueryRefetch } from './me.generated';\nimport { mnCtx } from 'fe/lib/graphql/ctx';\nimport { useHistory } from 'react-router';\n\nconst hostname = process.env.REACT_APP_FRONTEND_HOSTNAME || '';\n\nexport const useAnon = () => {\n  const history = useHistory();\n  const updateMe = (proxy: DataProxy, me: any) => {\n    proxy.writeQuery<MeQuery>({\n      query: MeDocument,\n      data: {\n        __typename: 'RootQueryType',\n        me: me\n          ? {\n              __typename: 'Me' as 'Me',\n              ...me,\n              token: me.token,\n              user: {\n                __typename: 'User' as 'User',\n                ...me.user\n              }\n            }\n          : null\n      }\n    });\n  };\n\n  const [loginMut, loginStatus] = GQL.useAnonLoginMutation();\n  const [confirmEmailMut, confirmEmailStatus] = GQL.useConfirmEmailMutation();\n  const [requestConfirmEmailMut, requestConfirmEmailStatus] = GQL.useRequestConfirmEmailMutation();\n  const [resetPwd, resetPwdStatus] = GQL.useResetPwdMutation();\n  const [changePwd, changePwdStatus] = GQL.useChangePasswordMutation();\n  const [signUpMut, signUpStatus] = GQL.useAnonSignUpMutation();\n  const [updateLostPassword, updateLostPasswordStatus] = GQL.useUpdateLostPasswordMutation();\n\n  return useMemo(() => {\n    const confirmEmail = (token: string) => {\n      if (confirmEmailStatus.loading) {\n        return;\n      }\n      if (confirmEmailStatus.called) {\n        return;\n      }\n\n      return confirmEmailMut({\n        variables: { token },\n        update: (proxy, resp) => updateMe(proxy, resp.data)\n      });\n    };\n\n    const signUp = (registration: { email: string; password: string }) => {\n      if (signUpStatus.loading) {\n        return;\n      }\n\n      return signUpMut({\n        variables: {\n          email: registration.email,\n          password: registration.password,\n          url: `${hostname}/confirm-email/:token`\n        },\n        update: (proxy, resp) => updateMe(proxy, resp.data)\n      });\n    };\n\n    const logout = () => {\n      localStorage.clear();\n      history.push('/login');\n    };\n\n    const login = (email: string, password: string) => {\n      if (loginStatus.loading) {\n        return;\n      }\n\n      return loginMut({\n        variables: { email, password },\n        context: mnCtx({ ctx: 'Login' }),\n        refetchQueries: [MeQueryRefetch({})],\n        update: (proxy, resp) => {\n          return updateMe(proxy, resp.data?.login);\n        }\n      });\n    };\n\n    const changePwdRequest = (\n      oldPassword: string,\n      password: string,\n      passwordConfirmation: string\n    ) => {\n      if (changePwdStatus.loading) {\n        return;\n      }\n      return changePwd({\n        variables: { oldPassword, password, passwordConfirmation }\n      });\n    };\n\n    const updatePassword = (token: string, password: string, passwordConfirmation: string) => {\n      if (updateLostPasswordStatus.loading) {\n        return;\n      }\n      return updateLostPassword({\n        variables: { token, password, passwordConfirmation }\n      });\n    };\n\n    const resetPwdRequest = (email: string) => {\n      if (resetPwdStatus.loading) {\n        return;\n      }\n      return resetPwd({\n        variables: { email, url: `${hostname}/reset/:token` }\n      });\n    };\n\n    return {\n      login,\n      loginStatus,\n      logout,\n\n      confirmEmail,\n      confirmEmailStatus,\n\n      requestConfirmEmailMut,\n      requestConfirmEmailStatus,\n      resetPwdRequest,\n      resetPwdStatus,\n      updatePassword,\n      updateLostPasswordStatus,\n      changePwdRequest,\n      changePwdStatus,\n      signUp,\n      signUpStatus\n    };\n  }, [\n    history,\n    signUpStatus,\n    signUpMut,\n    confirmEmailMut,\n    confirmEmailStatus,\n    requestConfirmEmailMut,\n    requestConfirmEmailStatus,\n    updateLostPassword,\n    updateLostPasswordStatus,\n    resetPwd,\n    resetPwdStatus,\n    changePwd,\n    changePwdStatus,\n    loginMut,\n    loginStatus\n  ]);\n};\n","import { APP_NAME } from 'mn-constants';\nimport React, { createContext, useContext, useMemo, useState, useCallback, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { LocaleContext } from './localizationCtx';\nimport { MessageDescriptor } from '@lingui/core';\n\ntype SubTitleDescOrFalse = MessageDescriptor | false;\ntype SubTitle = string | undefined;\nexport interface PageCtx {\n  setTitle(subTitle: SubTitleDescOrFalse, values?: any): void;\n}\nexport const PageCtx = createContext<PageCtx>({ setTitle: _ => _ });\nexport const ProvidePageCtx: React.FC = ({ children }) => {\n  const { i18n } = useContext(LocaleContext);\n  const [subTitle, setSubTitle] = useState<SubTitle>();\n  const setTitle = useCallback<PageCtx['setTitle']>(\n    (subTitleToSet, values) => {\n      const nextSubTitle = subTitleToSet === false ? void 0 : i18n._({ ...subTitleToSet, values });\n      if (nextSubTitle === subTitle) {\n        return;\n      }\n      setSubTitle(nextSubTitle);\n    },\n    [i18n, subTitle]\n  );\n\n  const ctx = useMemo<PageCtx>(\n    () => ({\n      setTitle\n    }),\n    [setTitle]\n  );\n  const title = subTitle ? `${APP_NAME} - ${subTitle}` : APP_NAME;\n  //console.table({ title, subTitle });\n  return (\n    <PageCtx.Provider value={ctx}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </PageCtx.Provider>\n  );\n};\n\nexport const usePageTitle = (subTitle: SubTitleDescOrFalse, values?: any) => {\n  const { setTitle } = useContext(PageCtx);\n  // https://reactjs.org/blog/2020/02/26/react-v16.13.0.html#warnings-for-some-updates-during-render\n  useEffect(() => {\n    setTitle(subTitle, values);\n  }, [setTitle, subTitle, values]);\n};\n","import { useFormik } from 'formik';\nimport React, { FC, useEffect } from 'react';\nimport Login, { LoginFormValues } from 'ui/pages/login';\nimport * as Yup from 'yup';\nimport { useAnon } from 'fe/session/useAnon';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { useHistory } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { useRouteMatch } from 'react-router-dom';\n\nexport const validationSchema: Yup.ObjectSchema<LoginFormValues> = Yup.object<LoginFormValues>({\n  email: Yup.string()\n    .max(50)\n    .required(),\n  password: Yup.string()\n    .max(50)\n    .required()\n});\nexport interface Props {}\n\nconst loginPageTitle = t`Login`;\n\nexport const LoginPageHOC: FC<Props> = () => {\n  const { params } = useRouteMatch();\n  usePageTitle(loginPageTitle);\n  const history = useHistory();\n  const { login, loginStatus } = useAnon();\n  const formik = useFormik<LoginFormValues>({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    enableReinitialize: true,\n    onSubmit: ({ email, password }) =>\n      login(email, password)?.then(resp => {\n        if (resp.errors?.length) {\n          return;\n        } else {\n          resp.data?.login?.currentUser?.id\n            ? history.push(`/user/${resp.data?.login?.currentUser?.id}`)\n            : history.push(`/create-user/${params?.token || resp.data?.login?.currentAccountId}`);\n        }\n      }),\n    validationSchema\n  });\n\n  useEffect(() => {\n    if (loginStatus.error?.message) {\n      toast.error(loginStatus.error.graphQLErrors[0].message);\n    }\n  }, [loginStatus.error]);\n  return <Login formik={formik} />;\n};\n","// import { useMe } from 'fe/session/useMe';\nimport React, { FC } from 'react';\ninterface Props {\n  to: string;\n}\n\nexport const RedirectAuthenticated: FC<Props> = ({ children, to }) => {\n  // const { me, loading } = useMe();\n\n  // if (loading) {\n  //   return null;\n  // }\n  //\n  // if (me) {\n  //   return <Redirect to={to} />;\n  // }\n\n  return <>{children}</>;\n};\nexport const RedirectAuthenticatedToHome: FC = ({ children }) => (\n  <RedirectAuthenticated to=\"/\">{children}</RedirectAuthenticated>\n);\n\nexport const RedirectAnonymous: FC<Props> = ({ children, to }) => {\n  // const { me, loading } = useMe();\n  // if (loading) {\n  //   return null;\n  // }\n  //\n  // if (!me) {\n  //   return <Redirect to={to} />;\n  // }\n\n  return <>{children}</>;\n};\n\nexport const RedirectAnonymousToLogin: FC = ({ children }) => (\n  <RedirectAnonymous to=\"/login\">{children}</RedirectAnonymous>\n);\n","import { generatePath, matchPath } from 'react-router';\nimport { RouteProps } from 'react-router-dom';\nimport { SimpleLink } from 'ui/helpers/SimpleLink';\ninterface MinimalActor {\n  isLocal: boolean;\n  canonicalUrl?: string;\n}\ntype LocationParams = { [paramName: string]: string | number | boolean | undefined } | undefined;\ntype QueryParams = LocationParams;\n\ninterface LocationHelp<Params extends LocationParams, Query extends QueryParams, State = any> {\n  getPath(params: Params, query: Query, pathIndex?: number): string;\n  is(path: string): boolean;\n  getSimpleLink(\n    params: Params,\n    query: Query,\n    actor?: MinimalActor | null,\n    pathIndex?: number\n  ): SimpleLink;\n}\n\nexport const locationHelper = <\n  Params extends LocationParams,\n  Query extends QueryParams,\n  State = any\n>(\n  routeProps: RouteProps\n): LocationHelp<Params, Query, State> => {\n  type ThisLocation = LocationHelp<Params, Query, State>;\n  const routePaths =\n    'string' === typeof routeProps.path\n      ? [routeProps.path]\n      : !routeProps.path?.length\n      ? []\n      : routeProps.path;\n\n  const is: ThisLocation['is'] = path => !!matchPath(path, routeProps);\n\n  const getPath: ThisLocation['getPath'] = (params, query, index = 0) => {\n    const usePath = routePaths[index];\n    //@ts-ignore\n    const searchParams = new URLSearchParams(query || {}).toString();\n    const url = generatePath(usePath, params);\n    return searchParams ? `${url}?${searchParams}` : url;\n  };\n\n  const getSimpleLink: ThisLocation['getSimpleLink'] = (params, query, actor = null, index = 0) => {\n    const internal = actor ? actor.isLocal : true;\n    const internalPath = getPath(params, query, index);\n    const url = internal ? internalPath : actor?.canonicalUrl || '#?#';\n    const simpleLink: SimpleLink = {\n      external: !internal,\n      url\n    };\n    return simpleLink;\n  };\n\n  return {\n    is,\n    getSimpleLink,\n    getPath\n  };\n};\n\n// interface LocationHelpHook<Params extends LocationParams, Query extends QueryParams, State = any> {\n//   is(): boolean;\n//   getSimpleLink(\n//     params: Params,\n//     query: Query,\n//     actor?: MinimalActor | null,\n//     pathIndex?: number\n//   ): SimpleLink;\n// }\n\n// export const useLocationHelp = <\n//   Params extends LocationParams,\n//   Query extends QueryParams,\n//   State = any\n// >(\n//   helper: LocationHelp<Params, Query, State>\n// ): LocationHelpHook<Params, Query, State> => {\n//   const history = useHistory();\n//   type ThisLocationHook = LocationHelpHook<Params, Query, State>;\n\n//   const is = useCallback(() => !!helper.is(history.location.pathname), [\n//     helper,\n//     history.location.pathname\n//   ]);\n\n//   const getSimpleLink: ThisLocationHook['getSimpleLink'] = useCallback(\n//     (params, query, actor = null, index = 0) => {\n//       const internal = actor ? actor.isLocal : true;\n//       const internalPath = helper.getPath(params, query, index);\n//       const url = internal ? internalPath : actor?.canonicalUrl || '#?#';\n//       const simpleLink: SimpleLink = {\n//         external: !internal,\n//         url\n//       };\n//       return simpleLink;\n//     },\n//     [helper]\n//   );\n\n//   return useMemo(\n//     () => ({\n//       getSimpleLink,\n//       is\n//     }),\n//     [getSimpleLink, is]\n//   );\n// };\n","import { LoginPageHOC } from 'HOC/pages/login/LoginPage';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\nimport React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { RedirectAuthenticatedToHome } from './wrappers/RedirectBySession';\nimport { locationHelper } from './lib/helper';\n\ninterface LoginPageRouter {}\nconst LoginPageRouter: FC<RouteComponentProps<LoginPageRouter>> = ({ match }) => {\n  return (\n    <RedirectAuthenticatedToHome>\n      <GuestTemplate withoutHeader>\n        <LoginPageHOC />\n      </GuestTemplate>\n    </RedirectAuthenticatedToHome>\n  );\n};\n\nexport const LoginPageRoute: RouteProps = {\n  exact: true,\n  path: '/login',\n  component: LoginPageRouter\n};\n\nexport const loginLocation = locationHelper<undefined, undefined>(LoginPageRoute);\n","import { useMe } from 'fe/session/useMe';\nimport React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContent, ToastOptions } from 'react-toastify';\nimport { Trans } from '@lingui/macro';\nimport { loginLocation } from 'routes/LoginPageRoute';\n\nexport interface Opts {\n  content?: ToastContent | (() => ToastContent);\n  opts?: ToastOptions;\n}\nconst defaultOpts: Opts = {\n  content: () => (\n    <Trans>\n      You need to <Link to={loginLocation.getPath(undefined, undefined)}>login</Link> for that\n    </Trans>\n  ),\n  opts: { type: 'warning' }\n};\n\nexport function useCallOrNotifyMustLogin<T, Args extends any[]>(\n  _fn: (...args: Args) => Promise<T>,\n  deps: any[],\n  opts?: Opts\n): (...args: Args) => Promise<T | null> {\n  const fn = useCallback(_fn, deps);\n  const notify = useNotifyMustLogin(opts);\n  return useCallback<(...args: Args) => Promise<T | null>>(\n    async (...args: Args) => {\n      return notify() ? null : fn(...args);\n    },\n    [fn, notify]\n  );\n}\n\nexport const useNotifyMustLogin = (options?: Opts) => {\n  const { me } = useMe();\n  const loggedIn = !!me?.user?.id || localStorage.getItem('APOLLO#AUTH_TOKEN');\n\n  return useCallback(() => {\n    const { content, opts } = { ...defaultOpts, ...options };\n    !loggedIn && toast(content, opts);\n    return !loggedIn;\n  }, [loggedIn, options]);\n};\n","import React, { FC } from 'react';\nimport { SearchBox as ISDSearchBox } from 'react-instantsearch-dom';\nimport { searchDisabled } from 'mn-constants';\n\nexport const SearchBox: FC = () => {\n  return searchDisabled ? null : <ISDSearchBox />;\n};\n","import * as React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\n\nconst sizes = {\n  default: '48px',\n  s: '32px',\n  m: '140px',\n  l: '200px'\n};\n\ntype Sizes = keyof typeof sizes;\n\nconst Wrapper = styled(Box)<{ bg?: string; size: Sizes }>`\n  font-family: ${props => props.theme.fontFamily};\n  border-radius: 4px;\n  height: ${props => sizes[props.size]};\n  min-width: ${props => sizes[props.size]};\n  background-color: ${props => (props.bg ? 'transparent' : props.theme.colors.light)};\n  background-image: url(\"${props => props.bg}\");\n  background-size: cover;\n  background-position: center center;\n  span {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    line-height: normal;\n    font-weight: 700;\n    ${props => props.theme.colors.mediumdark};\n  }\n`;\n\nconst Avatar: React.FC<{\n  src?: string;\n  initials?: string;\n  variant?: string;\n  size?: Sizes;\n}> = ({ size = 'default', src, initials, variant }) => (\n  <Wrapper size={size} bg={src}>\n    {initials && !src ? <span>{initials.substr(0, 2).toUpperCase()}</span> : null}\n  </Wrapper>\n);\n\nexport default Avatar;\n","import OutsideClickHandler from 'react-outside-click-handler';\nimport React, { FC } from 'react';\nimport { Box, Flex } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\n// import {  Flag, Upload, Copy } from 'react-feather';\n\ninterface Props {\n  close(): unknown;\n  orientation: string;\n}\nexport const Dropdown: FC<Props> = ({ orientation, close, children }) => (\n  <OutsideClickHandler onOutsideClick={close}>\n    <Wrapper className=\"dropdown\" orientation={orientation}>\n      {children}\n    </Wrapper>\n  </OutsideClickHandler>\n);\n\nconst Wrapper = styled(Box)<{ orientation: string }>`\n  text-align: left;\n  background: ${props => props.theme.colors.appInverse};\n  min-width: 210px;\n  display: block;\n  border-radius: 6px;\n  box-shadow: rgba(101, 119, 134, 0.2) 0 0 15px, rgba(101, 119, 134, 0.15) 0 0 3px 1px;\n  position: absolute;\n  top: ${props => (props.orientation === 'top' ? '8px' : 'auto')};\n  bottom: ${props => (props.orientation === 'bottom' ? '4px' : 'auto')};\n  left: auto;\n  right: ${props => (props.orientation === 'bottom' ? '0px' : '10px')};\n  z-index: 4050;\n`;\nexport const DropdownItem = styled(Flex)`\n  align-items: center;\n  cursor: pointer;\n  padding: 16px;\n  min-width: 100%;\n  width: max-content;\n  flex: 1;\n  &:first-of-type {\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n  }\n  &:hover {\n    div {\n      color: ${props => props.theme.colors.mediumdark} !important;\n    }\n    background: ${props => props.theme.colors.light} !important;\n  }\n`;\n","import * as React from 'react';\nimport {\n  Settings,\n  User,\n  Power,\n  Star,\n  Code,\n  Activity,\n  Package,\n  Plus,\n  PlusSquare\n} from 'react-feather';\nimport styled from '../../themes/styled';\nimport { Trans } from '@lingui/macro';\nimport { useHistory } from 'react-router';\nimport { Text, Flex } from 'rebass/styled-components';\nimport { Dropdown } from '../Dropdown';\nimport { useAnon } from '../../../fe/session/useAnon';\n\nconst List = styled.div<{ lined?: boolean }>`\n  padding: 8px;\n  border-bottom: ${props => (props.lined ? '1px solid #dadada' : null)};\n`;\nconst Item = styled(Flex)`\n  line-height: 50px;\n  height: 50px;\n  cursor: pointer;\n  align-items: center;\n  & span {\n    display: inline-block;\n    margin-right: 8px;\n    .--rtl & {\n      margin-right: 0px;\n      margin-left: 8px;\n    }\n    & svg {\n      vertical-align: sub;\n    }\n  }\n  & a {\n    color: inherit !important;\n    text-decoration: none;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nexport interface Props {\n  toggleDropdown: any;\n  userLink: string;\n}\n\nexport const DropdownSidebar: React.FC<Props> = ({ userLink, toggleDropdown }) => {\n  const { push } = useHistory();\n  const { logout } = useAnon();\n  return (\n    <Dropdown orientation={'top'} close={toggleDropdown}>\n      <List lined>\n        <Item variant=\"link\" onClick={() => push(userLink)}>\n          <span>\n            <User size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>My Profile</Trans>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}/inventory`}>\n              <span>\n                <Package size={16} color={'#333'} />\n              </span>\n              <Trans>My Inventory</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}`}>\n              <span>\n                <Activity size={16} color={'#333'} />\n              </span>\n              <Trans>My Activity</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}/starred`}>\n              <span>\n                <Star size={16} color={'#333'} />\n              </span>\n              <Trans>My favorites</Trans>\n            </a>\n          </Text>\n        </Item>\n      </List>\n      <List>\n        <Item variant=\"link\" onClick={() => push('/settings')}>\n          <span>\n            <Settings size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Settings</Trans>\n          </Text>\n        </Item>\n        <Item variant=\"link\">\n          <Text variant=\"text\">\n            <a href=\"/terms\" target=\"_blank\">\n              <span>\n                <Code size={16} />\n              </span>\n              <Trans>Code of Conduct</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item variant=\"link\" onClick={logout}>\n          <span>\n            <Power size={16} strokeWidth={1} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Sign out</Trans>\n          </Text>\n        </Item>\n      </List>\n    </Dropdown>\n  );\n};\n\ntype TCreateDropdown = {\n  toggleDropdown: () => void;\n  createIntent: () => void;\n  createResource: () => void;\n};\n\nexport const CreateDropdown: React.FC<TCreateDropdown> = ({\n  toggleDropdown,\n  createIntent,\n  createResource\n}) => {\n  return (\n    <Dropdown orientation={'top'} close={toggleDropdown}>\n      <List lined>\n        <Item variant=\"link\" onClick={() => createIntent()}>\n          <span>\n            <PlusSquare size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Create a new intent</Trans>\n          </Text>\n        </Item>\n        <Item variant=\"link\" onClick={() => createResource()}>\n          <span>\n            <Plus size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Create a new resource</Trans>\n          </Text>\n        </Item>\n      </List>\n    </Dropdown>\n  );\n};\n","import { LocaleContext } from 'context/global/localizationCtx';\nimport { logo_small_url, prompt_signin } from 'mn-constants';\nimport { darken, ellipsis } from 'polished';\nimport React, { ReactElement, useState } from 'react';\nimport { ChevronDown, ChevronLeft } from 'react-feather';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { Input } from '@rebass/forms';\nimport Avatar from 'ui/elements/Avatar';\nimport styled from 'ui/themes/styled';\nimport { DropdownSidebar, CreateDropdown } from './dropdown';\n\nexport interface Props {\n  user: {\n    icon: string;\n    name: string;\n    link: string;\n  } | null;\n  Search: ReactElement;\n  toggleSideBar(): unknown;\n  createIntent(): unknown;\n  createResource: any;\n  isOpenDropdown: boolean;\n  toggleDropdown(): unknown;\n}\n\nexport const MainHeader: React.FC<Props> = props => {\n  const history = useHistory();\n  const { i18n } = React.useContext(LocaleContext);\n  const [isCreateOpen, toggleCreate] = useState(false);\n\n  return (\n    <HeaderWrapper>\n      <Container>\n        <Left>\n          <Icon onClick={() => history.goBack()}>\n            <ChevronLeft size=\"20\" />\n          </Icon>\n          <HomeLink to={props.user ? '/' : '/discover'}>\n            <Avatar size=\"s\" src={logo_small_url} />\n          </HomeLink>\n          <Search>\n            <Input />\n            {props.Search}\n          </Search>\n        </Left>\n        <CreateNav>\n          {props.user && (\n            <NavItem sx={{ position: 'relative' }} alignItems=\"center\" onClick={toggleCreate}>\n              <HeaderName ml={2} variant=\"link\">\n                Create\n              </HeaderName>\n              <Right>\n                <ChevronDown size=\"20\" />\n              </Right>\n              {isCreateOpen && (\n                <CreateDropdown\n                  createResource={props.createResource}\n                  createIntent={props.createIntent}\n                  toggleDropdown={() => {\n                    toggleCreate(!isCreateOpen);\n                  }}\n                />\n              )}\n            </NavItem>\n          )}\n        </CreateNav>\n        <Header alignItems={'center'}>\n          {props.user ? (\n            <NavItem\n              sx={{ position: 'relative' }}\n              alignItems=\"center\"\n              onClick={props.toggleDropdown}\n            >\n              <Avatar\n                size=\"s\"\n                initials={props.user.name.substring(0, 2)}\n                src={props.user.icon}\n                variant=\"avatar\"\n              />\n              <HeaderName ml={2} variant=\"link\">\n                {props.user.name}\n              </HeaderName>\n              <Right ml={2}>\n                <ChevronDown size=\"20\" />\n              </Right>\n              {props.isOpenDropdown && (\n                <DropdownSidebar userLink={props.user.link} toggleDropdown={props.toggleDropdown} />\n              )}\n            </NavItem>\n          ) : (\n            <Box>\n              <Signin>\n                <Link to=\"/login\">\n                  <Text variant=\"link\">{i18n._(prompt_signin)}</Text>\n                </Link>\n              </Signin>\n            </Box>\n          )}\n        </Header>\n      </Container>\n    </HeaderWrapper>\n  );\n};\n\nconst Container = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 120px 200px;\n`;\n\nconst Search = styled(Box)`\n  display: flex;\n  margin-top: 7px;\n  input {\n    width: 100%;\n    border-radius: 4px;\n    max-width: 500px;\n    height: 36px;\n    margin: 0;\n    border: 0;\n    background: ${props => props.theme.colors.app};\n  }\n`;\n\nconst Right = styled(Box)`\n  color: ${props => props.theme.colors.medium};\n`;\n\nconst HeaderName = styled(Text)`\n  ${ellipsis('180px')};\n  color: ${props => props.theme.colors.darker};\n`;\n\nconst NavItem = styled(Flex)`\n  border-radius: 0px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n  }\n  ${media.lessThan('1280px')`\n    img {\n        margin-right: 0;\n    }\n  `};\n`;\n\nconst Header = styled(Box)`\n  cursor: pointer;\n  display: flex;\n  flex: 0 0 200px;\n  order: 2;\n  justify-content: flex-end;\n  align-items: center;\n  img {\n    min-width: 36px;\n    height: 36px;\n    border-radius: 36px;\n  }\n`;\n\nconst CreateNav = styled(Box)`\n  cursor: pointer;\n  display: flex;\n  flex: 0 0 120px;\n  order: 2;\n  justify-content: center;\n  align-items: center;\n  img {\n    min-width: 36px;\n    height: 36px;\n    border-radius: 36px;\n  }\n`;\n\nconst Signin = styled(NavItem)`\n  height: 30px;\n  line-height: 30px;\n  text-decoration: none;\n  padding: 0 8px;\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.lighter};\n  border-radius: 4px;\n  margin-top: 10px;\n  &:hover {\n    background: ${props => darken('0.1', props.theme.colors.primary)};\n  }\n  a {\n    text-decoration: none;\n  }\n  div {\n    text-decoration: none;\n    color: ${props => props.theme.colors.lighter};\n  }\n`;\n\nconst Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst Left = styled(Box)`\n  display: grid;\n  grid-template-columns: auto auto 1fr auto;\n  column-gap: 8px;\n`;\n\nconst HeaderWrapper = styled(Box)`\n  border-bottom: ${props => props.theme.colors.border};\n  height: 50px;\n  background: ${props => props.theme.colors.appInverse};\n`;\n\nconst HomeLink = styled(Link)`\n  margin-top: 9px;\n  cursor: pointer;\n`;\n","import { clearFix } from 'polished';\nimport React, { useCallback } from 'react';\nimport ReactDOM from 'react-dom';\n// import Icons from 'ui/atoms/icons.tsx'\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\nimport { X } from 'react-feather';\nimport media from 'styled-media-query';\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(51, 60, 69, 0.95);\n  z-index: 9999999999999;\n  height: 100%;\n  justify-content: center;\n  overflow: auto;\n  cursor: pointer;\n`;\n\nexport const AlertWrapper = styled.div`\n  margin-top: 4px;\n  z-index: 99999;\n  position: relative;\n`;\n\nconst Dialog = styled.div`\n  width: 700px;\n  box-shadow: 0 2px 8px 3px rgba(0, 0, 0, 0.3);\n  z-index: 9999999999;\n  background-color: #ffffff;\n  padding: 0;\n  margin: 40px auto;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  margin-left: -350px;\n  border-radius: 3px;\n  outline: none;\n  transform: translateY(-50%);\n\n  ${media.lessThan('medium')`\n    width: auto;\n    left: 8px;\n    right: 8px;\n    margin: 0;\n  `};\n`;\n\nconst Action = styled.div`\n  ${clearFix()};\n  position: relative;\n`;\n\nconst Close = styled(Box)`\n  position: absolute;\n  right: -10px;\n  top: -10px;\n  cursor: pointer;\n  background: ${props => props.theme.colors.primary};\n  width: 24px;\n  height: 24px;\n  border-radius: 40px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 999999999;\n`;\n\nconst Content = styled.div`\n  ${clearFix()};\n  font-family: ${props => props.theme.fontFamily};\n`;\nexport const Container = styled.div`\n  font-family: ${props => props.theme.fontFamily};\n  min-height: 300px;\n  overflow-y: auto;\n  max-height: 96vh;\n  padding-bottom: 20px;\n`;\n\nexport const Actions = styled(Box)`\n  ${clearFix()};\n  padding: 0 16px;\n  & button {\n    float: right;\n  }\n`;\n\nexport const ActionsSimple = styled(Actions)`\n  ${clearFix()};\n  padding: 20px 0;\n`;\n\nexport const CounterChars = styled.div`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n  text-transform: uppercase;\n  text-align: center;\n  background: #d0d9db;\n  padding: 2px 10px;\n  border-radius: 12px;\n  font-weight: 600;\n  color: #fff;\n  letter-spacing: 1px;\n`;\n\nexport const ContainerForm = styled.div`\n  flex: 1;\n  ${clearFix()};\n  padding-top: 13px;\n  position: relative;\n  input {\n    height: 40px;\n    background: white;\n    border-radius: 2px;\n    border: ${props => props.theme.colors.border};\n  }\n  textarea {\n    padding-top: 16px;\n    line-height: 20px;\n    background: white;\n    border-radius: 2px;\n    border: ${props => props.theme.colors.border};\n    font-family: ${props => props.theme.fontFamily};\n  }\n`;\n\nexport const Header = styled.div`\n  padding: 0 16px;\n  padding-top: 16px;\n  // border-bottom: 1px solid ${props => props.theme.colors.lighter};\n  & h5 {\n    text-align: center !important;\n    margin: 0 !important;\n  }\n`;\n\nexport const Row = styled.div<{ big?: boolean }>`\n  ${clearFix()};\n  border-bottom: 1px solid ${props => props.theme.colors.lighter};\n  height: ${props => (props.big ? '180px' : 'auto')};\n  display: flex;\n  padding: 20px;\n  & textarea {\n    height: 120px;\n  }\n  & label {\n    width: 200px;\n    line-height: 40px;\n    ${media.lessThan('medium')`\n    width: 100%;\n  `};\n  }\n\n  ${media.lessThan('medium')`\n    display: block;\n\n  `};\n`;\n\nclass Portal extends React.Component {\n  static el = (() => {\n    const _el = document.createElement('div');\n    _el.setAttribute('id', 'modalPortal');\n    _el.style.display = 'none';\n    document.body.appendChild(_el);\n    return _el;\n  })();\n  componentDidMount() {\n    Portal.el.style.display = 'block';\n  }\n\n  componentWillUnmount() {\n    Portal.el.style.display = 'none';\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, Portal.el);\n  }\n}\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst Modal: React.FC<Props> = ({ closeModal, children }) => {\n  const handleCloseModal = useCallback(() => closeModal(), [closeModal]);\n  return (\n    <Portal>\n      <Background onClick={handleCloseModal} />\n      <Dialog>\n        <Action>\n          <Close onClick={handleCloseModal}>\n            <X color=\"#fff\" size={16} />\n          </Close>\n        </Action>\n        <Content>{children}</Content>\n      </Dialog>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","// import { isUrlString } from 'fe/lib/helpers/data';\nimport { Schema } from 'yup';\n\nexport const TestUrlOrFile: Parameters<Schema<File | string>['test']> = ([\n  'imageurl',\n  'need a file or an url',\n  (val: File | string) => {\n    return !val ? true : typeof val === 'string' ? true : val instanceof File;\n  }\n] as any) as Parameters<Schema<any>['test']>;\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type SpatialThingsPagesQueryVariables = {};\n\n\nexport type SpatialThingsPagesQuery = (\n  { __typename: 'RootQueryType' }\n  & { spatialThingsPages: (\n    { __typename: 'SpatialThingsPage' }\n    & { edges: Types.Maybe<Array<Types.Maybe<(\n      { __typename: 'SpatialThing' }\n      & Pick<Types.SpatialThing, 'id' | 'name' | 'lat' | 'long'>\n    )>>> }\n  ) }\n);\n\nexport type EconomicEventsFilteredQueryVariables = {\n  action: Types.Scalars['ID']\n};\n\n\nexport type EconomicEventsFilteredQuery = (\n  { __typename: 'RootQueryType' }\n  & { economicEventsFiltered: Types.Maybe<Array<(\n    { __typename: 'EconomicEvent' }\n    & Pick<Types.EconomicEvent, 'id'>\n    & { provider: any, receiver: any }\n  )>> }\n);\n\nexport type UnitsPagesQueryVariables = {};\n\n\nexport type UnitsPagesQuery = (\n  { __typename: 'RootQueryType' }\n  & { unitsPages: (\n    { __typename: 'UnitsPage' }\n    & { edges: Types.Maybe<Array<(\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'symbol' | 'label'>\n    )>> }\n  ) }\n);\n\n\nexport const SpatialThingsPagesDocument = gql`\n    query spatialThingsPages {\n  spatialThingsPages(limit: 15) {\n    edges {\n      id\n      name\n      lat\n      long\n    }\n  }\n}\n    `;\n\n/**\n * __useSpatialThingsPagesQuery__\n *\n * To run a query within a React component, call `useSpatialThingsPagesQuery` and pass it any options that fit your needs.\n * When your component renders, `useSpatialThingsPagesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSpatialThingsPagesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useSpatialThingsPagesQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SpatialThingsPagesQuery, SpatialThingsPagesQueryVariables>) {\n        return ApolloReactHooks.useQuery<SpatialThingsPagesQuery, SpatialThingsPagesQueryVariables>(SpatialThingsPagesDocument, baseOptions);\n      }\nexport function useSpatialThingsPagesLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SpatialThingsPagesQuery, SpatialThingsPagesQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<SpatialThingsPagesQuery, SpatialThingsPagesQueryVariables>(SpatialThingsPagesDocument, baseOptions);\n        }\nexport type SpatialThingsPagesQueryHookResult = ReturnType<typeof useSpatialThingsPagesQuery>;\nexport type SpatialThingsPagesLazyQueryHookResult = ReturnType<typeof useSpatialThingsPagesLazyQuery>;\nexport type SpatialThingsPagesQueryResult = ApolloReactCommon.QueryResult<SpatialThingsPagesQuery, SpatialThingsPagesQueryVariables>;\nexport const EconomicEventsFilteredDocument = gql`\n    query economicEventsFiltered($action: ID!) {\n  economicEventsFiltered(action: $action) {\n    id\n    provider {\n      id\n      name\n      displayUsername\n    }\n    receiver {\n      id\n      name\n      displayUsername\n    }\n  }\n}\n    `;\n\n/**\n * __useEconomicEventsFilteredQuery__\n *\n * To run a query within a React component, call `useEconomicEventsFilteredQuery` and pass it any options that fit your needs.\n * When your component renders, `useEconomicEventsFilteredQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useEconomicEventsFilteredQuery({\n *   variables: {\n *      action: // value for 'action'\n *   },\n * });\n */\nexport function useEconomicEventsFilteredQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<EconomicEventsFilteredQuery, EconomicEventsFilteredQueryVariables>) {\n        return ApolloReactHooks.useQuery<EconomicEventsFilteredQuery, EconomicEventsFilteredQueryVariables>(EconomicEventsFilteredDocument, baseOptions);\n      }\nexport function useEconomicEventsFilteredLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<EconomicEventsFilteredQuery, EconomicEventsFilteredQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<EconomicEventsFilteredQuery, EconomicEventsFilteredQueryVariables>(EconomicEventsFilteredDocument, baseOptions);\n        }\nexport type EconomicEventsFilteredQueryHookResult = ReturnType<typeof useEconomicEventsFilteredQuery>;\nexport type EconomicEventsFilteredLazyQueryHookResult = ReturnType<typeof useEconomicEventsFilteredLazyQuery>;\nexport type EconomicEventsFilteredQueryResult = ApolloReactCommon.QueryResult<EconomicEventsFilteredQuery, EconomicEventsFilteredQueryVariables>;\nexport const UnitsPagesDocument = gql`\n    query unitsPages {\n  unitsPages(limit: 30) {\n    edges {\n      id\n      symbol\n      label\n    }\n  }\n}\n    `;\n\n/**\n * __useUnitsPagesQuery__\n *\n * To run a query within a React component, call `useUnitsPagesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUnitsPagesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUnitsPagesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUnitsPagesQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UnitsPagesQuery, UnitsPagesQueryVariables>) {\n        return ApolloReactHooks.useQuery<UnitsPagesQuery, UnitsPagesQueryVariables>(UnitsPagesDocument, baseOptions);\n      }\nexport function useUnitsPagesLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UnitsPagesQuery, UnitsPagesQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UnitsPagesQuery, UnitsPagesQueryVariables>(UnitsPagesDocument, baseOptions);\n        }\nexport type UnitsPagesQueryHookResult = ReturnType<typeof useUnitsPagesQuery>;\nexport type UnitsPagesLazyQueryHookResult = ReturnType<typeof useUnitsPagesLazyQuery>;\nexport type UnitsPagesQueryResult = ApolloReactCommon.QueryResult<UnitsPagesQuery, UnitsPagesQueryVariables>;\n\n\nexport interface SpatialThingsPagesQueryOperation {\n  operationName: 'spatialThingsPages'\n  result: SpatialThingsPagesQuery\n  variables: SpatialThingsPagesQueryVariables\n  type: 'query'\n}\nexport const SpatialThingsPagesQueryName:SpatialThingsPagesQueryOperation['operationName'] = 'spatialThingsPages'\n\nexport const SpatialThingsPagesQueryRefetch = (\n  variables:SpatialThingsPagesQueryVariables,\n  context?:any\n)=>({\n  query:SpatialThingsPagesDocument,\n  variables,\n  context\n})\n\n\n\nexport interface EconomicEventsFilteredQueryOperation {\n  operationName: 'economicEventsFiltered'\n  result: EconomicEventsFilteredQuery\n  variables: EconomicEventsFilteredQueryVariables\n  type: 'query'\n}\nexport const EconomicEventsFilteredQueryName:EconomicEventsFilteredQueryOperation['operationName'] = 'economicEventsFiltered'\n\nexport const EconomicEventsFilteredQueryRefetch = (\n  variables:EconomicEventsFilteredQueryVariables,\n  context?:any\n)=>({\n  query:EconomicEventsFilteredDocument,\n  variables,\n  context\n})\n\n\n\nexport interface UnitsPagesQueryOperation {\n  operationName: 'unitsPages'\n  result: UnitsPagesQuery\n  variables: UnitsPagesQueryVariables\n  type: 'query'\n}\nexport const UnitsPagesQueryName:UnitsPagesQueryOperation['operationName'] = 'unitsPages'\n\nexport const UnitsPagesQueryRefetch = (\n  variables:UnitsPagesQueryVariables,\n  context?:any\n)=>({\n  query:UnitsPagesDocument,\n  variables,\n  context\n})\n\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type CreateSpatialThingMutationVariables = {\n  lat?: Types.Maybe<Types.Scalars['Float']>,\n  long?: Types.Maybe<Types.Scalars['Float']>,\n  name: Types.Scalars['String'],\n  note?: Types.Maybe<Types.Scalars['String']>\n};\n\n\nexport type CreateSpatialThingMutation = (\n  { __typename: 'RootMutationType' }\n  & { createSpatialThing: Types.Maybe<(\n    { __typename: 'SpatialThingResponse' }\n    & { spatialThing: Types.Maybe<(\n      { __typename: 'SpatialThing' }\n      & Pick<Types.SpatialThing, 'id' | 'lat' | 'long' | 'name' | 'note'>\n    )> }\n  )> }\n);\n\n\nexport const CreateSpatialThingDocument = gql`\n    mutation createSpatialThing($lat: Float, $long: Float, $name: String!, $note: String) {\n  createSpatialThing(spatialThing: {lat: $lat, long: $long, name: $name, note: $note}) {\n    spatialThing {\n      id\n      lat\n      long\n      name\n      note\n    }\n  }\n}\n    `;\nexport type CreateSpatialThingMutationFn = ApolloReactCommon.MutationFunction<CreateSpatialThingMutation, CreateSpatialThingMutationVariables>;\n\n/**\n * __useCreateSpatialThingMutation__\n *\n * To run a mutation, you first call `useCreateSpatialThingMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateSpatialThingMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createSpatialThingMutation, { data, loading, error }] = useCreateSpatialThingMutation({\n *   variables: {\n *      lat: // value for 'lat'\n *      long: // value for 'long'\n *      name: // value for 'name'\n *      note: // value for 'note'\n *   },\n * });\n */\nexport function useCreateSpatialThingMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateSpatialThingMutation, CreateSpatialThingMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateSpatialThingMutation, CreateSpatialThingMutationVariables>(CreateSpatialThingDocument, baseOptions);\n      }\nexport type CreateSpatialThingMutationHookResult = ReturnType<typeof useCreateSpatialThingMutation>;\nexport type CreateSpatialThingMutationResult = ApolloReactCommon.MutationResult<CreateSpatialThingMutation>;\nexport type CreateSpatialThingMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateSpatialThingMutation, CreateSpatialThingMutationVariables>;\n\n\nexport interface CreateSpatialThingMutationOperation {\n  operationName: 'createSpatialThing'\n  result: CreateSpatialThingMutation\n  variables: CreateSpatialThingMutationVariables\n  type: 'mutation'\n}\nexport const CreateSpatialThingMutationName:CreateSpatialThingMutationOperation['operationName'] = 'createSpatialThing'\n\nexport const CreateSpatialThingMutationRefetch = (\n  variables:CreateSpatialThingMutationVariables, \n  context?:any\n)=>({\n  query:CreateSpatialThingDocument,\n  variables,\n  context\n})\n      \n","import { useMemo } from 'react';\nimport { SpatialThingsPagesQueryRefetch } from '../../../HOC/modules/EconomicEventManager/EconomicEventManager.generated';\nimport { useCreateSpatialThingMutation } from './useAddLocation.generated';\nimport { useCallOrNotifyMustLogin } from 'HOC/lib/notifyMustLogin';\n\nexport interface AddLocation {\n  name: string;\n  lat?: number;\n  long?: number;\n  note?: string;\n}\nexport const useAddLocation = () => {\n  const [createSpatialThing, createSpatialThingStatus] = useCreateSpatialThingMutation();\n\n  const createLocation: any = useCallOrNotifyMustLogin(\n    async ({ name, lat, long, note }: AddLocation) => {\n      if (createSpatialThingStatus.loading) {\n        return;\n      }\n\n      return createSpatialThing({\n        variables: {\n          lat,\n          long,\n          name,\n          note\n        },\n        refetchQueries: [SpatialThingsPagesQueryRefetch({})]\n      });\n    },\n    [createSpatialThing, createSpatialThingStatus]\n  );\n  return useMemo(() => {\n    return {\n      createLocation\n    };\n  }, [createLocation]);\n};\n","import { clearFix } from 'polished';\nimport { Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport styled from '../../themes/styled';\nimport { ContainerForm } from '../Modal';\n\nexport const CollectionContainerForm = styled(ContainerForm)`\n  position: relative;\n  padding-top: 0;\n\n  input {\n    background: #fbfbfb;\n    border: 0;\n    font-weight: 700;\n    width: 100%;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  textarea {\n    padding-top: 6px;\n    background: #fbfbfb;\n    border-radius: 2px;\n    border: 0;\n    height: 120px;\n    resize: none;\n  }\n\n  .d-flex {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n\n    ${media.lessThan('medium')`    \n            flex-direction: column;\n        `};\n\n    .item_col-6 {\n      flex-basis: calc(50% - 5px);\n    }\n\n    .align-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .item_photo {\n      margin-bottom: 10px;\n      flex-basis: 140px;\n      height: 140px;\n\n      .bopsip {\n        height: 140px !important;\n      }\n\n      ${media.lessThan('medium')`    \n          flex-basis: 100%;\n          order: 2\n        `};\n    }\n    .item_info {\n      margin-bottom: 10px;\n      flex-basis: calc(100% - 160px);\n\n      ${media.lessThan('medium')`    \n          flex-basis: 100%;\n          order: 1\n        `};\n    }\n  }\n  .d-flex-image.d-flex {\n    ${media.lessThan('medium')`\n      flex-direction: column;\n      align-items: unset;\n    `};\n  }\n  .dropzone {\n    ${media.lessThan('medium')`\n      min-Height: unset;\n      height: auto;\n    `};\n  }\n`;\n\nexport const MapWrapper = styled.div`\n  display: flex;\n  ${media.lessThan('medium')`\n      display: block;\n    `};\n`;\nexport const FlexBetweenContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n\n  & > div {\n    width: calc((100% - 20px) / 2);\n  }\n`;\n\nexport const HeroInfo = styled.div`\n  flex: 1;\n  position: relative;\n  ${clearFix()};\n  & h2 {\n    margin: 0;\n    line-height: 32px !important;\n    color: ${props => props.theme.colors.mediumdark};\n    ${media.lessThan('medium')`\n      margin-top: 8px;\n    `};\n  }\n  & p {\n    margin: 0;\n    color: rgba(0, 0, 0, 0.8);\n    margin-top: 8px;\n    color: ${props => props.theme.colors.mediumdark};\n  }\n  .--rtl & {\n    margin-right: 16px;\n    margin-left: 0px;\n  }\n`;\n\nexport const Hero = styled(Flex)`\n  width: 100%;\n  position: relative;\n  padding: 16px;\n  ${media.lessThan('medium')`\n  text-align: center;\n  display: block;\n`};\n`;\n\nexport const Title = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n`;\n\nexport const Description = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n`;\n","import styled from '../../themes/styled';\n\nexport const Container = styled('div')<any>`\n  margin: 0 10px 12px 0;\n`;\n\nexport const FormGroup = styled('div')<any>`\n  display: block;\n  position: relative;\n`;\nexport const FormLabel = styled('label')<any>`\n  display: block;\n  font-size: 10px;\n  color: #aaa;\n  font-family: 'Arial', sans-serif;\n  text-transform: uppercase;\n  margin-bottom: 2px;\n`;\n\nexport const FormStyled = styled('form')<any>`\n  .d-flex {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    & > div {\n      width: calc(50% - 5px);\n    }\n\n    button {\n      width: 100%;\n      background: #cdcdcd;\n    }\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  width: 100%;\n  margin-bottom: 16px;\n\n  > button {\n    width: 100%;\n  }\n\n  .event_btn {\n    height: 40px;\n    text-transform: uppercase;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    letter-spacing: 1px;\n  }\n`;\n","import { Dispatch, FC } from 'react';\nimport * as React from 'react';\nimport GooglePlacesAutocomplete, { geocodeByAddress } from 'react-google-places-autocomplete';\nimport styled from '../../themes/styled';\n\ntype LocationPikerProps = {\n  formik: any;\n  onSelect: Dispatch<any>;\n};\n\ninterface LatLng {\n  lat: number;\n  lng: number;\n}\n\ninterface AutocompletionRequest {\n  bounds?: [LatLng, LatLng];\n  componentRestrictions?: { country: string | string[] };\n  location?: LatLng;\n  offset?: number;\n  radius?: number;\n  types?: string[];\n}\n\nexport const LocationPiker: FC<LocationPikerProps> = ({ formik, onSelect }) => {\n  const autocompleteSelect = (address: any) => {\n    geocodeByAddress(address.label).then((results: any) => {\n      if (!results[0]) return;\n      onSelect(true);\n      formik.handleChange({ target: { name: 'name', value: results[0].formatted_address } });\n      formik.handleChange({ target: { name: 'lat', value: results[0].geometry.location.lat() } });\n      formik.handleChange({ target: { name: 'long', value: results[0].geometry.location.lng() } });\n    });\n  };\n\n  return (\n    <WrapperSelect>\n      <GooglePlacesAutocomplete\n        selectProps={{\n          placeholder: 'Please add your city and country location',\n          onChange: autocompleteSelect,\n          classNamePrefix: 'zenpub'\n        }}\n        onLoadFailed={error => console.error('Could not inject Google script', error)}\n        apiKey=\"AIzaSyBlbsdiikbCINjPLwD7NNwtsA8-vTcrr0g\"\n      />\n    </WrapperSelect>\n  );\n};\n\nconst WrapperSelect = styled('div')`\n  margin-bottom: 10px;\n  position: relative;\n  z-index: 100;\n  small {\n    display: block;\n    padding-top: 6px;\n    font-size: 10px;\n    color: #aaa;\n  }\n [class*=\"css-2b097c-container\"] > div > div,\n [class*=\"css-2b097c-container\"] > div {\n    display: flex;\n    height: 36px;\n    margin: 0;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n  }\n \n  .css-2b097c-container > div {\n    border-color: #05244f !important;\n    box-shadow: none;\n\n    small {\n      display: none;\n    }\n  }\n  \n  .zenpub__menu > div {\n    display: block !important;\n    background: #fff;\n    min-height: 120px;\n    min-width: 100%;\n    padding: 20px;\n    z-index: 200;\n    box-shadow: 0px 2px 4px 0px #0000001f;\n  }\n  .zenpub__menuList > * ,\n  .zenpub__menuList > * > * {\n     display: block;\n  }\n  .zenpub__input {\n    width: 100%;\n    height: 36px;\n    margin: 0;\n  }\n  .select__control {\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n  }\n  cursor: 'pointer';\n  }\n`;\n","import * as React from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\n\nconst Wrapper = styled(Box)`\n  border-radius: 4px;\n  line-height: 26px;\n  padding: 8px 16px;\n  min-height: 58px;\n  font-family: ${props => props.theme.fontFamily};\n  font-weight: 600;\n`;\nconst Alert: React.FC<{ variant: string }> = ({ variant, children }) => (\n  <Wrapper variant={variant || 'info'}>{children}</Wrapper>\n);\n\nexport default Alert;\n","import React, { FC } from 'react';\nimport styled from 'ui/themes/styled';\nimport Alert from 'ui/elements/Alert';\n\nexport interface Props {\n  id: string | undefined;\n  name: string;\n  type?: string;\n  onChange: any;\n  placeholder?: string;\n  label?: string;\n  readOnly?: boolean;\n  value?: string | number;\n  disabled?: boolean;\n  hint?: {\n    class: 'error' | 'success' | 'disabled';\n    value: string;\n  };\n}\n\nconst CustomInput: FC<Props> = ({\n  id,\n  name,\n  type = 'text',\n  readOnly = false,\n  onChange,\n  placeholder = '',\n  label,\n  value = '',\n  hint = { class: 'error', value: '' },\n  disabled = false\n}) => (\n  <FieldWrapper disabled={disabled}>\n    <label htmlFor={id}>{label}</label>\n    {type !== 'textarea' && (\n      <input\n        id={id}\n        type={type}\n        name={name}\n        readOnly={readOnly}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    )}\n    {type === 'textarea' && (\n      <textarea\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    )}\n    <span className={`hint ${hint.class}`}>{hint.value}</span>\n  </FieldWrapper>\n);\n\nexport default CustomInput;\n\nconst FieldWrapper = styled('div')<any>`\n  textarea,\n  input {\n    opacity: ${props => (props.disabled === true ? '0.7' : '1')};\n    cursor: ${props => (props.disabled === true ? 'default' : 'text')};\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n    display: block;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 10px;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n    margin-bottom: 10px;\n  }\n  textarea {\n    padding: 10px;\n    height: 120px;\n\n    &#eventNote {\n      height: 60px;\n    }\n  }\n`;\n\nexport const CustomAlert = styled(Alert)`\n  background-color: transparent !important;\n  color: #ff5a5f !important;\n  text-align: right !important;\n  line-height: 1 !important;\n`;\n","import React, { FC } from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer } from 'react-leaflet';\nimport './leaflet.css';\nimport styled from 'styled-components';\nimport { theme } from 'ui/themes/default.theme';\nimport { divIcon, LatLngBounds, LatLngLiteral } from 'leaflet';\nimport { MapPin } from 'react-feather';\nimport ReactDOMServer from 'react-dom/server';\nimport media from 'styled-media-query';\n\nexport interface MarkerProps {\n  position: LatLngLiteral;\n  popup?: React.ReactNode;\n}\n\nexport interface MapProps {\n  tileUrl?: string;\n  tileAttribution?: string;\n  center?: LatLngLiteral;\n  markers?: Array<MarkerProps>;\n  zoom?: number;\n}\n\nconst defaultAttribution =\n  '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors';\nconst defaultTileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\nconst mapPin = ReactDOMServer.renderToString(\n  <MapPin size=\"30\" color={theme.colors.primary} fill={theme.colors.secondary} />\n);\nconst markerIcon = divIcon({ className: 'maker--pin', html: mapPin, iconSize: [30, 30] });\n\nconst getCenter = (markers: Array<MarkerProps>, center?: MapProps['center']) => {\n  if (center) {\n    return center;\n  } else if (markers.length === 1) {\n    return markers[0].position;\n  } else if (markers.length > 1) {\n    const bounds = new LatLngBounds(markers.map(({ position }) => [position.lat, position.lng]));\n    return bounds.getCenter();\n  }\n};\n\nexport const Map: FC<MapProps> = ({\n  center,\n  zoom = 20,\n  markers = [],\n  tileAttribution = defaultAttribution\n}) => {\n  const mapCenter = getCenter(markers, center);\n\n  return (\n    <Wrapper>\n      {mapCenter && (\n        <LeafletMap center={mapCenter} zoom={zoom} style={{ height: '100%', width: '100%' }}>\n          <TileLayer url={defaultTileUrl} attribution={tileAttribution} />\n          {markers.map(({ position, popup }, i) => (\n            <Marker icon={markerIcon} key={i} position={position}>\n              {popup && <Popup>{popup}</Popup>}\n            </Marker>\n          ))}\n        </LeafletMap>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n  z-index: 0;\n\n  ${media.lessThan('medium')`\n    height: 200px;\n  `};\n`;\n\nexport default Map;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { FC, useState } from 'react';\nimport * as React from 'react';\nimport { CustomAlert, Heading } from 'rebass/styled-components';\nimport { CollectionContainerForm } from '../../modules/CreateCollectionPanel/style';\nimport { FormGroup, FormLabel } from '../../modules/EconomicEventManager/styles';\nimport styled from '../../themes/styled';\nimport Button from '../Button';\nimport { LocationPiker } from '../LocationPiker';\nimport Input from '../Input';\nimport { Map } from '../Map';\nimport { Container, CounterChars, Header } from 'ui/modules/Modal';\nimport { Hero, HeroInfo } from 'ui/modules/CreateCollectionPanel/style';\nimport media from 'styled-media-query';\n\nexport type LocationPanelProps = {\n  formik: any;\n};\n\nexport const LocationPanel: FC<LocationPanelProps> = ({ formik }) => {\n  const [showLocationPanel, setShowLocationData] = useState(false);\n\n  return (\n    <Container>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          formik.handleSubmit();\n        }}\n      >\n        <Header>\n          <Heading m={2}>\n            <Trans>{i18nMark('Create Location')}</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <WrapperSelect>\n              <CollectionContainerForm>\n                <LocationPiker formik={formik} onSelect={setShowLocationData} />\n              </CollectionContainerForm>\n              {showLocationPanel && (\n                <div className=\"d-flex\">\n                  <div className=\"item_col-6\">\n                    <Map\n                      center={{ lat: formik.values.lat, lng: formik.values.long }}\n                      zoom={12}\n                    ></Map>\n                  </div>\n                  <div className=\"item_col-6\">\n                    <FormGroup>\n                      <FormLabel>{i18nMark('Name')}</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        disabled={formik.isSubmitting}\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Location name')}\n                        value={formik.values.name}\n                      />\n                      <CounterChars>{60 - formik.values.name.length}</CounterChars>\n                    </FormGroup>\n                    {formik.errors.name && (\n                      <CustomAlert variant=\"negative\">{formik.errors.name}</CustomAlert>\n                    )}\n                    <div className=\"coordinate-container\">\n                      <div className=\"coordinate\">\n                        <FormGroup>\n                          <FormLabel>{i18nMark('Lat')}</FormLabel>\n                          <Input\n                            type=\"text\"\n                            id=\"lat\"\n                            name=\"lat\"\n                            readOnly={true}\n                            disabled={formik.isSubmitting}\n                            onChange={formik.handleChange}\n                            placeholder={i18nMark('Name')}\n                            value={formik.values.lat}\n                          />\n                        </FormGroup>\n                      </div>\n\n                      <div className=\"coordinate\">\n                        <FormGroup>\n                          <FormLabel>{i18nMark('Long')}</FormLabel>\n                          <Input\n                            type=\"text\"\n                            id=\"long\"\n                            name=\"long\"\n                            readOnly={true}\n                            disabled={formik.isSubmitting}\n                            onChange={formik.handleChange}\n                            value={formik.values.long}\n                          />\n                        </FormGroup>\n                      </div>\n                    </div>\n\n                    <FormGroup>\n                      <FormLabel>note</FormLabel>\n                      <Input\n                        id=\"note\"\n                        type=\"textarea\"\n                        name=\"note\"\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Note')}\n                        value={formik.values.note}\n                      />\n                    </FormGroup>\n                    {formik.errors.note && (\n                      <CustomAlert variant=\"negative\">{formik.errors.note}</CustomAlert>\n                    )}\n\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: '100%' }}>\n                      <Trans>Create Location</Trans>\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </WrapperSelect>\n          </HeroInfo>\n        </Hero>\n      </form>\n    </Container>\n  );\n};\n\nconst WrapperSelect = styled('div')`\n  margin-bottom: 10px;\n  \n  .d-flex {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n    ${media.lessThan('medium')`\n        display: block;\n      `};\n\n    .item_col-6 {\n      flex-basis: calc(50% - 5px);\n      ${media.lessThan('medium')`\n         flex-basis: unset;\n      `};\n    }\n    \n    .coordinate-container {\n      display: flex;\n      justify-content: space-between;\n      align-items: stretch;\n    }\n    .coordinate {\n      flex-basis: calc(50% - 5px);\n    }\n  }\n  small {\n    display: block;\n    padding-top: 6px;\n    font-size: 10px;\n    color: #aaa;\n  }\n [class*=\"css-2b097c-container\"] > div > div,\n [class*=\"css-2b097c-container\"] > div {\n    display: flex;\n    height: 36px;\n    margin: 0;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n  }\n \n  .css-2b097c-container > div {\n    border-color: #05244f !important;\n    box-shadow: none;\n\n    small {\n      display: none;\n    }\n  }\n  \n  .zenpub__menu {\n    background: #fff;\n    max-height: 200px;\n    padding: 20;\n    box-shadow: 0px 2px 4px 0px #0000001f;\n  }\n  \n  .zenpub__input {\n    width: 100%;\n    height: 36px;\n    margin: 0;\n  }\n  .select__control {\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n  }\n  cursor: 'pointer';\n  }\n`;\n","import { useFormik } from 'formik';\nimport React, { Dispatch, FC } from 'react';\nimport { Slide, toast } from 'react-toastify';\nimport { BasicCreateCollectionFormValues } from 'ui/modules/CreateCollectionPanel';\nimport * as Yup from 'yup';\nimport { TestUrlOrFile } from 'HOC/lib/formik-validations';\nimport { useAddLocation } from '../../../fe/location/add/useAddLocation';\n\nimport { LocationPanel, LocationPanelProps } from '../../../ui/elements/LocationPanel';\n\ntype CreateLocationValues = {\n  name: string;\n  lat: number;\n  long: number;\n  note: string;\n};\n\nexport const validationSchema: Yup.ObjectSchema<BasicCreateCollectionFormValues> = Yup.object<\n  BasicCreateCollectionFormValues\n>({\n  name: Yup.string()\n    .min(2)\n    .max(60)\n    .required(),\n  summary: Yup.string().max(500),\n  icon: Yup.mixed<string | File>().test(...TestUrlOrFile)\n});\n\nexport interface Props {\n  done: Dispatch<boolean>;\n}\n\nexport const CreateLocationPanelHOC: FC<Props> = ({ done }) => {\n  const { createLocation } = useAddLocation();\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(60, 'Too Long!')\n      .required('Required'),\n    note: Yup.string().max(500, 'Too Long!')\n  });\n\n  const formik = useFormik<any>({\n    initialValues: {\n      name: '',\n      lat: '',\n      long: '',\n      note: ''\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n\n    onSubmit: (values: CreateLocationValues) => {\n      return createLocation({\n        name: values.name,\n        lat: values.lat,\n        long: values.long,\n        note: values.note\n      })\n        .then((response: any) => {\n          if (!response.errors) {\n            done(false);\n            toast.success('Location was created', {\n              position: 'top-right',\n              transition: Slide,\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true\n            });\n          }\n        })\n        .catch((error: any) => console.log(error));\n    }\n  });\n\n  const CreateResourcePanelProps: LocationPanelProps = {\n    formik\n  };\n\n  return <LocationPanel {...CreateResourcePanelProps} />;\n};\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type CreateEconomicEventAndNewResourceMutationVariables = {\n  note?: Types.Maybe<Types.Scalars['String']>,\n  atLocation?: Types.Maybe<Types.Scalars['ID']>,\n  action: Types.Scalars['ID'],\n  provider: Types.Scalars['ID'],\n  receiver: Types.Scalars['ID'],\n  hasUnit: Types.Scalars['ID'],\n  hasNumericalValue: Types.Scalars['Float'],\n  name?: Types.Maybe<Types.Scalars['String']>,\n  image?: Types.Maybe<Types.Scalars['URI']>,\n  eventNote?: Types.Maybe<Types.Scalars['String']>,\n  hasPointInTime?: Types.Maybe<Types.Scalars['DateTime']>\n};\n\n\nexport type CreateEconomicEventAndNewResourceMutation = (\n  { __typename: 'RootMutationType' }\n  & { createEconomicEvent: Types.Maybe<(\n    { __typename: 'EconomicEventResponse' }\n    & { economicEvent: (\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id'>\n    ), economicResource: Types.Maybe<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id'>\n    )> }\n  )> }\n);\n\nexport type CreateEconomicEventAndExistResourceMutationVariables = {\n  id: Types.Scalars['ID'],\n  action: Types.Scalars['ID'],\n  provider: Types.Scalars['ID'],\n  receiver: Types.Scalars['ID'],\n  hasUnit: Types.Scalars['ID'],\n  hasNumericalValue: Types.Scalars['Float'],\n  eventNote?: Types.Maybe<Types.Scalars['String']>,\n  hasPointInTime?: Types.Maybe<Types.Scalars['DateTime']>\n};\n\n\nexport type CreateEconomicEventAndExistResourceMutation = (\n  { __typename: 'RootMutationType' }\n  & { createEconomicEvent: Types.Maybe<(\n    { __typename: 'EconomicEventResponse' }\n    & { economicEvent: (\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'hasPointInTime'>\n    ), economicResource: Types.Maybe<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id'>\n    )> }\n  )> }\n);\n\n\nexport const CreateEconomicEventAndNewResourceDocument = gql`\n    mutation createEconomicEventAndNewResource($note: String, $atLocation: ID, $action: ID!, $provider: ID!, $receiver: ID!, $hasUnit: ID!, $hasNumericalValue: Float!, $name: String, $image: URI, $eventNote: String, $hasPointInTime: DateTime) {\n  createEconomicEvent(event: {action: $action, atLocation: $atLocation, provider: $provider, receiver: $receiver, note: $eventNote, hasPointInTime: $hasPointInTime, resourceQuantity: {hasUnit: $hasUnit, hasNumericalValue: $hasNumericalValue}}, newInventoriedResource: {note: $note, name: $name, image: $image, currentLocation: $atLocation}) {\n    economicEvent {\n      id\n    }\n    economicResource {\n      id\n    }\n  }\n}\n    `;\nexport type CreateEconomicEventAndNewResourceMutationFn = ApolloReactCommon.MutationFunction<CreateEconomicEventAndNewResourceMutation, CreateEconomicEventAndNewResourceMutationVariables>;\n\n/**\n * __useCreateEconomicEventAndNewResourceMutation__\n *\n * To run a mutation, you first call `useCreateEconomicEventAndNewResourceMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateEconomicEventAndNewResourceMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createEconomicEventAndNewResourceMutation, { data, loading, error }] = useCreateEconomicEventAndNewResourceMutation({\n *   variables: {\n *      note: // value for 'note'\n *      atLocation: // value for 'atLocation'\n *      action: // value for 'action'\n *      provider: // value for 'provider'\n *      receiver: // value for 'receiver'\n *      hasUnit: // value for 'hasUnit'\n *      hasNumericalValue: // value for 'hasNumericalValue'\n *      name: // value for 'name'\n *      image: // value for 'image'\n *      eventNote: // value for 'eventNote'\n *      hasPointInTime: // value for 'hasPointInTime'\n *   },\n * });\n */\nexport function useCreateEconomicEventAndNewResourceMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateEconomicEventAndNewResourceMutation, CreateEconomicEventAndNewResourceMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateEconomicEventAndNewResourceMutation, CreateEconomicEventAndNewResourceMutationVariables>(CreateEconomicEventAndNewResourceDocument, baseOptions);\n      }\nexport type CreateEconomicEventAndNewResourceMutationHookResult = ReturnType<typeof useCreateEconomicEventAndNewResourceMutation>;\nexport type CreateEconomicEventAndNewResourceMutationResult = ApolloReactCommon.MutationResult<CreateEconomicEventAndNewResourceMutation>;\nexport type CreateEconomicEventAndNewResourceMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateEconomicEventAndNewResourceMutation, CreateEconomicEventAndNewResourceMutationVariables>;\nexport const CreateEconomicEventAndExistResourceDocument = gql`\n    mutation createEconomicEventAndExistResource($id: ID!, $action: ID!, $provider: ID!, $receiver: ID!, $hasUnit: ID!, $hasNumericalValue: Float!, $eventNote: String, $hasPointInTime: DateTime) {\n  createEconomicEvent(event: {resourceInventoriedAs: $id, note: $eventNote, action: $action, provider: $provider, receiver: $receiver, resourceQuantity: {hasUnit: $hasUnit, hasNumericalValue: $hasNumericalValue}, hasPointInTime: $hasPointInTime}) {\n    economicEvent {\n      id\n      hasPointInTime\n    }\n    economicResource {\n      id\n    }\n  }\n}\n    `;\nexport type CreateEconomicEventAndExistResourceMutationFn = ApolloReactCommon.MutationFunction<CreateEconomicEventAndExistResourceMutation, CreateEconomicEventAndExistResourceMutationVariables>;\n\n/**\n * __useCreateEconomicEventAndExistResourceMutation__\n *\n * To run a mutation, you first call `useCreateEconomicEventAndExistResourceMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateEconomicEventAndExistResourceMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createEconomicEventAndExistResourceMutation, { data, loading, error }] = useCreateEconomicEventAndExistResourceMutation({\n *   variables: {\n *      id: // value for 'id'\n *      action: // value for 'action'\n *      provider: // value for 'provider'\n *      receiver: // value for 'receiver'\n *      hasUnit: // value for 'hasUnit'\n *      hasNumericalValue: // value for 'hasNumericalValue'\n *      eventNote: // value for 'eventNote'\n *      hasPointInTime: // value for 'hasPointInTime'\n *   },\n * });\n */\nexport function useCreateEconomicEventAndExistResourceMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateEconomicEventAndExistResourceMutation, CreateEconomicEventAndExistResourceMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateEconomicEventAndExistResourceMutation, CreateEconomicEventAndExistResourceMutationVariables>(CreateEconomicEventAndExistResourceDocument, baseOptions);\n      }\nexport type CreateEconomicEventAndExistResourceMutationHookResult = ReturnType<typeof useCreateEconomicEventAndExistResourceMutation>;\nexport type CreateEconomicEventAndExistResourceMutationResult = ApolloReactCommon.MutationResult<CreateEconomicEventAndExistResourceMutation>;\nexport type CreateEconomicEventAndExistResourceMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateEconomicEventAndExistResourceMutation, CreateEconomicEventAndExistResourceMutationVariables>;\n\n\nexport interface CreateEconomicEventAndNewResourceMutationOperation {\n  operationName: 'createEconomicEventAndNewResource'\n  result: CreateEconomicEventAndNewResourceMutation\n  variables: CreateEconomicEventAndNewResourceMutationVariables\n  type: 'mutation'\n}\nexport const CreateEconomicEventAndNewResourceMutationName:CreateEconomicEventAndNewResourceMutationOperation['operationName'] = 'createEconomicEventAndNewResource'\n\nexport const CreateEconomicEventAndNewResourceMutationRefetch = (\n  variables:CreateEconomicEventAndNewResourceMutationVariables, \n  context?:any\n)=>({\n  query:CreateEconomicEventAndNewResourceDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface CreateEconomicEventAndExistResourceMutationOperation {\n  operationName: 'createEconomicEventAndExistResource'\n  result: CreateEconomicEventAndExistResourceMutation\n  variables: CreateEconomicEventAndExistResourceMutationVariables\n  type: 'mutation'\n}\nexport const CreateEconomicEventAndExistResourceMutationName:CreateEconomicEventAndExistResourceMutationOperation['operationName'] = 'createEconomicEventAndExistResource'\n\nexport const CreateEconomicEventAndExistResourceMutationRefetch = (\n  variables:CreateEconomicEventAndExistResourceMutationVariables, \n  context?:any\n)=>({\n  query:CreateEconomicEventAndExistResourceDocument,\n  variables,\n  context\n})\n      \n","import { useMemo } from 'react';\nimport { useCallOrNotifyMustLogin } from '../../../HOC/lib/notifyMustLogin';\nimport { useCreateEconomicEventAndNewResourceMutation } from './useCreateResource.generated';\n\nexport interface CreateResource {\n  name: string;\n  note?: string;\n  eventNote?: string;\n  hasPointInTime?: string;\n  atLocation: string;\n  action: string;\n  provider: string;\n  receiver: string;\n  hasUnit: string;\n  hasNumericalValue: number;\n  image: string | File | undefined;\n}\n\nexport const useCreateResource = () => {\n  const [\n    createResourceMut,\n    createResourceMutStatus\n  ] = useCreateEconomicEventAndNewResourceMutation();\n\n  const create = useCallOrNotifyMustLogin(\n    async ({\n      name,\n      note,\n      eventNote,\n      hasPointInTime,\n      action,\n      atLocation,\n      provider,\n      receiver,\n      hasUnit,\n      hasNumericalValue,\n      image\n    }: CreateResource) => {\n      if (createResourceMutStatus.loading) {\n        return;\n      }\n\n      return createResourceMut({\n        variables: {\n          name,\n          note,\n          eventNote,\n          hasPointInTime,\n          atLocation,\n          action,\n          provider,\n          receiver,\n          hasUnit,\n          hasNumericalValue,\n          image\n        }\n      });\n    },\n    [createResourceMut]\n  );\n  return useMemo(() => {\n    return {\n      create\n    };\n  }, [create]);\n};\n","import Select from 'react-select';\nimport React, { FC, useState } from 'react';\nimport styled from 'ui/themes/styled';\nimport { darken, lighten, transitions } from 'polished';\nimport { Props } from './select';\n\nconst WrapperSelect = styled(Select)`\n  margin-bottom: 10px;\n  small {\n    display: block;\n    padding-top: 6px;\n    font-size: 10px;\n    color: #aaa;\n  }\n  b,\n  .select__value-container,\n  .select__single-value {\n    display: block;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n  }\n  .select__control > div {\n    height: 36px;\n  }\n  .select__value-container > div:not(.select__single-value) {\n    height: 36px;\n    padding: 0;\n    margin: 0;\n    line-height: 36px;\n  }\n  .select__value-container {\n    height: 36px;\n    padding: 0 10px;\n  }\n  .select__control--menu-is-open,\n  .select__control--is-focused {\n    border-color: #05244f !important;\n    box-shadow: none;\n\n    small {\n      display: none;\n    }\n  }\n  .select__control {\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n  }\n  ${transitions('background, 0.2s')};\n  margin: '0 10px 0 0 ';\n\n  cursor: 'pointer';\n  .select__option--is-disabled {\n    opacity: 0.5;\n  }\n  &:hover && not:['disabled'] {\n    background: ${props =>\n      props.variant === 'primary' || props.variant === 'danger'\n        ? darken('0.1', props.theme.colors.primary)\n        : lighten('0.3', props.theme.colors.primary)};\n  }\n`;\n\nexport const CustomSelect: FC<Props> = ({\n  onInputChange,\n  onSelect,\n  disabled = false,\n  variant,\n  placeholder = '',\n  name,\n  options,\n  id,\n  value,\n  components,\n  noChange,\n  openMenuOnClick\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const optionsList = options\n    ? options.map(el => {\n        return el.isDisabled\n          ? {\n              id: el.id,\n              value: el.label,\n              isDisabled: el.isDisabled,\n              label: (\n                <span>\n                  <b>{el.label}</b>\n                  {el.note && <small>{el.note}</small>}\n                </span>\n              )\n            }\n          : {\n              id: el.id,\n              value: el.label,\n              label: (\n                <span>\n                  <b>{el.label}</b>\n                  {el.note && <small>{el.note}</small>}\n                  {el.displayUsername && el.id === value.id && <small>{el.displayUsername}</small>}\n                </span>\n              )\n            };\n      })\n    : [];\n\n  return (\n    <WrapperSelect\n      onChange={(option: any) => {\n        onSelect(name, {\n          id: option?.id,\n          label: option?.value,\n          displayUsername: option?.displayUsername\n        });\n        setIsOpen(false);\n      }}\n      variant={variant}\n      placeholder={placeholder}\n      disabled={disabled}\n      isOptionDisabled={(option: any) => option.isDisabled}\n      onInputChange={(value: string) => {\n        if (!noChange && value.length > 2) {\n          if (onInputChange) {\n            onInputChange(name, value);\n          }\n          setIsOpen(true);\n        } else if (!noChange && value.length < 3) {\n          setIsOpen(false);\n        }\n      }}\n      className=\"basic-single\"\n      classNamePrefix=\"select\"\n      value={optionsList.find(el => el.id === value?.id) || null}\n      isDisabled={false}\n      isLoading={false}\n      isClearable={true}\n      isRtl={false}\n      isSearchable={true}\n      name={name}\n      id={id}\n      options={optionsList}\n      components={components}\n      openMenuOnClick={openMenuOnClick}\n      menuIsOpen={isOpen}\n      onFocus={() => {\n        noChange && setIsOpen(true);\n      }}\n      onBlur={() => {\n        setIsOpen(false);\n      }}\n    />\n  );\n};\n","import { IntentActions } from '../../modules/EconomicEventManager';\n\nexport interface Props {\n  onSelect: (name: string, option: IntentActions) => void;\n  onInputChange?: (name: string, value: string) => void;\n  options?: IntentActions[];\n  disabled?: boolean;\n  placeholder?: string;\n  variant: string;\n  id: string | number;\n  name: string;\n  value: IntentActions;\n  components?: any;\n  noChange?: boolean;\n  openMenuOnClick?: boolean;\n}\n\n// You may pass variables as a string and get this string in option label\n// If you want to get a complex string consisting of several variables\n// pass the array of variables in the order they are used in the template and the template string\nexport const setSelectOption = (\n  arr: any[] | null | undefined,\n  variables: string | { variables: string[]; template: string }\n) => {\n  if (typeof variables === 'string') {\n    return arr?.length\n      ? arr.map((el: any) => ({\n          id: el.id,\n          label: el[variables],\n          displayUsername: el.displayUsername\n        }))\n      : [];\n  }\n  const getLabel = (element: any) => {\n    let label = `${variables.template}`;\n\n    variables.variables.forEach(variable => {\n      label = label.replace(variable, `${element[variable]}`);\n    });\n\n    return label;\n  };\n\n  return arr?.length\n    ? arr.map((el: any) => {\n        return {\n          id: el.id,\n          label: getLabel(el)\n        };\n      })\n    : [];\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Image, File } from 'react-feather';\nimport { Box, Flex } from 'rebass/styled-components';\n// import { UploadCloud } from 'react-feather';\n// import { Trans } from '@lingui/macro';\nimport styled from 'ui/themes/styled';\n// import { useInstanceInfoQuery } from 'fe/instance/info/useInstanceInfo.generated';\n// import { Trans } from '@lingui/macro';\n// import Alert from 'ui/elements/Alert';\n// import { AlertWrapper } from '../Modal';\n\ninterface Props {\n  initialUrl: string | undefined | null;\n  onFileSelect(file: File | undefined): unknown;\n  uploadType?: 'resource' | string;\n  filePattern?: FilePattern;\n}\n\ntype FilePattern = 'image/*' | '*';\n\nconst DropzoneArea: React.FC<Props> = ({ initialUrl, uploadType, onFileSelect, filePattern }) => {\n  const [fileUrl, setFileUrl] = useState<undefined | null | string>();\n  // const { data: instanceInfoData } = useInstanceInfoQuery();\n  // const uploadMaxBytes = instanceInfoData?.instance?.uploadMaxBytes || 0;\n\n  const [currentFile, setCurrentFile] = useState<{\n    file: File;\n    localUrl: string;\n  }>();\n\n  useEffect(\n    () => () => {\n      fileUrl && URL.revokeObjectURL(fileUrl);\n    },\n    [fileUrl]\n  );\n\n  useEffect(() => {\n    setFileUrl(initialUrl);\n  }, [initialUrl]);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n    // rejectedFiles,\n    // acceptedFiles\n  } = useDropzone({\n    accept: filePattern,\n    // maxSize: uploadMaxBytes,\n    onDrop: acceptedFiles => {\n      const file = acceptedFiles[0];\n      if (!file) {\n        onFileSelect(void 0);\n        setCurrentFile(void 0);\n        return;\n      }\n      onFileSelect(file);\n      setCurrentFile({ file, localUrl: URL.createObjectURL(file) });\n    }\n  });\n\n  return (\n    <>\n      <Box sx={{ height: '100%' }} {...getRootProps({ className: 'dropzone' })}>\n        <InfoContainer className={isDragActive ? 'active' : 'none'}>\n          {!currentFile && uploadType === 'resource' ? (\n            <Thumb className=\"thumb\">\n              <WrapperIcon>\n                <File size={30} strokeWidth={1} color={'rgba(250,250,250, .5)'} />\n              </WrapperIcon>\n            </Thumb>\n          ) : null}\n          {uploadType !== 'resource' ? (\n            <Thumb className=\"thumb\">\n              <WrapperIcon>\n                <Image size={30} strokeWidth={1} color={'rgba(250,250,250, .5)'} />\n              </WrapperIcon>\n              <Img\n                style={{\n                  backgroundImage: `url(\"${currentFile ? currentFile.localUrl : fileUrl}\")`\n                }}\n              />\n            </Thumb>\n          ) : null}\n          {!currentFile ? null : uploadType === 'resource' ? (\n            currentFile.file.type.indexOf('image') === -1 ? (\n              // <WrapperFile>\n              <FileThumb>\n                <File size={20} />\n                {currentFile && <FileName>{currentFile.file.name}</FileName>}\n              </FileThumb>\n            ) : (\n              // </WrapperFile>\n              <WrapperFile>\n                <Thumb>\n                  <WrapperIcon>\n                    <Image size={30} strokeWidth={1} color={'rgba(250,250,250, .5)'} />\n                  </WrapperIcon>\n                  <Img\n                    style={{\n                      backgroundImage: `url(\"${currentFile.localUrl}\")`\n                    }}\n                  />\n                </Thumb>\n                <FileName>{currentFile && currentFile.file.name}</FileName>\n              </WrapperFile>\n            )\n          ) : null}\n\n          <input {...getInputProps()} />\n\n          {/* <UploadCloud size={30} strokeWidth={1} />\n          {isDragActive ? (\n            <Info>\n              <Trans>Drop the file here ...</Trans>\n            </Info>\n          ) : (\n            <Info>\n              <Trans>Drag 'n' drop a file here, or click to select file</Trans>\n            </Info>\n          )} */}\n          {/* rejectedFile ? (\n            <AlertWrapper>\n              <Alert variant=\"negative\">\n                <Trans>\n                  File {rejectedFile.name} too big, can't exceed{' '}\n                  {Math.floor(uploadMaxBytes / 1024 / 1024)}MB\n                </Trans>\n              </Alert>\n            </AlertWrapper>\n          ) : null */}\n        </InfoContainer>\n      </Box>\n    </>\n  );\n};\n\nexport default DropzoneArea;\n\nconst InfoContainer = styled.div`\n  background: ${props => props.theme.colors.lighter};\n  border-radius: 4px;\n  text-align: center;\n  cursor: pointer;\n  box-sizing: border-box;\n  height: inherit;\n  margin: 0px;\n  &.active {\n    border: 1px dashed ${props => props.theme.colors.primary};\n  }\n  .;\n`;\n\nconst FileName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 5px;\n  font-weight: bold;\n  text-align: center;\n  font-style: italic;\n`;\n\nconst WrapperIcon = styled(Flex)`\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  border-radius: 100px;\n  position: absolute;\n  left: 50%;\n  margin-left: -20px;\n  top: 50%;\n  margin-top: -20px;\n  z-index: 9;\n`;\n\nconst WrapperFile = styled.div`\n  padding: 20px 10px;\n  border-radius: 4px;\n`;\n\nconst FileThumb = styled.div`\n  padding: 20px 10px;\n  border-radius: 4px;\n  background: rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Thumb = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  position: relative;\n  height: 114px;\n  object-fit: cover;\n  &:after {\n    position: absolute;\n    content: '';\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-radius: 4px;\n    display: block;\n    background: rgba(0, 0, 0, 0.3);\n  }\n  &:hover {\n    &:after {\n      background: rgba(0, 0, 0, 0.1);\n    }\n  }\n  svg {\n    width: 40px;\n  }\n`;\n\nconst Img = styled(Box)`\n    display: block;\n    border-radius: 4px;\n    height: inherit;\n    background-size: cover;\n}\n`;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport React, { FC } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Box, Heading } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { FormikHook } from 'ui/@types/types';\nimport { CustomSelect as Select } from 'ui/elements/CustomSelect';\nimport { useMe } from '../../../fe/session/useMe';\nimport * as Types from '../../../graphql/types.generated';\n// import { EconomicResource } from '../../../HOC/pages/inventory/InventoryPage';\nimport { setSelectOption } from '../../elements/CustomSelect/select';\nimport styled from '../../themes/styled';\nimport DropzoneArea from '../DropzoneModal';\nimport { IntentActions } from '../EconomicEventManager';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport Input, { CustomAlert } from '../../elements/Input';\nimport { Actions, Container, CounterChars, Header } from 'ui/modules/Modal';\nimport { Hero, CollectionContainerForm, HeroInfo } from '../CreateCollectionPanel/style';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport type CreateIntentFormValues = {\n  name: string;\n  note?: string;\n  eventNote?: string;\n  hasPointInTime: string;\n  atLocation: IntentActions;\n  action: IntentActions;\n  provider: IntentActions;\n  receiver: IntentActions;\n  hasUnit: IntentActions;\n  hasNumericalValue: number;\n  image: string | File | undefined;\n};\n\nexport type TCreateResourcePanel = {\n  title: string;\n  done: () => void;\n  resource?: any;\n  spatialThings?: Types.Maybe<\n    Types.Maybe<\n      { __typename: 'SpatialThing' } & Pick<Types.SpatialThing, 'name' | 'id' | 'lat' | 'long'>\n    >[]\n  > | null;\n  formik: FormikHook<CreateIntentFormValues>;\n  unitPages?: any;\n  actionList?: any;\n  providerList?: null | { id: string; name: string }[];\n  receiverList?: null | { id: string; name: string }[];\n  toggleCreateLocation: (isShow: boolean) => void;\n  setAction?: (name: string) => void;\n};\n\nexport type SelectOption = {\n  label: string;\n  id: string;\n  displayUsername: string;\n};\n\nexport const CreateResourcePanel: FC<TCreateResourcePanel> = ({\n  title,\n  formik,\n  done,\n  unitPages,\n  actionList,\n  spatialThings,\n  providerList,\n  receiverList,\n  toggleCreateLocation,\n  setAction = () => {}\n}) => {\n  const [providerArr, setProviderArr] = React.useState<any>([]);\n  const [receiverArr, setReceiverArr] = React.useState<any>([]);\n  const [unitLst, setUnitLst] = React.useState<any>([]);\n  const [startDate, setStartDate] = React.useState<any>(new Date());\n  const onIconFileSelected = React.useCallback(\n    (file: File) => formik.setValues({ ...formik.values, image: file }),\n    [formik]\n  );\n  const { me } = useMe();\n\n  React.useEffect(() => {\n    if (unitPages?.length) {\n      const unit = unitPages.map((el: { id: string; label: string; symbol: string }) => ({\n        id: el.id,\n        label: `${el.label} / ${el.symbol}`\n      }));\n\n      setUnitLst(unit);\n    }\n  }, [unitPages]);\n  /* eslint-disable */\n  React.useEffect(() => {\n    setProviderArr(\n      setSelectOption(providerList, {\n        variables: ['name', 'displayUsername'],\n        template: 'name / displayUsername'\n      })\n    );\n    setReceiverArr(\n      setSelectOption(receiverList, {\n        variables: ['name', 'displayUsername'],\n        template: 'name / displayUsername'\n      })\n    );\n\n    formik.setValues({\n      ...formik.values,\n      hasPointInTime: new Date().toISOString(),\n      provider: {\n        id: providerList?.find((el: any) => el.id === me?.user?.id)?.id || '',\n        label: providerList?.find((el: any) => el.id === me?.user?.id)?.name || ''\n      },\n      receiver: {\n        id: receiverList?.find((el: any) => el.id === me?.user?.id)?.id || '',\n        label: receiverList?.find((el: any) => el.id === me?.user?.id)?.name || ''\n      }\n    });\n  }, [providerList, receiverList]);\n\n  React.useEffect(() => {\n    setUnitLst(\n      setSelectOption(unitPages?.edges, {\n        variables: ['label', 'symbol'],\n        template: 'label / symbol'\n      })\n    );\n  }, [unitPages]);\n\n  const initialIconUrl = 'string' === typeof formik.values.image ? formik.values.image : '';\n\n  return (\n    <Container>\n      <form onSubmit={formik.handleSubmit}>\n        <Header>\n          <Heading m={2}>\n            <Trans>{title}</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <Box sx={{ width: '140', height: '140' }} className=\"item_photo\">\n                  <DropzoneArea\n                    initialUrl={initialIconUrl}\n                    onFileSelect={onIconFileSelected}\n                    filePattern=\"image/*\"\n                  />\n                </Box>\n                <div className=\"item_info\">\n                  <Box>\n                    <FormGroup>\n                      <FormLabel>{i18nMark('Resource')}</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        disabled={formik.isSubmitting}\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Name of your resource')}\n                        value={formik.values.name}\n                      />\n                      <CounterChars>{60 - formik.values.name.length}</CounterChars>\n                    </FormGroup>\n                    {formik.errors.name && (\n                      <CustomAlert variant=\"negative\">{formik.errors.name}</CustomAlert>\n                    )}\n                  </Box>\n                  <Box>\n                    <FormGroup>\n                      <FormLabel>Event note</FormLabel>\n                      <Input\n                        id=\"eventNote\"\n                        type=\"textarea\"\n                        name=\"eventNote\"\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Event Note')}\n                        value={formik.values.eventNote}\n                      />\n                    </FormGroup>\n                    <CounterChars>\n                      {formik.values.eventNote ? 500 - formik.values.eventNote.length : 500}\n                    </CounterChars>\n                    {formik.errors.eventNote && (\n                      <CustomAlert variant=\"negative\">{formik.errors.eventNote}</CustomAlert>\n                    )}\n                  </Box>\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Provider</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      placeholder={i18nMark('Provider')}\n                      options={providerArr}\n                      variant=\"primary\"\n                      value={formik.values.provider}\n                      id=\"provider\"\n                      name=\"provider\"\n                      components={{ DropdownIndicator: () => null }}\n                      onInputChange={(name: string, value: string) => {\n                        let newList = providerList?.filter(item =>\n                          // @ts-ignore\n                          item?.displayUsername?.toLowerCase().includes(value.toLowerCase())\n                        );\n\n                        setProviderArr(\n                          setSelectOption(newList, {\n                            variables: ['name', 'displayUsername'],\n                            template: 'name / displayUsername'\n                          })\n                        );\n                      }}\n                      openMenuOnClick={false}\n                    />\n                  </FormGroup>\n                  {formik.errors.provider && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.provider && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Receiver</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      placeholder={i18nMark('Receiver')}\n                      options={receiverArr}\n                      variant=\"primary\"\n                      value={formik.values.receiver}\n                      id=\"receiver\"\n                      name=\"receiver\"\n                      components={{ DropdownIndicator: () => null }}\n                      onInputChange={(name: string, value: string) => {\n                        let newList = receiverList?.filter(item =>\n                          // @ts-ignore\n                          item?.displayUsername?.toLowerCase().includes(value.toLowerCase())\n                        );\n\n                        setReceiverArr(\n                          setSelectOption(newList, {\n                            variables: ['name', 'displayUsername'],\n                            template: 'name / displayUsername'\n                          })\n                        );\n                      }}\n                      openMenuOnClick={false}\n                    />\n                  </FormGroup>\n                  {formik.errors.receiver && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.receiver && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <Box>\n                    <FormGroup>\n                      <FormLabel>Actions</FormLabel>\n                      <Select\n                        onSelect={(name, option) => {\n                          setAction(option.id);\n                          formik.setValues({ ...formik.values, action: option });\n                        }}\n                        options={actionList}\n                        variant=\"primary\"\n                        id=\"actions\"\n                        name=\"actions\"\n                        placeholder={i18nMark('Select action')}\n                        value={formik.values.action}\n                        noChange={true}\n                        onInputChange={() => {}}\n                        openMenuOnClick={true}\n                      />\n                    </FormGroup>\n                    {formik.errors.action && (\n                      <CustomAlert variant=\"negative\">\n                        {formik.errors.action && 'Required'}\n                      </CustomAlert>\n                    )}\n                  </Box>\n                  <Box>\n                    <FormLabel>Event date</FormLabel>\n                    <div style={{ width: '100%', border: '1px solid #05244f', padding: '0 10px' }}>\n                      <DatePicker\n                        className=\"date-picker\"\n                        selected={startDate}\n                        onChange={(date: any) => {\n                          setStartDate(date);\n                          formik.setValues({\n                            ...formik.values,\n                            // @ts-ignore\n                            hasPointInTime: date.toISOString()\n                          });\n                        }}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    </div>\n                  </Box>\n                </div>\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Location</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      options={spatialThings?.map((el: any) => ({\n                        id: el.id,\n                        value: el.id,\n                        label: el.name\n                      }))}\n                      placeholder={i18nMark('CustomSelect location')}\n                      value={formik.values.atLocation}\n                      variant=\"primary\"\n                      id=\"atLocation\"\n                      name=\"atLocation\"\n                      noChange={true}\n                      onInputChange={() => {}}\n                      openMenuOnClick={true}\n                    />\n                    <LocationBlockStyle>\n                      <FormLabel>\n                        {i18nMark(\n                          'If you did not find your locations in the list, you can create it'\n                        )}\n                      </FormLabel>\n                      <Button variant=\"show-more\" onClick={() => toggleCreateLocation(true)}>\n                        <Trans>Create Location</Trans>\n                      </Button>\n                    </LocationBlockStyle>\n                  </FormGroup>\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>unit</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      options={unitLst}\n                      variant=\"primary\"\n                      id=\"hasUnit\"\n                      name=\"hasUnit\"\n                      placeholder={i18nMark('Unit')}\n                      value={formik.values.hasUnit}\n                      noChange={true}\n                      onInputChange={() => {}}\n                      openMenuOnClick={true}\n                    />\n                  </FormGroup>\n                  {formik.errors.hasUnit && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.hasUnit && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>numerical value</FormLabel>\n                    <Input\n                      type=\"number\"\n                      id=\"hasNumericalValue\"\n                      name=\"hasNumericalValue\"\n                      onChange={formik.handleChange}\n                      placeholder={i18nMark('Numerical Value')}\n                      value={formik.values.hasNumericalValue}\n                    />\n                  </FormGroup>\n                  {formik.errors.hasNumericalValue && (\n                    <CustomAlert variant=\"negative\">{formik.errors.hasNumericalValue}</CustomAlert>\n                  )}\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <FormGroup>\n                <FormLabel>Resource note</FormLabel>\n                <Input\n                  id=\"note\"\n                  type=\"textarea\"\n                  name=\"note\"\n                  onChange={formik.handleChange}\n                  placeholder={i18nMark('Resource note')}\n                  value={formik.values.note}\n                />\n              </FormGroup>\n              <CounterChars>\n                {formik.values.note ? 500 - formik.values.note.length : 500}\n              </CounterChars>\n              {formik.errors.note && (\n                <CustomAlert variant=\"negative\">{formik.errors.note}</CustomAlert>\n              )}\n            </CollectionContainerForm>\n          </HeroInfo>\n        </Hero>\n        <Actions>\n          <Button\n            variant=\"primary\"\n            isSubmitting={formik.isSubmitting}\n            isDisabled={formik.isSubmitting}\n            type=\"submit\"\n            style={{ marginLeft: '10px' }}\n          >\n            <Trans>Save</Trans>\n          </Button>\n          <Button variant=\"outline\" onClick={done}>\n            <Trans>Cancel</Trans>\n          </Button>\n        </Actions>\n      </form>\n      <ToastContainer />\n    </Container>\n  );\n};\n\nconst LocationBlockStyle = styled('div')`\n  text-align: right;\n  margin: 10px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-end;\n\n  & > * {\n    padding: 5px 0;\n  }\n`;\n","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type CreateDefaultEconomicEventMutationVariables = {\n  name?: Types.Maybe<Types.Scalars['String']>,\n  note?: Types.Maybe<Types.Scalars['String']>,\n  action: Types.Scalars['ID'],\n  hasBeginning: Types.Scalars['DateTime'],\n  hasEnd: Types.Scalars['DateTime']\n};\n\n\nexport type CreateDefaultEconomicEventMutation = (\n  { __typename: 'RootMutationType' }\n  & { createEconomicEvent: Types.Maybe<(\n    { __typename: 'EconomicEventResponse' }\n    & { economicEvent: (\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'hasPointInTime' | 'hasBeginning' | 'hasEnd' | 'id' | 'note'>\n    ) }\n  )> }\n);\n\nexport type AgentsQueryVariables = {};\n\n\nexport type AgentsQuery = (\n  { __typename: 'RootQueryType' }\n  & { agents: Types.Maybe<Array<any>> }\n);\n\n\nexport const CreateDefaultEconomicEventDocument = gql`\n    mutation createDefaultEconomicEvent($name: String, $note: String, $action: ID!, $hasBeginning: DateTime!, $hasEnd: DateTime!) {\n  createEconomicEvent(event: {action: $action, note: $note, hasBeginning: $hasBeginning, hasEnd: $hasEnd}, newInventoriedResource: {name: $name, note: $note}) {\n    economicEvent {\n      hasPointInTime\n      hasBeginning\n      hasEnd\n      id\n      note\n    }\n  }\n}\n    `;\nexport type CreateDefaultEconomicEventMutationFn = ApolloReactCommon.MutationFunction<CreateDefaultEconomicEventMutation, CreateDefaultEconomicEventMutationVariables>;\n\n/**\n * __useCreateDefaultEconomicEventMutation__\n *\n * To run a mutation, you first call `useCreateDefaultEconomicEventMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDefaultEconomicEventMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDefaultEconomicEventMutation, { data, loading, error }] = useCreateDefaultEconomicEventMutation({\n *   variables: {\n *      name: // value for 'name'\n *      note: // value for 'note'\n *      action: // value for 'action'\n *      hasBeginning: // value for 'hasBeginning'\n *      hasEnd: // value for 'hasEnd'\n *   },\n * });\n */\nexport function useCreateDefaultEconomicEventMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateDefaultEconomicEventMutation, CreateDefaultEconomicEventMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateDefaultEconomicEventMutation, CreateDefaultEconomicEventMutationVariables>(CreateDefaultEconomicEventDocument, baseOptions);\n      }\nexport type CreateDefaultEconomicEventMutationHookResult = ReturnType<typeof useCreateDefaultEconomicEventMutation>;\nexport type CreateDefaultEconomicEventMutationResult = ApolloReactCommon.MutationResult<CreateDefaultEconomicEventMutation>;\nexport type CreateDefaultEconomicEventMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateDefaultEconomicEventMutation, CreateDefaultEconomicEventMutationVariables>;\nexport const AgentsDocument = gql`\n    query agents {\n  agents {\n    id\n    name\n    displayUsername\n  }\n}\n    `;\n\n/**\n * __useAgentsQuery__\n *\n * To run a query within a React component, call `useAgentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAgentsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAgentsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useAgentsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<AgentsQuery, AgentsQueryVariables>) {\n        return ApolloReactHooks.useQuery<AgentsQuery, AgentsQueryVariables>(AgentsDocument, baseOptions);\n      }\nexport function useAgentsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<AgentsQuery, AgentsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<AgentsQuery, AgentsQueryVariables>(AgentsDocument, baseOptions);\n        }\nexport type AgentsQueryHookResult = ReturnType<typeof useAgentsQuery>;\nexport type AgentsLazyQueryHookResult = ReturnType<typeof useAgentsLazyQuery>;\nexport type AgentsQueryResult = ApolloReactCommon.QueryResult<AgentsQuery, AgentsQueryVariables>;\n\n\nexport interface CreateDefaultEconomicEventMutationOperation {\n  operationName: 'createDefaultEconomicEvent'\n  result: CreateDefaultEconomicEventMutation\n  variables: CreateDefaultEconomicEventMutationVariables\n  type: 'mutation'\n}\nexport const CreateDefaultEconomicEventMutationName:CreateDefaultEconomicEventMutationOperation['operationName'] = 'createDefaultEconomicEvent'\n\nexport const CreateDefaultEconomicEventMutationRefetch = (\n  variables:CreateDefaultEconomicEventMutationVariables,\n  context?:any\n)=>({\n  query:CreateDefaultEconomicEventDocument,\n  variables,\n  context\n})\n\n\n\nexport interface AgentsQueryOperation {\n  operationName: 'agents'\n  result: AgentsQuery\n  variables: AgentsQueryVariables\n  type: 'query'\n}\nexport const AgentsQueryName:AgentsQueryOperation['operationName'] = 'agents'\n\nexport const AgentsQueryRefetch = (\n  variables:AgentsQueryVariables,\n  context?:any\n)=>({\n  query:AgentsDocument,\n  variables,\n  context\n})\n\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type ActionsQueryVariables = {};\n\n\nexport type ActionsQuery = (\n  { __typename: 'RootQueryType' }\n  & { actions: Types.Maybe<Array<(\n    { __typename: 'Action' }\n    & Pick<Types.Action, 'label' | 'id' | 'note'>\n  )>> }\n);\n\n\nexport const ActionsDocument = gql`\n    query actions {\n  actions {\n    label\n    id\n    note\n  }\n}\n    `;\n\n/**\n * __useActionsQuery__\n *\n * To run a query within a React component, call `useActionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActionsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActionsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useActionsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<ActionsQuery, ActionsQueryVariables>) {\n        return ApolloReactHooks.useQuery<ActionsQuery, ActionsQueryVariables>(ActionsDocument, baseOptions);\n      }\nexport function useActionsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<ActionsQuery, ActionsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<ActionsQuery, ActionsQueryVariables>(ActionsDocument, baseOptions);\n        }\nexport type ActionsQueryHookResult = ReturnType<typeof useActionsQuery>;\nexport type ActionsLazyQueryHookResult = ReturnType<typeof useActionsLazyQuery>;\nexport type ActionsQueryResult = ApolloReactCommon.QueryResult<ActionsQuery, ActionsQueryVariables>;\n\n\nexport interface ActionsQueryOperation {\n  operationName: 'actions'\n  result: ActionsQuery\n  variables: ActionsQueryVariables\n  type: 'query'\n}\nexport const ActionsQueryName:ActionsQueryOperation['operationName'] = 'actions'\n\nexport const ActionsQueryRefetch = (\n  variables:ActionsQueryVariables, \n  context?:any\n)=>({\n  query:ActionsDocument,\n  variables,\n  context\n})\n      \n","/* eslint react-hooks/exhaustive-deps: \"off\" */\n\nimport * as React from 'react';\nimport { FC } from 'react';\nimport { useAgentsQuery } from '../../../fe/resourceDefault/useCreateResource.generated';\nimport { useActionsQuery } from '../IntentPanel/Actions.generated';\nimport { EconomicEventManagerProps } from '../../../ui/modules/EconomicEventManager';\nimport { useUnitsPagesQuery } from './EconomicEventManager.generated';\n\nexport const EconomicEventManagerHOC: FC = ({ children }) => {\n  const intentActionsQ = useActionsQuery();\n  const { data } = useAgentsQuery();\n  const unitPagesQ = useUnitsPagesQuery();\n\n  const intentActions = intentActionsQ.data?.actions;\n  const unitPages = unitPagesQ.data?.unitsPages;\n  const economicEventManager: EconomicEventManagerProps = React.useMemo(\n    () => ({\n      actionList: intentActions?.map((el: any) => {\n        return !['transfer', 'consume', 'produce'].includes(el.id)\n          ? { ...el, isDisabled: true }\n          : { ...el, isDisabled: false };\n      }),\n      providerList: data?.agents,\n      receiverList: data?.agents,\n      unitPages,\n      setAction: () => {}\n    }),\n    [data, intentActions, unitPages]\n  );\n\n  const childrenWithProps = React.Children.map(children, child => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { ...economicEventManager });\n    }\n    return child;\n  });\n\n  return <div>{childrenWithProps}</div>;\n};\n","import { useFormik } from 'formik';\nimport React, { FC } from 'react';\nimport { Slide, toast } from 'react-toastify';\nimport { BasicCreateCollectionFormValues } from 'ui/modules/CreateCollectionPanel';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport { TestUrlOrFile } from 'HOC/lib/formik-validations';\nimport { useCreateResource } from '../../../fe/resource/create/useCreateResource';\n\nimport {\n  CreateResourcePanel,\n  TCreateResourcePanel,\n  CreateIntentFormValues\n} from '../../../ui/modules/CreateResourcePanel';\nimport { useSpatialThingsPagesQuery } from '../EconomicEventManager/EconomicEventManager.generated';\nimport { EconomicEventManagerHOC } from '../EconomicEventManager/EconomicEventManagerHOC';\n\nexport const validationSchema: Yup.ObjectSchema<BasicCreateCollectionFormValues> = Yup.object<\n  BasicCreateCollectionFormValues\n>({\n  name: Yup.string()\n    .min(2)\n    .max(60)\n    .required(),\n  summary: Yup.string().max(500),\n  icon: Yup.mixed<string | File>().test(...TestUrlOrFile)\n});\n\nexport interface Props {\n  done: () => void;\n  toggleCreateLocation: (isShow: boolean) => void;\n  resource?: any;\n}\n\nexport const CreateResourcePanelHOC: FC<Props> = ({\n  done,\n  resource,\n  toggleCreateLocation,\n  ...props\n}) => {\n  const history = useHistory();\n  const { create } = useCreateResource();\n  const spatialThingsQ = useSpatialThingsPagesQuery();\n  const spatialThings = spatialThingsQ.data?.spatialThingsPages;\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(60, 'Too Long!')\n      .required('Required'),\n    note: Yup.string().max(500, 'Too Long!'),\n    action: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    provider: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    receiver: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    hasUnit: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    hasNumericalValue: Yup.string()\n      .required('Required')\n      .notOneOf([0, '0', null, undefined], 'Not null')\n  });\n\n  const formik = useFormik<any>({\n    initialValues: {\n      name: resource?.name || '',\n      note: resource?.note || '',\n      eventNote: resource?.eventNote || '',\n      hasPointInTime: resource?.hasPointInTime || '',\n      image: resource?.image || '',\n      atLocation: {\n        id: resource?.currentLocation?.id || '',\n        label: ''\n      },\n      action: {\n        id: '',\n        label: ''\n      },\n      provider: {\n        id: '',\n        label: '',\n        note: ''\n      },\n      receiver: {\n        id: '',\n        label: '',\n        note: ''\n      },\n      hasUnit: {\n        id: '',\n        label: '',\n        note: ''\n      },\n      hasNumericalValue: 0\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n\n    onSubmit: (values: CreateIntentFormValues) => {\n      return create({\n        name: values.name,\n        action: values.action.id,\n        note: values.note,\n        eventNote: values.eventNote,\n        hasPointInTime: values.hasPointInTime,\n        atLocation: values.atLocation?.id || '',\n        provider: values.provider.id,\n        receiver: values.receiver.id,\n        hasUnit: values.hasUnit.id,\n        hasNumericalValue: values.hasNumericalValue,\n        image: values.image\n      })\n        .then((response: any) => {\n          if (!response.errors) {\n            const newId = response?.data?.createEconomicEvent?.economicResource?.id;\n            const redirect = `/resource/${newId} `;\n            done();\n            history.replace(redirect);\n\n            toast.success('Resource was created', {\n              position: 'top-right',\n              transition: Slide,\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true\n            });\n          } else {\n            throw new Error(response.errors[0].message);\n          }\n        })\n        .catch(error => {\n          toast.error(error.message, {\n            position: 'top-right',\n            transition: Slide,\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true\n          });\n        });\n    }\n  });\n\n  const CreateResourcePanelProps: TCreateResourcePanel = React.useMemo(\n    () => ({\n      ...props,\n      title: 'Create a new Resource',\n      formik,\n      spatialThings: spatialThings?.edges || null,\n      toggleCreateLocation,\n      done\n    }),\n    [formik, spatialThings, toggleCreateLocation, done, props]\n  );\n\n  return (\n    <EconomicEventManagerHOC>\n      <CreateResourcePanel {...CreateResourcePanelProps} />\n    </EconomicEventManagerHOC>\n  );\n};\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type CreateIntentMutationVariables = {\n  name: Types.Scalars['String'],\n  action: Types.Scalars['String'],\n  communityId: Types.Scalars['ID'],\n  note?: Types.Maybe<Types.Scalars['String']>\n};\n\n\nexport type CreateIntentMutation = (\n  { __typename: 'RootMutationType' }\n  & { createIntent: Types.Maybe<(\n    { __typename: 'IntentResponse' }\n    & { intent: (\n      { __typename: 'Intent' }\n      & Pick<Types.Intent, 'id' | 'name' | 'note'>\n      & { inScopeOf: Types.Maybe<Array<{ __typename: 'Category' } | { __typename: 'Organization' } | { __typename: 'Person' } | { __typename: 'Tag' }>> }\n    ) }\n  )> }\n);\n\nexport type CreateOfferMutationVariables = {\n  action: Types.Scalars['String'],\n  name: Types.Scalars['String'],\n  communityId: Types.Scalars['ID'],\n  note?: Types.Maybe<Types.Scalars['String']>,\n  hasUnit: Types.Scalars['ID'],\n  hasNumericalValue: Types.Scalars['Float'],\n  atLocation?: Types.Maybe<Types.Scalars['ID']>\n};\n\n\nexport type CreateOfferMutation = (\n  { __typename: 'RootMutationType' }\n  & { createOffer: Types.Maybe<(\n    { __typename: 'IntentResponse' }\n    & { intent: (\n      { __typename: 'Intent' }\n      & Pick<Types.Intent, 'id' | 'name' | 'note'>\n      & { inScopeOf: Types.Maybe<Array<{ __typename: 'Category' } | { __typename: 'Organization' } | { __typename: 'Person' } | { __typename: 'Tag' }>>, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'lat' | 'long' | 'alt'>\n      )>, resourceQuantity: Types.Maybe<(\n        { __typename: 'Measure' }\n        & Pick<Types.Measure, 'hasNumericalValue'>\n        & { hasUnit: (\n          { __typename: 'Unit' }\n          & Pick<Types.Unit, 'label' | 'id'>\n        ) }\n      )> }\n    ) }\n  )> }\n);\n\n\nexport const CreateIntentDocument = gql`\n    mutation createIntent($name: String!, $action: String!, $communityId: ID!, $note: String) {\n  createIntent(intent: {action: $action, name: $name, inScopeOf: [$communityId], note: $note}) {\n    intent {\n      id\n      inScopeOf {\n        __typename\n      }\n      name\n      note\n    }\n  }\n}\n    `;\nexport type CreateIntentMutationFn = ApolloReactCommon.MutationFunction<CreateIntentMutation, CreateIntentMutationVariables>;\n\n/**\n * __useCreateIntentMutation__\n *\n * To run a mutation, you first call `useCreateIntentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateIntentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createIntentMutation, { data, loading, error }] = useCreateIntentMutation({\n *   variables: {\n *      name: // value for 'name'\n *      action: // value for 'action'\n *      communityId: // value for 'communityId'\n *      note: // value for 'note'\n *   },\n * });\n */\nexport function useCreateIntentMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateIntentMutation, CreateIntentMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateIntentMutation, CreateIntentMutationVariables>(CreateIntentDocument, baseOptions);\n      }\nexport type CreateIntentMutationHookResult = ReturnType<typeof useCreateIntentMutation>;\nexport type CreateIntentMutationResult = ApolloReactCommon.MutationResult<CreateIntentMutation>;\nexport type CreateIntentMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateIntentMutation, CreateIntentMutationVariables>;\nexport const CreateOfferDocument = gql`\n    mutation createOffer($action: String!, $name: String!, $communityId: ID!, $note: String, $hasUnit: ID!, $hasNumericalValue: Float!, $atLocation: ID) {\n  createOffer(intent: {action: $action, name: $name, resourceQuantity: {hasUnit: $hasUnit, hasNumericalValue: $hasNumericalValue}, atLocation: $atLocation, inScopeOf: [$communityId], note: $note}) {\n    intent {\n      id\n      inScopeOf {\n        __typename\n      }\n      name\n      note\n      atLocation {\n        lat\n        long\n        alt\n      }\n      resourceQuantity {\n        hasUnit {\n          label\n          id\n        }\n        hasNumericalValue\n      }\n    }\n  }\n}\n    `;\nexport type CreateOfferMutationFn = ApolloReactCommon.MutationFunction<CreateOfferMutation, CreateOfferMutationVariables>;\n\n/**\n * __useCreateOfferMutation__\n *\n * To run a mutation, you first call `useCreateOfferMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOfferMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOfferMutation, { data, loading, error }] = useCreateOfferMutation({\n *   variables: {\n *      action: // value for 'action'\n *      name: // value for 'name'\n *      communityId: // value for 'communityId'\n *      note: // value for 'note'\n *      hasUnit: // value for 'hasUnit'\n *      hasNumericalValue: // value for 'hasNumericalValue'\n *      atLocation: // value for 'atLocation'\n *   },\n * });\n */\nexport function useCreateOfferMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateOfferMutation, CreateOfferMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateOfferMutation, CreateOfferMutationVariables>(CreateOfferDocument, baseOptions);\n      }\nexport type CreateOfferMutationHookResult = ReturnType<typeof useCreateOfferMutation>;\nexport type CreateOfferMutationResult = ApolloReactCommon.MutationResult<CreateOfferMutation>;\nexport type CreateOfferMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateOfferMutation, CreateOfferMutationVariables>;\n\n\nexport interface CreateIntentMutationOperation {\n  operationName: 'createIntent'\n  result: CreateIntentMutation\n  variables: CreateIntentMutationVariables\n  type: 'mutation'\n}\nexport const CreateIntentMutationName:CreateIntentMutationOperation['operationName'] = 'createIntent'\n\nexport const CreateIntentMutationRefetch = (\n  variables:CreateIntentMutationVariables, \n  context?:any\n)=>({\n  query:CreateIntentDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface CreateOfferMutationOperation {\n  operationName: 'createOffer'\n  result: CreateOfferMutation\n  variables: CreateOfferMutationVariables\n  type: 'mutation'\n}\nexport const CreateOfferMutationName:CreateOfferMutationOperation['operationName'] = 'createOffer'\n\nexport const CreateOfferMutationRefetch = (\n  variables:CreateOfferMutationVariables, \n  context?:any\n)=>({\n  query:CreateOfferDocument,\n  variables,\n  context\n})\n      \n","import { useCallOrNotifyMustLogin } from 'HOC/lib/notifyMustLogin';\nimport { useMemo } from 'react';\nimport { useCreateOfferMutation } from './useCreateIntent.generated';\n\nexport interface CreateOffer {\n  name: string;\n  note?: string;\n  communityId: string;\n  atLocation?: string;\n  hasUnit: string;\n  hasNumericalValue: number;\n}\n\nexport const useCreateIntent = () => {\n  const [createOfferMut, createOfferMutStatus] = useCreateOfferMutation();\n\n  const create = useCallOrNotifyMustLogin(\n    async ({ name, note, communityId, atLocation, hasNumericalValue, hasUnit }: CreateOffer) => {\n      if (createOfferMutStatus.loading) {\n        return;\n      }\n\n      return createOfferMut({\n        variables: {\n          name,\n          note,\n          communityId,\n          action: 'produced',\n          atLocation,\n          hasUnit,\n          hasNumericalValue\n        }\n      });\n    },\n    [createOfferMutStatus, createOfferMut]\n  );\n\n  return useMemo(() => {\n    return {\n      create\n    };\n  }, [create]);\n};\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport React, { FC } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Heading } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { FormikHook } from 'ui/@types/types';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport Input, { CustomAlert } from '../../elements/Input';\nimport { Actions, AlertWrapper, Container, CounterChars, Header } from 'ui/modules/Modal';\nimport * as Types from 'graphql/types.generated';\nimport {\n  Hero,\n  FlexBetweenContainer,\n  CollectionContainerForm,\n  HeroInfo,\n  Description\n} from '../CreateCollectionPanel/style';\nimport { CustomSelect as Select } from 'ui/elements/CustomSelect';\n\nexport type CreateIntentFormValues = {\n  name: string;\n  note?: string;\n  communityId: string;\n  atLocation?: string;\n  hasUnit: string;\n  hasNumericalValue: number;\n};\n\nexport type TCreateIntentPanel = {\n  cancel: () => void;\n  formik: FormikHook<CreateIntentFormValues>;\n  unitPages?: ({ __typename: 'Unit' } & Pick<Types.Unit, 'symbol' | 'label' | 'id'>)[] | null;\n  spatialThings?: Types.Maybe<\n    Types.Maybe<\n      { __typename: 'SpatialThing' } & Pick<Types.SpatialThing, 'name' | 'id' | 'lat' | 'long'>\n    >[]\n  > | null;\n};\n\nexport type SelectOption = {\n  label: string;\n  id: string;\n};\n\nexport const CreateIntentPanel: FC<TCreateIntentPanel> = ({\n  formik,\n  cancel,\n  unitPages,\n  spatialThings\n}) => {\n  const [unitLst, setUnitLst] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    if (unitPages?.length) {\n      const unit = unitPages.map((el: any) => ({\n        id: el.id,\n        label: `${el.label} / ${el.symbol}`\n      }));\n\n      setUnitLst(unit);\n    }\n  }, [unitPages]);\n\n  return (\n    <Container>\n      <form onSubmit={formik.handleSubmit}>\n        <Header>\n          <Heading m={2}>\n            <Trans>Create an intent</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <CollectionContainerForm>\n              <FormGroup>\n                <FormLabel>{i18nMark('Resource')}</FormLabel>\n                <Input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  disabled={formik.isSubmitting}\n                  onChange={formik.handleChange}\n                  hint={{ class: 'error', value: '' }}\n                  placeholder={i18nMark('Name of your resource')}\n                  value={formik.values.name}\n                />\n              </FormGroup>\n              <CounterChars>{60 - formik.values.name.length}</CounterChars>\n              {formik.errors.name && (\n                <AlertWrapper>\n                  <CustomAlert variant=\"negative\">{formik.errors.name}</CustomAlert>\n                </AlertWrapper>\n              )}\n            </CollectionContainerForm>\n            <CollectionContainerForm>\n              <FormLabel>{i18nMark('community name')}</FormLabel>\n              {formik.errors.communityId && (\n                <AlertWrapper>\n                  <CustomAlert variant=\"negative\">{formik.errors.communityId}</CustomAlert>\n                </AlertWrapper>\n              )}\n            </CollectionContainerForm>\n\n            <FlexBetweenContainer>\n              <FormGroup>\n                <FormLabel>{i18nMark('unit')}</FormLabel>\n                <Select\n                  onSelect={(name, option) => {\n                    formik.setValues({ ...formik.values, [name]: option.id });\n                  }}\n                  options={unitLst}\n                  placeholder={i18nMark('unit')}\n                  value={{ id: formik.values.hasUnit, label: '' }}\n                  variant=\"primary\"\n                  id=\"hasUnit\"\n                  name=\"hasUnit\"\n                />\n                {formik.errors.hasUnit && (\n                  <AlertWrapper>\n                    <CustomAlert variant=\"negative\">{formik.errors.hasUnit}</CustomAlert>\n                  </AlertWrapper>\n                )}\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>{i18nMark('Numerical Value')}</FormLabel>\n                <Input\n                  type=\"number\"\n                  id=\"hasNumericalValue\"\n                  name=\"hasNumericalValue\"\n                  onChange={formik.handleChange}\n                  hint={{ class: 'error', value: '' }}\n                  placeholder={i18nMark('Numerical Value')}\n                  value={formik.values.hasNumericalValue.toString()}\n                />\n                {formik.errors.hasNumericalValue && (\n                  <AlertWrapper>\n                    <CustomAlert variant=\"negative\">{formik.errors.hasNumericalValue}</CustomAlert>\n                  </AlertWrapper>\n                )}\n              </FormGroup>\n            </FlexBetweenContainer>\n\n            <CollectionContainerForm>\n              <FormLabel>{i18nMark('location')}</FormLabel>\n              <Select\n                onSelect={(name, option) => {\n                  formik.setValues({ ...formik.values, [name]: option.id });\n                }}\n                options={spatialThings?.map((el: any) => ({\n                  id: el.id,\n                  value: el.id,\n                  label: el.name\n                }))}\n                placeholder={i18nMark('CustomSelect location')}\n                value={{ id: formik.values.atLocation || '', label: '' }}\n                variant=\"primary\"\n                id=\"atLocation\"\n                name=\"atLocation\"\n              />\n            </CollectionContainerForm>\n            <CollectionContainerForm>\n              <Description mt={2}>\n                <FormGroup>\n                  <FormLabel>{i18nMark('description')}</FormLabel>\n                  <Input\n                    type=\"textarea\"\n                    id=\"note\"\n                    name=\"note\"\n                    onChange={formik.handleChange}\n                    disabled={formik.isSubmitting}\n                    hint={{ class: 'error', value: '' }}\n                    placeholder={i18nMark('A description of your intent')}\n                    value={formik.values.note}\n                  />\n                </FormGroup>\n                <CounterChars>\n                  {formik.values.note ? 500 - formik.values.note.length : 500}\n                </CounterChars>\n                {formik.errors.note && (\n                  <AlertWrapper>\n                    <CustomAlert variant=\"negative\">{formik.errors.note}</CustomAlert>\n                  </AlertWrapper>\n                )}\n              </Description>\n            </CollectionContainerForm>\n          </HeroInfo>\n        </Hero>\n        <Actions>\n          <Button\n            variant=\"primary\"\n            isSubmitting={formik.isSubmitting}\n            isDisabled={formik.isSubmitting}\n            type=\"submit\"\n            style={{ marginLeft: '10px' }}\n          >\n            <Trans>Save</Trans>\n          </Button>\n          <Button variant=\"outline\" onClick={cancel}>\n            <Trans>Cancel</Trans>\n          </Button>\n        </Actions>\n      </form>\n      <ToastContainer />\n    </Container>\n  );\n};\n","import { useCreateIntent } from 'fe/intent/create/useCreateIntent';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport { Slide, toast } from 'react-toastify';\nimport {\n  CreateIntentPanel,\n  CreateIntentFormValues,\n  TCreateIntentPanel\n} from 'ui/modules/CreateIntentPanel';\nimport { useHistory } from 'react-router';\nimport { useUnitsPagesQuery } from '../EconomicEventManager/EconomicEventManager.generated';\nimport { useSpatialThingsPagesQuery } from '../EconomicEventManager/EconomicEventManager.generated';\n\nimport * as Yup from 'yup';\nexport type TCreateIntentPanelHOC = {\n  done: () => void;\n  communityId?: string;\n};\n\nexport interface CreateOfferFormValues {\n  name: string;\n  communityId: string;\n  note: string;\n  atLocation?: string;\n  hasUnit: string;\n  hasNumericalValue: number;\n}\n\nexport const CreateIntentPanelHOC: React.FC<TCreateIntentPanelHOC> = ({ done, communityId }) => {\n  const history = useHistory();\n  const { create } = useCreateIntent();\n\n  const unitPagesQ = useUnitsPagesQuery();\n  const unitPages = unitPagesQ.data?.unitsPages;\n\n  const spatialThingsQ = useSpatialThingsPagesQuery();\n  const spatialThings = spatialThingsQ.data?.spatialThingsPages;\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(60, 'Too Long!')\n      .required('Required'),\n    note: Yup.string().max(500, 'Too Long!'),\n    communityId: Yup.string().required('Required'),\n    hasUnit: Yup.string().required('Required'),\n    hasNumericalValue: Yup.string()\n      .required('Required')\n      .notOneOf([0, '0', null, undefined], 'Not null')\n  });\n\n  const formik = useFormik<CreateIntentFormValues>({\n    initialValues: {\n      name: '',\n      communityId: communityId || '',\n      note: '',\n      atLocation: '',\n      hasUnit: '',\n      hasNumericalValue: 0\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n    onSubmit: (values: any) => {\n      return create({\n        name: values.name,\n        communityId: values.communityId,\n        note: values.note,\n        atLocation: values.atLocation,\n        hasUnit: values.hasUnit,\n        hasNumericalValue: values.hasNumericalValue\n      })\n        .then((response: any) => {\n          const redirect = `/communities/${values.communityId}`;\n\n          !response.errors && history.replace(redirect);\n          !response.errors && done();\n          !response.errors &&\n            toast.success('Intent was created', {\n              position: 'top-right',\n              transition: Slide,\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true\n            });\n        })\n        .catch((error: any) => console.log(error));\n    }\n  });\n\n  const createIntentPanelProps: TCreateIntentPanel = {\n    formik: formik,\n    unitPages: unitPages?.edges,\n    spatialThings: spatialThings?.edges || null,\n    cancel: done\n  };\n\n  return <CreateIntentPanel {...createIntentPanelProps} />;\n};\n","import { useMe } from 'fe/session/useMe';\nimport { SideBarContext } from 'HOC/context/SideBar';\nimport { useNotifyMustLogin } from 'HOC/lib/notifyMustLogin';\n// import { CreateCommunityPanelHOC } from 'HOC/modules/CreateCommunityPanel/createCommunityPanelHOC';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\nimport React, { FC, useContext, useMemo, useReducer } from 'react';\nimport { MainHeader, Props as MainHeaderProps } from 'ui/modules/MainHeader';\nimport Modal from 'ui/modules/Modal';\nimport { CreateLocationPanelHOC } from '../CreateLocationPanel/CreateLocationPanelHOK';\nimport { CreateResourcePanelHOC } from '../CreateResourcePanel/CreateResourcePanelHOC';\nimport { CreateIntentPanelHOC } from '../CreateIntentPanel/createIntentPanelHOC';\n\nexport interface MainHeaderHOC {}\nexport const MainHeaderHOC: FC<MainHeaderHOC> = () => {\n  const meQ = useMe();\n\n  const user = meQ.me?.user;\n  const notifiedMustLogin = useNotifyMustLogin();\n  const [showCreateLocation, toggleShowCreateLocation] = React.useState(false);\n\n  const [showCreateIntent, toggleShowCreateIntent] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const [showCreateResource, toggleShowCreateResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const CreateIntentModal = showCreateIntent ? (\n    <Modal closeModal={toggleShowCreateIntent}>\n      <CreateIntentPanelHOC done={toggleShowCreateIntent} />\n    </Modal>\n  ) : null;\n\n  const CreateResourceModal = showCreateResource ? (\n    <Modal closeModal={toggleShowCreateResource}>\n      {showCreateLocation ? (\n        <CreateLocationPanelHOC done={toggleShowCreateLocation} />\n      ) : (\n        <CreateResourcePanelHOC\n          done={toggleShowCreateResource}\n          toggleCreateLocation={toggleShowCreateLocation}\n        />\n      )}\n    </Modal>\n  ) : null;\n\n  const { toggleOpen: toggleSideBar } = useContext(SideBarContext);\n\n  const [isOpenDropdown, toggleDropdown] = useReducer(is => !is, false);\n  const headerProps = useMemo<MainHeaderProps>(() => {\n    const props: MainHeaderProps = {\n      Search: <SearchBox key=\"search\" />,\n      user: user\n        ? {\n            icon: `${process.env.REACT_APP_GRAPHQL_IMG_LINK}${user?.profile?.icon}`,\n            name: `${user.character?.username}`,\n            link: `/user/${user.id}`\n          }\n        : null,\n      toggleSideBar,\n      createIntent: toggleShowCreateIntent,\n      createResource: toggleShowCreateResource,\n      isOpenDropdown,\n      toggleDropdown\n    };\n    return props;\n  }, [user, toggleSideBar, isOpenDropdown]);\n  return (\n    <>\n      {CreateIntentModal}\n      {CreateResourceModal}\n      <MainHeader {...headerProps} />\n    </>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport { useHistory } from 'react-router';\nimport { ChevronLeft } from 'react-feather';\nimport media from 'styled-media-query';\nimport { Link } from 'react-router-dom';\n\nexport interface Props {\n  HeaderBox?: ReactElement;\n  SearchBox: ReactElement;\n}\nexport const Guest: React.FC<Props> = ({ children, HeaderBox, SearchBox }) => {\n  const history = useHistory();\n\n  return (\n    <Page>\n      <SearchBar>\n        <Icon onClick={() => history.goBack()}>\n          <ChevronLeft size=\"20\" />\n        </Icon>\n        {SearchBox}\n        <Link to=\"/login\">Log in</Link>\n      </SearchBar>\n      <Header>{HeaderBox}</Header>\n      <Wrapper>{children}</Wrapper>\n      {/* <Footer /> */}\n    </Page>\n  );\n};\n\nconst Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst Header = styled(Box)`\n  ${media.lessThan('medium')`\n    display: none;\n  `}\n`;\n\nconst SearchBar = styled(Box)`\na {\n  height: 40px;\n  line-height: 40px;\n  padding: 0 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.lighter};\n  margin-right: 8px;\n}\nheight: 75px;\nline-height: 75px;\ntext-align: center;\nbackground: ${props => props.theme.colors.appInverse}\nborder-bottom: ${props => props.theme.colors.border};\ndisplay: flex;\nalign-items: center;\ninput {\n  width: 100%;\n  border-radius: 4px;\n  max-width: 500px;\n  height: 40px;\n  margin: 0;\n  border: 0;\n  background: ${props => props.theme.colors.app};\n}\n.ais-SearchBox {\n  border: 0;\n  height: auto;\n  margin: 0;\n  width: auto;\n  margin: 0;\n  margin-right: 8px;\n  margin-left: 8px;\n  flex:1;\n}\n${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst Page = styled(Box)`\n  height: 100vh;\n  grid-template-rows: 50px auto;\n  row-gap: 8px;\n  display: grid;\n`;\n\nconst Wrapper = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  height: calc(100vh - 66px);\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: 1fr;\n  column-gap: 8px;\n`;\n","import { MainHeaderHOC } from 'HOC/modules/Header/Header';\nimport React, { FC } from 'react';\nimport { Guest, Props } from 'ui/templates/guest';\nimport { ProvideSideBarContext } from 'HOC/context/SideBar';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\n\nexport interface GuestTemplate {\n  withoutHeader?: boolean;\n}\nexport const GuestTemplate: FC<GuestTemplate> = ({ children, withoutHeader = false }) => {\n  const HeaderBox = withoutHeader ? undefined : <MainHeaderHOC />;\n  const props: Props = {\n    HeaderBox,\n    SearchBox: <SearchBox />\n  };\n  return (\n    <ProvideSideBarContext>\n      <Guest {...props}>{children}</Guest>\n    </ProvideSideBarContext>\n  );\n};\n","import { useMemo } from 'react';\nimport { useCreateUserMutation } from '../UserPage.generated';\nimport { useCallOrNotifyMustLogin } from '../../../lib/notifyMustLogin';\nimport { MeQueryRefetch } from 'fe/session/me.generated';\n\nexport interface AddUser {\n  profileName: string;\n  userName?: string;\n  summary?: string;\n}\nexport const useCreateUser = () => {\n  const [createUserQ, createStatus] = useCreateUserMutation();\n  const create = useCallOrNotifyMustLogin(\n    async ({ profileName, userName, summary }: AddUser) => {\n      if (createStatus.loading) {\n        return;\n      }\n\n      return createUserQ({\n        variables: {\n          profileName,\n          userName,\n          summary\n        },\n        refetchQueries: [MeQueryRefetch({})]\n      });\n    },\n    [createUserQ, createStatus]\n  );\n  return useMemo(() => {\n    return {\n      create,\n      createStatus\n    };\n  }, [create, createStatus]);\n};\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { FormikHook } from 'ui/@types/types';\nimport Alert from '../../elements/Alert';\nimport { Input, Textarea } from '@rebass/forms';\nimport Button from 'ui/elements/Button';\nimport { Box, Text, Flex } from 'rebass/styled-components';\nimport styled from '../../themes/styled';\nimport { AlertCircle } from 'react-feather';\nimport { AlertWrapper } from 'ui/modules/Modal';\nimport { INVITE_ONLY_TEXT } from 'mn-constants';\nimport media from 'styled-media-query';\nimport { Link } from 'react-router-dom';\nimport LogoContainer from 'ui/elements/Logo';\n\nlet tt = {\n  login: i18nMark('Sign in'),\n  placeholders: {\n    name: i18nMark('Full name'),\n    userName: i18nMark('Display User name'),\n    summary: i18nMark('Summary')\n  }\n};\n\nexport interface Props {\n  formik: FormikHook<CreateUserFormValues>;\n}\n\nexport interface CreateUserFormValues {\n  profileName: string;\n  userName?: string;\n  summary?: string;\n}\n\nexport const CreateNewUserPage: React.FC<Props> = ({ formik }) => {\n  return (\n    <Container>\n      <LoginWrapper>\n        <LogoContainer />\n        <Header>\n          <Aware p={3}>\n            <Box mr={2}>\n              <AlertCircle size=\"20\" color=\"white\" />\n            </Box>\n            <Text variant=\"suptitle\">{INVITE_ONLY_TEXT}</Text>\n          </Aware>\n        </Header>\n        <Flex mt={2}>\n          <FormWrapper onSubmit={formik.handleSubmit}>\n            <Box>\n              <LabelStyled>\n                <Trans>Full Name</Trans>\n              </LabelStyled>\n              <Input\n                placeholder={tt.placeholders.name}\n                name=\"profileName\"\n                value={formik.values.profileName}\n                onChange={formik.handleChange}\n              />\n              {formik.errors.profileName && (\n                <AlertWrapper>\n                  <Alert variant=\"negative\">{formik.errors.profileName}</Alert>\n                </AlertWrapper>\n              )}\n            </Box>\n            <Box mt={3}>\n              <LabelStyled>\n                <Trans>Display user Name</Trans>\n              </LabelStyled>\n              <Input\n                placeholder={tt.placeholders.userName}\n                name=\"userName\"\n                type=\"userName\"\n                value={formik.values.userName}\n                onChange={formik.handleChange}\n              />\n              {formik.errors.userName && (\n                <AlertWrapper>\n                  <Alert variant=\"negative\">{formik.errors.userName}</Alert>\n                </AlertWrapper>\n              )}\n            </Box>\n            <Box mt={3}>\n              <LabelStyled>\n                <Trans>Summary</Trans>\n              </LabelStyled>\n              <TextareaStyled\n                className=\"summary-textarea\"\n                placeholder={tt.placeholders.summary}\n                disabled={formik.isSubmitting}\n                name=\"summary\"\n                value={formik.values.summary}\n                onChange={formik.handleChange}\n              />\n            </Box>\n            <Box\n              mt={3}\n              css={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n            >\n              <Button\n                variant=\"primary\"\n                isSubmitting={formik.isSubmitting}\n                isDisabled={formik.isSubmitting}\n                type=\"submit\"\n              >\n                <Trans>Create User</Trans>\n              </Button>\n              <LinkWrapper>\n                <Trans>You have account </Trans>\n                <Link to={'/login'} className={'ml-3'}>\n                  <Trans>Sign in</Trans>\n                </Link>\n              </LinkWrapper>\n            </Box>\n          </FormWrapper>\n        </Flex>\n      </LoginWrapper>\n    </Container>\n  );\n};\nexport default CreateNewUserPage;\n\nconst LinkWrapper = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  min-width: 180px;\n`;\n\nconst LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 6px;\n`;\n\nconst TextareaStyled = styled(Textarea)`\n  min-height: 90px;\n  border-radius: 4px;\n  border: 1px solid #dadada !important;\n`;\n\nconst LoginWrapper = styled(Box)`\n  ${media.lessThan('medium')`\n    padding: 16px\n  `};\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 900px;\n  padding-bottom: 50px;\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n`;\n\nconst FormWrapper = styled.form`\n  margin: 0;\n  flex: 1;\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  height: inherit;\n  border: 1px solid #dddfe2;\n  text-align: left;\n  height: fit-content;\n  padding: 16px;\n`;\n\nconst Aware = styled(Flex)<{ green: boolean }>`\n  background: ${props => (props.green ? '#546d4f' : props.theme.colors.secondary)};\n  border-radius: 4px;\n  align-items: center;\n  div {\n    color: white;\n  }\n`;\n","import { useFormik } from 'formik';\nimport React, { FC, useEffect, useMemo } from 'react';\nimport * as Yup from 'yup';\nimport { useCreateUser } from '../user/create/useCreateUser';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { toast } from 'react-toastify';\nimport CreateNewUserPage, { CreateUserFormValues, Props } from 'ui/pages/createNewUser';\nimport { useHistory } from 'react-router';\nimport { useAnon } from 'fe/session/useAnon';\nimport { useNotifyMustLogin } from '../../lib/notifyMustLogin';\n\nconst initialValues: CreateUserFormValues = {\n  profileName: '',\n  userName: '',\n  summary: ''\n};\nconst createUserPageTitle = t`Create New User`;\n\nexport const CreateNewUserHOC: FC = () => {\n  const { logout } = useAnon();\n  const notifyNotLogged = useNotifyMustLogin();\n  notifyNotLogged() && logout();\n\n  usePageTitle(createUserPageTitle);\n  const { create, createStatus } = useCreateUser();\n  const validationSchema: Yup.ObjectSchema<CreateUserFormValues> = Yup.object<CreateUserFormValues>(\n    {\n      profileName: Yup.string()\n        .max(50)\n        .required(),\n      userName: Yup.string()\n        .max(50)\n        .required()\n    }\n  );\n\n  const formik = useFormik<CreateUserFormValues>({\n    initialValues,\n    enableReinitialize: true,\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema,\n    onSubmit: async regInput => {\n      const userData = await create({\n        profileName: regInput.profileName,\n        userName: regInput.userName,\n        summary: regInput.summary\n      });\n\n      // @ts-ignore\n      userData?.data?.createUser.accountId && history.push(`/settings`);\n      return userData;\n    }\n  });\n  const history = useHistory();\n  useEffect(() => {\n    if (createStatus.error?.graphQLErrors.length) {\n      toast.error(createStatus.error?.graphQLErrors[0].message);\n    } else {\n      // history.push(`/user/${createStatus.data}`)\n    }\n  }, [createStatus]);\n\n  const props = useMemo<Props>(\n    () => ({\n      formik\n    }),\n\n    [formik]\n  );\n\n  return <CreateNewUserPage {...props} />;\n};\n","import React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\nimport { CreateNewUserHOC } from 'HOC/pages/createNewUser/CreateNewUserHOC';\n\ninterface SignupPageRouter {}\nconst CreateNewUserRouter: FC<RouteComponentProps<SignupPageRouter>> = () => {\n  return (\n    <GuestTemplate withoutHeader>\n      <CreateNewUserHOC />\n    </GuestTemplate>\n  );\n};\n\nexport const CreateNewUserRoute: RouteProps = {\n  exact: true,\n  path: '/create-user/:token',\n  component: CreateNewUserRouter\n};\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Text } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport LogoContainer from 'ui/elements/Logo';\nimport styled from 'ui/themes/styled';\n\nconst LoginWrapper = styled.div`\n  display: grid;\n  grid-column-gap: 16px;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'form' 'footer';\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 900px;\n  margin-top: 60px;\n  padding: 16px;\n  padding-bottom: 50px;\n \n  }\n`;\n\nconst FormWrapper = styled(Box)`\n  margin-bottom: 100px;\n  width: 432px;\n`;\n\nexport interface Props {\n  result:\n    | null\n    | {\n        error: null;\n        username: string;\n      }\n    | {\n        error: string;\n      };\n}\n\nexport const ConfirmEmail: React.FC<Props> = ({ result }) => {\n  return (\n    <>\n      <Container>\n        <LoginWrapper>\n          <FormWrapper>\n            <LogoContainer />\n            <Wrapper>\n              <Box>\n                {!result ? (\n                  <Text variant=\"text\">Checking ...</Text>\n                ) : result.error === null ? (\n                  <>\n                    <Text variant=\"text\">Email confirmed</Text>\n                    <Text variant=\"text\" sx={{ fontWeight: 'bold', marginTop: '5px' }}>\n                      Welcome {result.username}!\n                    </Text>\n                  </>\n                ) : (\n                  <Text variant=\"text\">Error in email confirmation: {result.error}</Text>\n                )}\n              </Box>\n              <Browse>\n                <Link to={'/login'}>\n                  <Button mt={3} variant=\"primary\">\n                    <Trans>Sign in</Trans>\n                  </Button>\n                </Link>\n              </Browse>\n            </Wrapper>\n          </FormWrapper>\n        </LoginWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default ConfirmEmail;\n\nconst Browse = styled(Box)`\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst Wrapper = styled.div`\n  background: #fff;\n  border-radius: 4px;\n  height: inherit;\n  padding: 30px 20px;\n  text-align: center;\n  height: fit-content;\n`;\n","import { useAnon } from 'fe/session/useAnon';\nimport React, { FC, useEffect, useMemo } from 'react';\nimport ConfirmEmailUI, { Props } from 'ui/pages/confirmEmail';\nimport { useHistory } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\n\nexport interface ConfirmEmailPage {\n  token: string;\n}\n\nconst confirmEmailPageTitle = t`Confirm your email`;\n\nexport const ConfirmEmailPage: FC<ConfirmEmailPage> = ({ token }) => {\n  usePageTitle(confirmEmailPageTitle);\n  const { confirmEmail, confirmEmailStatus } = useAnon();\n  const welcomeUsername = confirmEmailStatus.data?.confirmEmail?.accountId;\n  const { push } = useHistory();\n\n  useEffect(() => {\n    if (welcomeUsername) {\n      setTimeout(() => push('/'), 2000);\n    }\n  }, [welcomeUsername, push]);\n\n  useEffect(() => {\n    confirmEmail(token);\n  }, [token, confirmEmail]);\n\n  const props = useMemo<Props>(\n    () =>\n      confirmEmailStatus.loading\n        ? { result: null }\n        : confirmEmailStatus.error\n        ? { result: { error: confirmEmailStatus.error.message } }\n        : welcomeUsername\n        ? { result: { error: null, username: welcomeUsername } }\n        : { result: { error: 'No Data Received' } },\n\n    [confirmEmailStatus, welcomeUsername]\n  );\n\n  return <ConfirmEmailUI {...props} />;\n};\n","import { ConfirmEmailPage } from 'HOC/pages/confirmEmail/ConfirmEmailPage';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\nimport React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { RedirectAuthenticated } from './wrappers/RedirectBySession';\n\ninterface ConfirmEmailRouter {\n  token: string;\n}\nconst ConfirmEmailRouter: FC<RouteComponentProps<ConfirmEmailRouter>> = ({ match }) => {\n  return (\n    <RedirectAuthenticated to=\"/#welcome\">\n      <GuestTemplate>\n        <ConfirmEmailPage token={match.params.token} />\n      </GuestTemplate>\n    </RedirectAuthenticated>\n  );\n};\n\nexport const ConfirmEmailRoute: RouteProps = {\n  exact: true,\n  path: '/confirm-email/:token',\n  component: ConfirmEmailRouter\n};\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { Input } from '@rebass/forms';\nimport * as React from 'react';\nimport { FormikHook } from 'ui/@types/types';\nimport Alert from 'ui/elements/Alert';\nimport Button from 'ui/elements/Button';\nimport LogoContainer from 'ui/elements/Logo';\nimport { AlertWrapper } from 'ui/modules/Modal';\nimport styled from 'ui/themes/styled';\n\nexport interface NewPasswordFormValues {\n  password: string;\n  passwordConfirm: string;\n}\n\nexport interface Props {\n  formik: FormikHook<NewPasswordFormValues>;\n}\n\nlet tt = {\n  placeholders: {\n    password: i18nMark('Enter your new password'),\n    passwordConfirm: i18nMark('Confirm your new password')\n  }\n};\n\nexport const CreateNewPassword: React.FC<Props> = ({ formik }) => {\n  return (\n    <>\n      <Container>\n        <LoginWrapper>\n          <FormWrapper>\n            <LogoContainer />\n            <Input\n              placeholder={tt.placeholders.password}\n              name=\"password\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.password && (\n              <AlertWrapper>\n                <Alert variant=\"negative\">{formik.errors.password}</Alert>\n              </AlertWrapper>\n            )}\n            <Spacer />\n            <Input\n              placeholder={tt.placeholders.passwordConfirm}\n              name=\"passwordConfirm\"\n              type=\"password\"\n              value={formik.values.passwordConfirm}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.passwordConfirm && (\n              <AlertWrapper>\n                <Alert variant=\"negative\">{formik.errors.passwordConfirm}</Alert>\n              </AlertWrapper>\n            )}\n            <Button\n              variant=\"primary\"\n              isSubmitting={formik.isSubmitting}\n              isDisabled={formik.isSubmitting}\n              type=\"submit\"\n              onClick={formik.submitForm}\n            >\n              <Trans>Save the new password</Trans>\n            </Button>\n          </FormWrapper>\n        </LoginWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default CreateNewPassword;\n\nconst LoginWrapper = styled.div`\n  display: grid;\n  grid-column-gap: 16px;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'form';\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: white;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 432px;\n  margin-top: 60px;\n  padding: 16px;\n  & button {\n    margin-top: 16px;\n    width: 100%;\n    &:hover {\n      background: #d67218 !important;\n    }\n  }\n`;\n\nconst FormWrapper = styled.div`\n  grid-area: form;\n`;\n\nconst Spacer = styled.div`\n  width: 10px;\n  height: 10px;\n`;\n","import React, { FC, useMemo } from 'react';\nimport CreateNewPassword, { Props, NewPasswordFormValues } from 'ui/pages/createNewPassword';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useAnon } from 'fe/session/useAnon';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6)\n    .max(50)\n    .required('Password is required'),\n  passwordConfirm: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Password confirm is required')\n});\nconst initialValues = { password: '', passwordConfirm: '' };\n\nexport interface TCreateNewPasswordPageHOC {\n  token: string;\n}\n\nconst createNewPasswordPageTitle = t`reate new Password`;\n\nexport const CreateNewPasswordPageHOC: FC<TCreateNewPasswordPageHOC> = ({ token }) => {\n  usePageTitle(createNewPasswordPageTitle);\n  const { updatePassword } = useAnon();\n  const formik = useFormik<NewPasswordFormValues>({\n    onSubmit: ({ password, passwordConfirm }) => updatePassword(token, password, passwordConfirm),\n    initialValues,\n    validationSchema\n  });\n  const props = useMemo<Props>(() => {\n    return {\n      formik\n    };\n  }, [formik]);\n\n  return <CreateNewPassword {...props} />;\n};\n","import { CreateNewPasswordPageHOC } from 'HOC/pages/createNewPassword/CreateNewPassword';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\nimport React, { FC, useMemo } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { RedirectAuthenticatedToHome } from './wrappers/RedirectBySession';\n\ninterface CreateNewPasswordPageRouter {\n  token: string;\n}\nconst CreateNewPasswordPageRouter: FC<RouteComponentProps<CreateNewPasswordPageRouter>> = ({\n  match: {\n    params: { token }\n  }\n}) => {\n  const props = useMemo<any>(() => {\n    return {\n      token\n    };\n  }, [token]);\n\n  return (\n    <RedirectAuthenticatedToHome>\n      <GuestTemplate withoutHeader>\n        <CreateNewPasswordPageHOC {...props} />\n      </GuestTemplate>\n    </RedirectAuthenticatedToHome>\n  );\n};\n\nexport const CreateNewPasswordPageRoute: RouteProps = {\n  exact: true,\n  path: '/reset/:token',\n  component: CreateNewPasswordPageRouter\n};\n","import styled from 'ui/themes/styled';\nimport { Box, Flex } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled(Box)`\n  > div:last-of-type {\n    border-bottom: none;\n  }\n`;\n\nexport const MainContainer = styled(Flex)`\n  align-items: stretch;\n  flex-grow: 1;\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport const HomeBox = styled(Flex)`\n  width: 600px;\n  align-items: flex-start;\n  flex-shrink: 1;\n  flex-grow: 1;\n  flex-basis: auto;\n  flex-direction: column;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n`;\n\nexport const WrapperCont = styled(Flex)`\n  width: 100%;\n  height: 100%;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  display: flex;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n  margin-bottom: 80px;\n`;\n\nexport const Wrapper = styled(Flex)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  position: relative;\n  ${media.lessThan('medium')`\n       padding-bottom: 75px;\n  `};\n\n  & ul {\n    display: block;\n\n    & li {\n      display: inline-block;\n\n      & h5 {\n        font-weight: 500;\n      }\n    }\n  }\n\n  & h4 {\n    margin: 0;\n    font-weight: 400 !important;\n    color: #151b26;\n    line-height: 40px;\n  }\n`;\n\nexport const MenuItem = styled(NavLink)`\n  width: auto;\n  overflow: hidden;\n  text-align: center;\n\n  ${media.lessThan('medium')`\n      flex-basis: 44px;\n      overflow: hidden;\n      transition: flex-basis 0.3s ease;\n  `};\n\n  &.active {\n    ${media.lessThan('medium')`\n      flex-basis: 36%;\n      overflow: hidden;\n      transition: flex-basis 0.3s ease;\n  `};\n\n  }\n\n  .text-holder {\n    display: block;\n    ${media.lessThan('medium')`\n      display: none\n  `};\n  }\n\n  .icon-holder {\n    display: none;\n\n    ${media.lessThan('medium')`\n      display: flex;\n  `}\n  }\n\n  &.active .icon-holder {\n    ${media.lessThan('medium')`\n      display: none;\n  `};\n  }\n\n  &.active .text-holder {\n    ${media.lessThan('medium')`\n      display: block;\n  `};\n`;\n\nexport const MenuList = styled(Flex)`\n  border-bottom: ${props => props.theme.colors.border};\n  border-top: ${props => props.theme.colors.border};\n  height: 60px;\n  padding: 12px 8px;\n  background: ${props => props.theme.colors.appInverse};\n\n  ${media.lessThan('medium')`\n      justify-content: space-between;\n      align-item: center;\n      flex-wrap: nowrap;\n  `};\n}\n\na {\n  font-weight: 600;\n  text-decoration: none;\n  margin-right: 8px;\n  color: ${props => props.theme.colors.darker};\n  letterspacing: 1px;\n  padding: 0 8px;\n  line-height: 34px;\n  white-space: nowrap;\n\n  ${media.lessThan('medium')`\n       padding: 0;\n  `};\n\n  &.active,\n  &:hover {\n    color: ${props => props.theme.colors.lighter};\n    background: ${props => props.theme.colors.primary};\n    border-radius: 4px;\n  }\n}\n`;\n\nexport const ObjectsList = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n\n  &.replies > div {\n    margin-bottom: 0;\n    border-bottom: ${props => props.theme.colors.border};\n  }\n\n  > div {\n    &:last-of-type {\n      margin-bottom: 4px;\n      border-bottom: 0;\n    }\n  }\n`;\n\nexport const BottomBordered = styled(Box)`\n  border-bottom: ${props => props.theme.colors.border};\n`;\n\nexport const CollectionsWrapper = styled(Box)`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 16px;\n  row-gap: 16px;\n  margin: 16px;\n  margin-bottom: 24px !important;\n`;\n\nexport const ButtonIcon = styled(Box)`\n  width: 34px;\n  height: 34px;\n  border-radius: 50%;\n  background: ${props => props.theme.colors.lighter};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    stroke: ${props => props.theme.colors.primary};\n  }\n\n  &:focus {\n    background: ${props => props.theme.colors.primary};\n\n    svg {\n      stroke: ${props => props.theme.colors.lighter};\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { Trans } from '@lingui/macro';\nimport { FormikHook } from 'ui/@types/types';\n\nexport interface Props {\n  LoadMoreFormik: FormikHook;\n}\n\nexport const LoadMore: React.FC<Props> = props => {\n  return (\n    <Wrapper p={2}>\n      <Button\n        isSubmitting={props.LoadMoreFormik.isSubmitting}\n        isDisabled={props.LoadMoreFormik.isSubmitting}\n        onClick={props.LoadMoreFormik.submitForm}\n        variant=\"outline\"\n      >\n        <Trans>Load more</Trans>\n      </Button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  button {\n    width: 100%;\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  Wrapper,\n  WrapperCont,\n  List,\n  MainContainer,\n  HomeBox,\n  MenuList,\n  ButtonIcon,\n  MenuItem\n} from 'ui/elements/Layout';\nimport { Flex, Box, Text } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport { FormikHook } from 'ui/@types/types';\n\nimport { LoadMore } from 'ui/modules/Loadmore';\nimport { ReactElement } from 'react';\n\nexport interface Props {\n  tabPaths: {\n    timeline: string;\n  };\n  FeaturedCommunitiesBox: ReactElement;\n  FeaturedCollectionsBox: ReactElement;\n  ActivitiesBox: ReactElement;\n  CommunitiesBoxes: ReactElement;\n  CollectionsBoxes: ReactElement;\n  LoadMoreFormik: FormikHook | null;\n}\nexport const Discover: React.FC<Props> = ({\n  ActivitiesBox,\n  FeaturedCommunitiesBox,\n  FeaturedCollectionsBox,\n  CollectionsBoxes,\n  CommunitiesBoxes,\n  LoadMoreFormik,\n  tabPaths\n}) => {\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <WrapperFeatured>{FeaturedCommunitiesBox}</WrapperFeatured>\n          <Wrapper>\n            <Menu tabPaths={tabPaths} />\n            <Switch>\n              <Route exact path={tabPaths.timeline}>\n                <List>{ActivitiesBox}</List>\n                {LoadMoreFormik && <LoadMore LoadMoreFormik={LoadMoreFormik} />}\n              </Route>\n            </Switch>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\nconst UsersIcon = require('react-feather/dist/icons/users').default;\n\nconst Menu: React.FC<{ tabPaths: Props['tabPaths'] }> = ({ tabPaths }) => (\n  <>\n    <Title px={2} mt={2}>\n      <Text variant=\"suptitle\">Browse Home instance</Text>\n    </Title>\n    <MenuList>\n      <MenuItem exact to={tabPaths.timeline}>\n        <div className=\"text-holder\">\n          <Trans>\n            <Trans>Timeline</Trans>\n          </Trans>\n        </div>\n        <ButtonIcon className=\"icon-holder\">\n          <UsersIcon size=\"24\" />\n        </ButtonIcon>\n      </MenuItem>\n    </MenuList>\n  </>\n);\nconst Title = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  height: 40px;\n  line-height: 40px;\n`;\n\nconst WrapperFeatured = styled(Flex)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 8px;\n  max-height: 270px;\n`;\n\nexport default Discover;\n","import React, { FC, useMemo } from 'react';\nimport { Discover, Props } from 'ui/pages/discover';\nimport { Box } from 'rebass';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { discoverLocation } from 'routes/DiscoverPageRoute';\n\nexport enum DiscoverPageTabs {\n  Activities,\n  Communities,\n  Collections\n}\n\nexport interface DiscoverPage {\n  tab: DiscoverPageTabs;\n  basePath: string;\n}\n\nconst discoverActivitiesPageTitle = t`Discover Activities`;\n\nexport const DiscoverPage: FC<DiscoverPage> = ({ basePath, tab }) => {\n  const discovberPageTitle =\n    tab === DiscoverPageTabs.Activities ? discoverActivitiesPageTitle : discoverActivitiesPageTitle; //never\n  usePageTitle(discovberPageTitle);\n  // const { activitiesPage } = useInstanceOutboxActivities();\n  // const [activitiesPageNext /* , activitiesPagePrevious */] = activitiesPage.formiks;\n\n  const propsUI = useMemo<Props>(() => {\n    const FeaturedCollectionsBox = <div>FeaturedCollections</div>;\n    const FeaturedCommunitiesBox = <div>FeaturedCommunities</div>;\n    const ActivitiesBox = (\n      <>\n        {[].map((activity: any) => (\n          <div>ActivityPreviewHOC, {activity}</div>\n          // <ActivityPreviewHOC activityId={activity.id} key={activity.id} />\n        ))}\n      </>\n    );\n\n    const CollectionsBoxes = (\n      <>\n        {[].map((collection: any) => (\n          <Box m={2} key={collection.id}>\n            <div>CollectionPreviewHOC, {collection}</div>\n            {/*<CollectionPreviewHOC collectionId={collection.id} />*/}\n          </Box>\n        ))}\n      </>\n    );\n    const CommunitiesBoxes = (\n      <>\n        {[].map((community: any) => (\n          <Box m={2} key={community.id}>\n            <div>CommunityPreviewHOC, {community}</div>\n            {/*<CommunityPreviewHOC communityId={community.id} />*/}\n          </Box>\n        ))}\n      </>\n    );\n    const LoadMoreFormik =\n      tab === DiscoverPageTabs.Activities\n        ? () => {\n            console.log(DiscoverPageTabs.Activities);\n          }\n        : null;\n\n    const tabPaths: Props['tabPaths'] = {\n      timeline: discoverLocation.getPath({ tab: undefined }, undefined)\n    };\n\n    const props: any = {\n      tabPaths,\n      ActivitiesBox,\n      FeaturedCollectionsBox,\n      FeaturedCommunitiesBox,\n      CollectionsBoxes,\n      CommunitiesBoxes,\n      LoadMoreFormik\n    };\n\n    return props;\n  }, [tab]);\n\n  return <Discover {...propsUI} />;\n};\n","import { Trans } from '@lingui/macro';\nimport { LocaleContext } from 'context/global/localizationCtx';\nimport { logo_small_url, my_timeline } from 'mn-constants';\nimport { ellipsis } from 'polished';\nimport * as React from 'react';\nimport { Globe } from 'react-feather';\nimport { NavLink } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\n// import Dropdown from \"./dropdown\";\nimport Avatar from 'ui/elements/Avatar';\n// import Loader from \"../../components/elements/Loader/Loader\";\nimport styled from '../../themes/styled';\n\nexport enum Status {\n  Loading,\n  Loaded\n}\n\nconst SidebarComponent = styled(Flex)`\n  width: 240px;\n  // ${media.lessThan('medium')`\n  //   width: 50px;\n  // `}\n`;\n\nconst InternalWrapper = styled(Box)<{ isOpen: boolean }>`\n  transition: 'all 250ms ease';\n  flex: 1;\n`;\n\nconst SidebarFixed = styled(Box)`\n  justify-content: space-between;\n  height: 100%;\n  display: flex;\n  ${media.lessThan('1280px')`\nwidth: auto;\n`} ${media.lessThan('860px')`\n    position: relative;\nwidth: 100%\n`};\n`;\n\nconst SidebarOverflow = styled(Box)`\n  overflow-y: auto;\n  flex: 1;\n`;\n\n// const Header = styled(Box)`\n//   cursor: pointer;\n//   img {\n//     min-width: 36px;\n//     height: 36px;\n//     border-radius: 36px;\n//   }\n//   input {\n//     margin: 0 8px !important;\n//     border-radius: 100px;/1\n//     border-width: 1px;\n//     ${media.lessThan('1280px')`\n// display: none;\n//     `};\n//   }\n// `;\nconst Nav = styled(Box)`\n  a {\n    text-decoration: none;\n  }\n`;\n//\n// const CommunityLink = styled(NavLink)`\n//   margin-bottom: 0px;\n//   img {\n//     width: 36px;\n//     height: 36px;\n//   }\n//   &.active {\n//     > div {\n//       background: ${props => props.theme.colors.primary};\n//     }\n//     div {\n//       color: ${props => props.theme.colors.appInverse} !important;\n//     }\n//     position: relative;\n//   }\n// `;\n\nconst SidebarLink = styled(NavLink)`\n  position: relative;\n  color: inherit;\n  img {\n    width: 36px;\n    height: 36px;\n  }\n  &.active {\n    div {\n      color: ${props => props.theme.colors.primary};\n      position: relative;\n    }\n  }\n  div {\n    color: ${props => (props.isActive ? props.theme.colors.primary : props.theme.colors.darker)};\n  }\n`;\n\nconst NavItem = styled(Flex)`\n  border-radius: 4px;\n  padding: 0px 4px;\n  &:hover {\n    background: ${props => props.theme.colors.medium};\n  }\n  ${media.lessThan('1280px')`\nimg {\n    margin-right: 0;\n}\n`};\n`;\n\nconst ItemTitle = styled(Text)`\n  height: 50px;\n  line-height: 50px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.darker};\n  a:focus,\n  a:active {\n    color: inherit;\n  }\n  ${ellipsis('220px')};\n`;\n\n// const Right = styled(Box)`\n// color: ${props => props.theme.colors.medium};\n// //${media.lessThan('1280px')`\n// //display: none;\n// //`};\n// `;\n\nconst ItemTitleDir = styled(ItemTitle)`\n  margin-left: 8px;\n  .--rtl & {\n    margin-right: 8px;\n    margin-left: 0px;\n  }\n`;\n\n// const HeaderName = styled(Text)`\n//   flex: 1;\n//   ${ellipsis('180px')};\n// `;\n\nexport interface CommunityPreview {\n  link: string;\n  name: string;\n  icon: string;\n}\n\ninterface SidebarLoaded {\n  status: Status.Loaded;\n  discoverPath: string;\n  homePath: string;\n  isSidebarOpen: boolean;\n  communities: CommunityPreview[];\n  LoadMoreFormik: FormikHook | null;\n}\n\nexport interface SidebarLoading {\n  status: Status.Loading;\n  isSidebarOpen: boolean;\n}\n\nexport type Props = SidebarLoaded | SidebarLoading;\n\nexport const Sidebar: React.FC<Props> = props => {\n  const { i18n } = React.useContext(LocaleContext);\n\n  return (\n    <>\n      {props.isSidebarOpen ? (\n        <SidebarComponent className=\"sidebar\">\n          <InternalWrapper>\n            <SidebarFixed>\n              {props.status === Status.Loading ? (\n                <Text>Loading</Text>\n              ) : (\n                <SidebarOverflow>\n                  <>\n                    <Nav>\n                      <SidebarLink exact to={props.discoverPath}>\n                        <NavItem alignItems={'center'}>\n                          <Box height=\"50px\">\n                            <Globe size={36} strokeWidth=\"1\" />\n                          </Box>\n                          <ItemTitleDir variant=\"link\">\n                            <Trans>Discover</Trans>\n                          </ItemTitleDir>\n                        </NavItem>\n                      </SidebarLink>\n                      <SidebarLink exact to={props.homePath}>\n                        <NavItem alignItems={'center'}>\n                          <Avatar size=\"s\" src={logo_small_url} />\n                          <ItemTitleDir variant=\"link\">{i18n._(my_timeline)}</ItemTitleDir>\n                        </NavItem>\n                      </SidebarLink>\n                    </Nav>\n                  </>\n                </SidebarOverflow>\n              )}\n            </SidebarFixed>\n          </InternalWrapper>\n        </SidebarComponent>\n      ) : null}\n    </>\n  );\n};\n\nexport default Sidebar;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Box, Text } from 'rebass/styled-components';\n// import { FormikHook } from 'ui/@types/types';\nimport {\n  HomeBox,\n  // MenuList\n  List,\n  // ObjectsList,\n  MainContainer,\n  Wrapper,\n  WrapperCont\n} from 'ui/elements/Layout';\nimport styled from 'ui/themes/styled';\nimport { ReactElement } from 'react';\n\nexport interface Props {\n  // nextCommunitiesFormik?: FormikHook;\n  // nextCollectionsFormik?: FormikHook;\n  // nextInboxFormik: FormikHook | null;\n  // FollowedCommunitiesElements: ReactElement;\n  // FollowedCollectionsElements: ReactElement;\n  InboxElements: ReactElement;\n  basePath: string;\n}\n\nexport const Home: React.FC<Props> = ({\n  basePath,\n  InboxElements\n}: // nextInboxFormik\n// nextCommunitiesFormik,\n// nextCollectionsFormik,\n// FollowedCommunitiesElements,\n// FollowedCollectionsElements\nProps) => {\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            <Title px={2}>\n              <Text variant=\"suptitle\">\n                <Trans>My timeline</Trans>\n              </Text>\n            </Title>\n            {/* <Menu basePath={basePath} /> */}\n            <Switch>\n              {/* <Route path={`${basePath}/mycommunities`}>\n                <ObjectsList>{FollowedCommunitiesElements}</ObjectsList>\n                {nextCommunitiesFormik && (\n                  <LoadMore LoadMoreFormik={nextCommunitiesFormik} />\n                )}\n              </Route>\n              <Route path={`${basePath}/mycollections`}>\n                <ObjectsList>{FollowedCollectionsElements}</ObjectsList>\n                {nextCollectionsFormik && (\n                  <LoadMore LoadMoreFormik={nextCollectionsFormik} />\n                )}\n              </Route> */}\n              <Route path={`${basePath}`}>\n                <List>{InboxElements}</List>\n                {/*{nextInboxFormik && <LoadMore LoadMoreFormik={nextInboxFormik} />}*/}\n              </Route>\n            </Switch>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nexport default Home;\n\nconst Title = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  height: 40px;\n  line-height: 40px;\n  border-bottom: ${props => props.theme.colors.border};\n`;\n\n// const Menu = ({ basePath }: { basePath: string }) => {\n//   return (\n//     <MenuList>\n//       <NavLink exact to={`${basePath}`}>\n//         <Trans>My Timeline</Trans>\n//       </NavLink>\n//       <>\n//         {/* <NavLink to={`${basePath}/mycommunities`}>\n//           <Trans>Joined communities</Trans>\n//         </NavLink>\n//         <NavLink to={`${basePath}/mycollections`}>\n//           <Trans>Followed collections</Trans>\n//         </NavLink> */}\n//       </>\n//     </MenuList>\n//   );\n// };\n","import { useMyInboxActivities } from 'fe/activities/inbox/my/useMyInboxActivities';\n// import { useMyFollowedCollections } from 'fe/collection/myFollowed/myFollowedCollections';\n// import { useMyFollowedCommunities } from 'fe/community/myFollowed/myFollowedCommunities';\n// import { ActivityPreviewHOC } from 'HOC/modules/previews/activity/ActivityPreview';\n// import { CollectionPreviewHOC } from 'HOC/modules/previews/collection/CollectionPreview';\n// import { CommunityPreviewHOC } from 'HOC/modules/previews/community/CommunityPreview';\nimport React, { FC, useMemo } from 'react';\nimport { Home, Props } from 'ui/pages/home';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\n\nexport interface HomePageHOC {\n  basePath: string;\n}\n\nconst homeMyTimelinePageTitle = t`My Activities`;\n\nexport const HomePageHOC: FC<HomePageHOC> = ({ basePath }) => {\n  // const { myCommunityFollowsPage } = useMyFollowedCommunities();\n  // const [nextCommunitiesFormik] = useFormikPage(myCommunityFollowsPage);\n  // const FollowedCommunitiesElements = useMemo<\n  //   Props['FollowedCommunitiesElements']\n  // >(() => {\n  //   return (\n  //     <>\n  //       {myCommunityFollowsPage\n  //         .edges!.map(follow => follow.context)\n  //         .filter(\n  //           (context): context is MyFollowedCommunityDataFragment =>\n  //             context.__typename === 'Community'\n  //         )\n  //         .map(community => (\n  //           <CommunityPreviewHOC\n  //             communityId={community.id}\n  //             key={community.id}\n  //           />\n  //         ))}\n  //     </>\n  //   );\n  // }, [myCommunityFollowsPage]);\n\n  // const {\n  //   myCollectionFollowsPage: myFollowedCollectionsPage\n  // } = useMyFollowedCollections();\n  // const [nextCollectionsFormik] = useFormikPage(myFollowedCollectionsPage);\n  // const FollowedCollectionsElements = useMemo<\n  //   Props['FollowedCollectionsElements']\n  // >(() => {\n  //   return (\n  //     <>\n  //       {myFollowedCollectionsPage\n  //         .edges!.map(follow => follow.context)\n  //         .filter(\n  //           (context): context is MyFollowedCollectionDataFragment =>\n  //             context.__typename === 'Collection'\n  //         )\n  //         .map(collection => (\n  //           <CollectionPreviewHOC\n  //             collectionId={collection.id}\n  //             key={collection.id}\n  //           />\n  //         ))}\n  //     </>\n  //   );\n  // }, [myFollowedCollectionsPage]);\n  usePageTitle(homeMyTimelinePageTitle);\n\n  const { activitiesPage } = useMyInboxActivities();\n  const InboxElements = useMemo<Props['InboxElements']>(() => {\n    return (\n      <>\n        {activitiesPage.edges!.map(\n          userActivityEdge =>\n            userActivityEdge && (\n              <div>ActivityPreviewHOC</div>\n              // <ActivityPreviewHOC activityId={userActivityEdge?.id} key={userActivityEdge?.id} />\n            )\n        )}\n      </>\n    );\n  }, [activitiesPage]);\n\n  const homeProps = useMemo<Props>(() => {\n    const props: Props = {\n      InboxElements,\n      // FollowedCollectionsElements,\n      // FollowedCommunitiesElements,\n      // nextCollectionsFormik,\n      // nextCommunitiesFormik,\n      // nextInboxFormik,\n      basePath\n    };\n    return props;\n  }, [\n    InboxElements,\n    // FollowedCollectionsElements,\n    // FollowedCommunitiesElements,\n    // nextCollectionsFormik,\n    // nextCommunitiesFormik,\n    basePath\n  ]);\n  return <Home {...homeProps} />;\n};\n","// import * as GQL from './useMyInboxActivities.generated';\n\nexport const useMyInboxActivities = () => {\n  // const activitiesQ = GQL.useMyInboxActivitiesQuery({\n  //   variables: { limit: DEFAULT_PAGE_SIZE }\n  // });\n  return {\n    activitiesPage: { edges: [] }\n  };\n};\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Heading, Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\n// import { WrapperPanel } from 'ui/elements/Panel';\nimport LogoContainer from 'ui/elements/Logo';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 432px;\n  margin-top: 60px;\n  padding: 16px;\n  & button {\n    margin-top: 16px;\n    width: 100%;\n    color: #fff !important;\n    text-transform: uppercase\n      &:hover {\n      background: #d67218 !important;\n    }\n  }\n`;\n\nexport const NotFound = () => {\n  return (\n    <>\n      <Container>\n        <Box sx={{ textAlign: 'center' }}>\n          <LogoContainer />\n          <Heading>\n            <span aria-label=\"icon\" role=\"img\">\n              🤔\n            </span>\n            <Trans>Page not found</Trans>\n          </Heading>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport React, { FC } from 'react';\nimport { NotFound } from 'ui/pages/notFound';\n\nexport interface NotFoundHOC {}\n\nconst notFoundPageTitle = t`Page Not Found`;\n\nexport const NotFoundHOC: FC<NotFoundHOC> = () => {\n  usePageTitle(notFoundPageTitle, {});\n  return <NotFound />;\n};\n","import React, { FC, useMemo } from 'react';\nimport { HomePageHOC } from 'HOC/pages/home/HomeHoc';\nimport { Redirect, RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { RedirectAnonymousToLogin } from './wrappers/RedirectBySession';\nimport { locationHelper } from './lib/helper';\nimport { useMe } from '../fe/session/useMe';\n\ninterface HomePageRouter {\n  tab?: string;\n}\nconst HomePageRouter: FC<RouteComponentProps<HomePageRouter>> = ({ match }) => {\n  const homeProps: any | null = useMemo(\n    () => ({\n      basePath: ''\n    }),\n    []\n  );\n  const { me } = useMe();\n  const loggedIn = !!me?.user?.id || localStorage.getItem('APOLLO#AUTH_TOKEN');\n\n  if (!homeProps) {\n    return <NotFoundHOC />;\n  }\n\n  if (!homeProps) {\n    return <NotFoundHOC />;\n  }\n\n  return loggedIn ? (\n    <RedirectAnonymousToLogin>\n      <WithSidebarTemplate>\n        <HomePageHOC {...homeProps} />\n      </WithSidebarTemplate>\n    </RedirectAnonymousToLogin>\n  ) : (\n    <Redirect to={'/login'} />\n  );\n};\n\nexport const HomePageRoute: RouteProps = {\n  exact: true,\n  path: '/',\n  component: HomePageRouter\n};\n\nexport const homeLocation = locationHelper<undefined, undefined>(HomePageRoute);\n","// import { useMyFollowedCommunities } from 'fe/community/myFollowed/myFollowedCommunities';\nimport React, { FC, useMemo, useContext } from 'react';\nimport {\n  // CommunityPreview,\n  Props as PropsUI,\n  Sidebar as SidebarUI,\n  Status as StatusUI\n} from 'ui/modules/Sidebar/index';\n// import { MyFollowedCommunityDataFragment } from 'fe/community/myFollowed/myFollowedCommunities.generated';\nimport { SideBarContext } from 'HOC/context/SideBar';\nimport { discoverLocation } from 'routes/DiscoverPageRoute';\nimport { homeLocation } from 'routes/HomePageRoute';\n// import { communityLocation } from 'routes/CommunityPageRoute';\n\nexport interface SidebarHOC {}\nexport const SidebarHOC: FC<SidebarHOC> = () => {\n  const { isOpen: isSidebarOpen } = useContext(SideBarContext);\n  // const { myCommunityFollowsPage } = useMyFollowedCommunities();\n  // const [LoadMoreFormik] = myCommunityFollowsPage.formiks;\n  // const communities = useMemo(\n  //   () =>\n  //     myCommunityFollowsPage.edges\n  //       .map(follow => follow.context)\n  //       .filter(\n  //         (context): context is MyFollowedCommunityDataFragment =>\n  //           context.__typename === 'Community'\n  //       )\n  //       .map<CommunityPreview>(community => {\n  //         return {\n  //           icon: community.icon?.url || '',\n  //           link: communityLocation.getPath(\n  //             { communityId: community.id, tab: undefined },\n  //             undefined\n  //           ),\n  //           name: community.name\n  //         };\n  //       }),\n  //   [myCommunityFollowsPage]\n  // );\n\n  const propsUI = useMemo<PropsUI>(() => {\n    const props: any = {\n      isSidebarOpen,\n      status: StatusUI.Loaded,\n      // communities,\n      // LoadMoreFormik,\n      discoverPath: discoverLocation.getPath({ tab: undefined }, undefined),\n      homePath: homeLocation.getPath(undefined, undefined)\n    };\n    return props;\n  }, [isSidebarOpen]);\n  return <SidebarUI {...propsUI} />;\n};\n","import styled from 'ui/themes/styled';\nimport React, { FC, ReactElement, useState } from 'react';\nimport media from 'styled-media-query';\nimport { Box, Flex } from 'rebass/styled-components';\nimport { Settings, LogOut, PlusSquare } from 'react-feather';\nimport Avatar from 'ui/elements/Avatar';\nimport { NavLink } from 'react-router-dom';\n// import { CreateMenuHOK } from '../../../HOC/modules/CreateMenuHOK/CreateMenuHOK';\n\nexport const Burger: FC<{ open: boolean; setOpen: (_: boolean) => unknown }> = ({\n  open,\n  setOpen\n}) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\nexport interface MenuProps {\n  open: boolean;\n  Side: ReactElement;\n  setOpen(_: boolean): any;\n  userImage: string;\n  name: string;\n  username: string;\n  signOut(): any;\n}\nexport const Menu: FC<MenuProps> = ({\n  open,\n  Side,\n  setOpen,\n  userImage,\n  name,\n  username,\n  signOut\n}) => {\n  const [isCreateOpen, toggleCreate] = useState(false);\n\n  return (\n    <div>\n      {open && <Background onClick={() => setOpen(false)} />}\n      <StyledMenu open={open}>\n        <Profile>\n          <User>\n            <Avatar size=\"s\" src={userImage} />\n            <Title>{name}</Title>\n            <Username>{username}</Username>\n            <RightMenuWrapper>\n              {/*<CreateMenuHOK open={isCreateOpen} openHandler={toggleCreate} />*/}\n              <Span to={'/settings'}>\n                <Settings size=\"24\" strokeWidth={1} color={'#333'} />\n              </Span>\n              <CreateMenuSpan role=\"button\" onClick={() => toggleCreate(!isCreateOpen)}>\n                <PlusSquare size={16} color={'#333'} />\n                <span>Create</span>\n              </CreateMenuSpan>\n            </RightMenuWrapper>\n          </User>\n          {/* <Button variant=\"primary\">Create a new community</Button> */}\n        </Profile>\n\n        <Communities>{Side}</Communities>\n\n        <Bottom>\n          <List>\n            <Item onClick={signOut}>\n              <LogOut size={18} />\n              <Box ml={2}>Sign out</Box>\n            </Item>\n          </List>\n        </Bottom>\n      </StyledMenu>\n    </div>\n  );\n};\n\nconst Bottom = styled(Box)``;\n\nconst Profile = styled(Box)`\n  padding: 16px;\n  border-bottom: ${props => props.theme.colors.border};\n`;\nconst User = styled(Box)`\n  position: relative;\n  > div:first-of-type {\n    width: 60px;\n    height: 60px;\n    border-radius: 60px;\n  }\n`;\n\nconst RightMenuWrapper = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n  line-height: initial;\n  ${media.lessThan('small')`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 120px;\n  `}\n`;\nconst CreateMenuSpan = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid #333;\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nconst Span = styled(NavLink)`\n  display: inline-block;\n  margin-right: 12px;\n`;\n\nconst Title = styled(Box)`\n  line-height: initial;\n  margin-top: 8px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.dark};\n`;\nconst Username = styled(Box)`\n  line-height: initial;\n  margin-top: 8px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.mediumdark};\n`;\nconst Communities = styled(Box)`\n  overflow: scroll;\n  padding: 16px;\n`;\n\nconst List = styled.div<{ lined?: boolean }>`\n  border-top: 1px solid ${props => props.theme.colors.medium};\n`;\nconst Item = styled(Flex)`\n  line-height: 60px;\n  height: 60px;\n  cursor: pointer;\n  align-items: center;\n  margin: 0 auto;\n  text-align: center;\n  width: 100px;\n  svg {\n    stroke: ${props => props.theme.colors.dark};\n  }\n  div {\n    font-weight: 600;\n    color: ${props => props.theme.colors.dark};\n  }\n  & span {\n    display: inline-block;\n    margin-right: 8px;\n  }\n  & a {\n    color: inherit !important;\n    text-decoration: none;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Background = styled(Box)<{ open: boolean }>`\n  z-index: 4000;\n  background: rgba(0, 0, 0, 0.9);\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  height: calc(100vh - 65px);\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n`;\n\nexport const StyledBurger = styled.button<{ open: boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 18px;\n  height: 18px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n  line-height: 75px;\n  margin: 0 auto;\n  margin-top: 26px;\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 18px;\n    height: 2px;\n    background: ${({ theme, open }) => (open ? theme.colors.primary : theme.colors.darker)};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? '0' : '1')};\n      transform: ${({ open }) => (open ? 'translateX(20px)' : 'translateX(0)')};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\n    }\n  }\n`;\n\nexport const StyledMenu = styled.nav<{ open: boolean }>`\n  background: ${({ theme }) => theme.colors.appInverse};\n  height: calc(100vh - 65px);\n  min-width: 230px;\n  text-align: left;\n  position: fixed;\n  z-index: 4020;\n  top: 0;\n  left: 0;\n  right: 80px;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(-100%)')};\n  overflow: hidden;\n  display: grid;\n  grid-template-rows: 160px 1fr 60px;\n  ${media.lessThan('small')`\n    width: 100%;\n    right: 0;\n  `}\n`;\n","import React, { ReactElement } from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport media from 'styled-media-query';\nimport { ChevronLeft } from 'react-feather';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Burger, Menu } from 'ui/modules/Burger';\nimport Avatar from 'ui/elements/Avatar';\nimport { Image } from 'rebass';\nimport { logo_small_url } from 'mn-constants';\n\nexport interface SidebarProps {\n  SidebarBox: ReactElement;\n  HeaderBox: ReactElement;\n  SearchBox: ReactElement;\n  userImage: string;\n  userLink: string;\n  username: string;\n  name: string;\n  signOut(): () => void;\n}\n\nexport const WithSidebar: React.FC<SidebarProps> = ({\n  SidebarBox,\n  HeaderBox,\n  SearchBox,\n  children,\n  userImage,\n  userLink,\n  username,\n  name,\n  signOut\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  return (\n    <Page>\n      <Menu\n        username={username}\n        name={name}\n        userImage={userImage}\n        signOut={signOut}\n        open={open}\n        setOpen={setOpen}\n        Side={SidebarBox}\n      />\n      <SearchBar>\n        <Icon onClick={() => history.goBack()}>\n          <ChevronLeft size=\"20\" />\n        </Icon>\n        {SearchBox}\n      </SearchBar>\n      <Header>{HeaderBox}</Header>\n      <Wrapper>\n        <Panel className=\"panel_sidebar\">\n          <Sidebar>{SidebarBox}</Sidebar>\n        </Panel>\n        <Panel>\n          <Content>{children}</Content>\n        </Panel>\n      </Wrapper>\n      <Footer>\n        <FootWrapper>\n          <Burger open={open} setOpen={setOpen} />\n        </FootWrapper>\n        <FootWrapper>\n          <NavLink to=\"/\">\n            <Logo>\n              <Image src={logo_small_url} />\n            </Logo>\n          </NavLink>\n        </FootWrapper>\n        <FootWrapper>\n          <Bavatar>\n            <NavLink to={userLink}>\n              <Avatar src={userImage} size=\"m\" />\n            </NavLink>\n          </Bavatar>\n        </FootWrapper>\n      </Footer>\n    </Page>\n  );\n};\n\nconst Logo = styled(Box)`\n  img {\n    width: 36px;\n    height: 36px;\n    border-radius: 36px;\n    margin-top: 15px;\n  }\n`;\n\nconst Bavatar = styled(Box)`\n  div {\n    max-width: 36px;\n    height: 36px;\n    min-width: 36px;\n    margin: 15px auto 0;\n    border-radius: 36px;\n  }\n`;\n\nexport const Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst SearchBar = styled(Box)`\nheight: 75px;\nline-height: 75px;\ntext-align: center;\nbackground: ${props => props.theme.colors.appInverse}\nborder-bottom: ${props => props.theme.colors.border};\ndisplay: flex;\nalign-items: center;\ninput {\n  width: 100%;\n  border-radius: 4px;\n  max-width: 500px;\n  height: 40px;\n  margin: 0;\n  border: 0;\n  background: ${props => props.theme.colors.app};\n}\n.ais-SearchBox {\n  border: 0;\n  height: auto;\n  margin: 0;\n  width: auto;\n  margin: 0;\n  margin-right: 24px;\n  flex:1;\n}\n${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst FootWrapper = styled(Box)`\n  height: 75px;\n  line-height: 75px;\n  text-align: center;\n`;\n\nconst Footer = styled(Box)`\n  position: fixed;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 500;\n  background: ${props => props.theme.colors.appInverse}\n  display: grid;\n  border-top: ${props => props.theme.colors.border};\n  grid-template-columns: 1fr 1fr 1fr;\n  ${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst Panel = styled(Box)`\n  display: grid;\n  grid-template-rows: auto;\n  &.panel_sidebar {\n    ${media.lessThan('medium')`\n    display: none;\n  `}\n  }\n`;\n\nconst Page = styled(Box)`\n  display: grid;\n  // ${media.greaterThan('large')`\n  //   grid-template-rows: 50px auto;\n  //   row-gap: 8px;\n  // `}\n  ${media.lessThan('medium')`\n    display: block;\n  `}\n`;\n\nconst Wrapper = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  display: grid;\n  \n  ${media.greaterThan('medium')`\n  grid-template-rows: auto;\n  grid-template-columns: 240px 1fr;\n  column-gap: 8px;\n  `}\n  ${media.lessThan('medium')`\n    overflow: overlay;\n    grid-template-rows: auto;\n    grid-template-columns:1fr;\n    column-gap: 0px;\n    margin: 0;\n  `}\n  ${media.lessThan('small')`\n    grid-template-rows: auto;\n    grid-template-columns:1fr;\n    column-gap: 0px;\n    margin: 0;\n  `}\n`;\n\nconst Sidebar = styled(Box)`\n  overflow: auto;\n`;\n\nconst Content = styled(Box)`\n  // Enable to put the right side scrollbar next to the content\n  //overflow: auto;\n`;\n\nconst Header = styled(Box)`\n  ${media.lessThan('medium')`\n    display: none;\n  `}\n`;\n","import styled from 'ui/themes/styled';\nimport { Text } from 'rebass/styled-components';\nimport 'github-markdown-css/github-markdown.css';\nimport DOMPurify from 'dompurify';\nimport React from 'react';\nimport { typography } from 'mn-constants';\n\nconst Comment = styled(Text)`\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none;\n  font-size: ${typography.size.s2} !important;\n  letter-spacing: 0 !important;\n  font-family: ${props => props.theme.fontFamily} !important;\n  &.markdown-body {\n    box-sizing: border-box;\n    min-width: 200px;\n    max-width: 568px;\n  }\n`;\n\nexport interface Props {\n  content: string;\n}\n\nexport const MDComment: React.SFC<Props> = ({ content }) => (\n  <Comment\n    className={'markdown-body'}\n    dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(content) }}\n    variant=\"text\"\n  />\n);\n","import { Trans } from '@lingui/macro';\nimport React, { FC } from 'react';\nimport { MapPin } from 'react-feather';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\nimport Button from 'ui/elements/Button';\nimport { MDComment } from 'ui/elements/Layout/comment';\nimport styled from 'ui/themes/styled';\n\nexport enum Status {\n  Loading,\n  Loaded\n}\n\nexport interface Loading {\n  status: Status.Loading;\n}\n\nexport interface Loaded {\n  status: Status.Loaded;\n  me: boolean;\n  image: string;\n  icon: string;\n  name: string;\n  isFlagged: boolean;\n  displayUsername: string;\n  location: string;\n  summary: string;\n}\n\nexport interface LoadedMe extends Loaded {\n  me: true;\n  isAdmin: boolean;\n}\n\nexport interface LoadedOther extends Loaded {\n  me: false;\n  following: boolean;\n  toggleFollowFormik: FormikHook<{}>;\n  isOpenDropdown: boolean;\n  toggleDropdown(): unknown;\n  flag(): any;\n}\n\nexport type Props = LoadedMe | LoadedOther | Loading | any;\n\nexport const HeroUser: FC<Props> = props => {\n  if (props.status === Status.Loading) {\n    return null;\n  }\n  const baseUrl = process.env.REACT_APP_GRAPHQL_IMG_LINK;\n  return (\n    <ProfileBox p={1}>\n      <Hero>\n        <HeroBg src={`${baseUrl}${props.user.profile.image}`} />\n        <FlexProfile>\n          <WrapperHero>\n            <Img\n              style={{\n                backgroundImage: `url(\"${baseUrl}${props.user.profile.icon}\")`\n              }}\n            />\n          </WrapperHero>\n          <HeroAction mr={2}>\n            {props.me ? (\n              <></>\n            ) : (\n              <>\n                <Button\n                  mr={2}\n                  variant={props.following ? 'danger' : 'primary'}\n                  isSubmitting={props.toggleFollowFormik.isSubmitting}\n                  isDisabled={props.toggleFollowFormik.isSubmitting}\n                  onClick={props.toggleFollowFormik.submitForm}\n                >\n                  {props.following ? <Trans>Unfollow</Trans> : <Trans>Follow</Trans>}\n                </Button>\n              </>\n            )}\n          </HeroAction>\n        </FlexProfile>\n        <HeroInfo ml={3}>\n          <HeroTitle sx={{ fontSize: '18px' }} mt={2} variant=\"heading\" fontWeight={'bold'}>\n            {props.user?.profile?.name}\n          </HeroTitle>\n          <Username mt={1}>\n            @{props.user?.character?.username}\n            {props.me && props.isAdmin && <AdminBadge ml={2}>Admin</AdminBadge>}\n          </Username>\n\n          <Box mt={2}>\n            <MDComment content={props.summary} />\n          </Box>\n          {props.location ? (\n            <Location mt={2}>\n              <span>\n                <MapPin strokeWidth={1} size={20} />\n              </span>\n              {props.location}\n            </Location>\n          ) : null}\n        </HeroInfo>\n      </Hero>\n    </ProfileBox>\n  );\n};\n\nconst AdminBadge = styled(Box)`\n  padding: 1px 8px;\n  border: 1px solid ${props => props.theme.colors.primary};\n  border-radius: 2px;\n  color: ${props => props.theme.colors.primary};\n  display: inline-block;\n`;\n\nconst HeroAction = styled(Flex)`\n  align-items: center;\n`;\n\nconst HeroTitle = styled(Text)`\n  color: ${props => props.theme.colors.darker};\n`;\n\nconst FlexProfile = styled(Flex)`\n  justify-content: space-between;\n  ${media.lessThan('860px')`\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`};\n`;\n\nconst ProfileBox = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  padding-bottom: 16px;\n`;\n\nconst Username = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n`;\n\nconst Location = styled(Flex)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n  line-height: 26px;\n  border-radius: 100px;\n  align-items: center;\n  span {\n    margin-right: 8px;\n    & svg {\n      stroke: ${props => props.theme.colors.mediumdark};\n      vertical-align: text-bottom;\n    }\n    .--rtl & {\n      margin-left: 8px;\n      margin-right: 0px;\n    }\n  }\n`;\n\nconst HeroBg = styled.div<{ src: string }>`\n  height: 250px;\n  margin: -4px;\n  background: ${props => props.theme.colors.light};\n  background-image: url(\"${props => (props.src ? props.src : props.theme.colors.light)}\");\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n`;\n\nconst WrapperHero = styled.div`\n  padding: 24px;\n  padding-top: 0;\n  z-index: 9999;\n  position: relative;\n  margin-top: -60px;\n  padding-bottom: 0;\n`;\n\nconst Img = styled.div`\n  width: 120px;\n  height: 120px;\n  border-radius: 6px;\n  background: ${props => props.theme.colors.light};\n  border: 3px solid ${props => props.theme.colors.appInverse};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 16px;\n`;\n\nconst Hero = styled.div`\n  width: 100%;\n  position: relative;\n  border-radius: 6px;\n`;\n\nconst HeroInfo = styled(Box)`\n  & button {\n    span {\n      vertical-align: sub;\n      display: inline-block;\n      height: 30px;\n      margin-right: 4px;\n    }\n  }\n`;\n","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type UserDataQueryVariables = {\n  username: Types.Scalars['String']\n};\n\n\nexport type UserDataQuery = (\n  { __typename: 'RootQueryType' }\n  & { user: Types.Maybe<(\n    { __typename: 'User' }\n    & HeroUserUserDataFragment\n  )> }\n);\n\nexport type UserDataBiIdQueryVariables = {\n  id: Types.Scalars['ID']\n};\n\n\nexport type UserDataBiIdQuery = (\n  { __typename: 'RootQueryType' }\n  & { user: Types.Maybe<(\n    { __typename: 'User' }\n    & HeroUserUserDataFragment\n  )> }\n);\n\nexport type HeroUserUserDataFragment = (\n  { __typename: 'User' }\n  & Pick<Types.User, 'id'>\n  & { profile: Types.Maybe<(\n    { __typename: 'Profile' }\n    & Pick<Types.Profile, 'name' | 'summary' | 'image' | 'icon'>\n  )>, character: Types.Maybe<(\n    { __typename: 'Character' }\n    & Pick<Types.Character, 'username'>\n  )>, userActivities: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'Activity' }\n    & Pick<Types.Activity, 'id' | 'subjectId' | 'objectId'>\n    & { object: Types.Maybe<{ __typename: 'Activity' } | { __typename: 'Category' } | { __typename: 'EconomicEvent' } | { __typename: 'Intent' } | { __typename: 'Post' } | { __typename: 'Process' } | { __typename: 'SpatialThing' } | { __typename: 'Tag' } | { __typename: 'User' }>, verb: Types.Maybe<(\n      { __typename: 'Verb' }\n      & Pick<Types.Verb, 'verb' | 'verbDisplay'>\n    )> }\n  )>>> }\n);\n\nexport const HeroUserUserDataFragmentDoc = gql`\n    fragment HeroUserUserData on User {\n  id\n  profile {\n    name\n    summary\n    image\n    icon\n  }\n  character {\n    username\n  }\n  userActivities {\n    id\n    subjectId\n    objectId\n    object {\n      __typename\n    }\n    verb {\n      verb\n      verbDisplay\n    }\n  }\n}\n    `;\nexport const UserDataDocument = gql`\n    query userData($username: String!) {\n  user(filter: {username: $username}) {\n    ...HeroUserUserData\n  }\n}\n    ${HeroUserUserDataFragmentDoc}`;\n\n/**\n * __useUserDataQuery__\n *\n * To run a query within a React component, call `useUserDataQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserDataQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserDataQuery({\n *   variables: {\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useUserDataQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UserDataQuery, UserDataQueryVariables>) {\n        return ApolloReactHooks.useQuery<UserDataQuery, UserDataQueryVariables>(UserDataDocument, baseOptions);\n      }\nexport function useUserDataLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UserDataQuery, UserDataQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UserDataQuery, UserDataQueryVariables>(UserDataDocument, baseOptions);\n        }\nexport type UserDataQueryHookResult = ReturnType<typeof useUserDataQuery>;\nexport type UserDataLazyQueryHookResult = ReturnType<typeof useUserDataLazyQuery>;\nexport type UserDataQueryResult = ApolloReactCommon.QueryResult<UserDataQuery, UserDataQueryVariables>;\nexport const UserDataBiIdDocument = gql`\n    query userDataBiId($id: ID!) {\n  user(filter: {id: $id}) {\n    ...HeroUserUserData\n  }\n}\n    ${HeroUserUserDataFragmentDoc}`;\n\n/**\n * __useUserDataBiIdQuery__\n *\n * To run a query within a React component, call `useUserDataBiIdQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserDataBiIdQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserDataBiIdQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserDataBiIdQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UserDataBiIdQuery, UserDataBiIdQueryVariables>) {\n        return ApolloReactHooks.useQuery<UserDataBiIdQuery, UserDataBiIdQueryVariables>(UserDataBiIdDocument, baseOptions);\n      }\nexport function useUserDataBiIdLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UserDataBiIdQuery, UserDataBiIdQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UserDataBiIdQuery, UserDataBiIdQueryVariables>(UserDataBiIdDocument, baseOptions);\n        }\nexport type UserDataBiIdQueryHookResult = ReturnType<typeof useUserDataBiIdQuery>;\nexport type UserDataBiIdLazyQueryHookResult = ReturnType<typeof useUserDataBiIdLazyQuery>;\nexport type UserDataBiIdQueryResult = ApolloReactCommon.QueryResult<UserDataBiIdQuery, UserDataBiIdQueryVariables>;\n\n\nexport interface UserDataQueryOperation {\n  operationName: 'userData'\n  result: UserDataQuery\n  variables: UserDataQueryVariables\n  type: 'query'\n}\nexport const UserDataQueryName:UserDataQueryOperation['operationName'] = 'userData'\n\nexport const UserDataQueryRefetch = (\n  variables:UserDataQueryVariables, \n  context?:any\n)=>({\n  query:UserDataDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface UserDataBiIdQueryOperation {\n  operationName: 'userDataBiId'\n  result: UserDataBiIdQuery\n  variables: UserDataBiIdQueryVariables\n  type: 'query'\n}\nexport const UserDataBiIdQueryName:UserDataBiIdQueryOperation['operationName'] = 'userDataBiId'\n\nexport const UserDataBiIdQueryRefetch = (\n  variables:UserDataBiIdQueryVariables, \n  context?:any\n)=>({\n  query:UserDataBiIdDocument,\n  variables,\n  context\n})\n      \n","import * as GQL from './useUser.generated';\nimport { useMe } from 'fe/session/useMe';\nimport { useMemo } from 'react';\n\nexport const useUserById = (userId: string) => {\n  const { data } = GQL.useUserDataBiIdQuery({ variables: { id: userId } });\n  const { me, loading } = useMe();\n  const user = data?.user;\n  const isMe = useMemo(() => !!(me?.users && me?.users[0] && me?.users[0].id === user?.id), [\n    me,\n    user\n  ]);\n\n  return useMemo(\n    () => ({\n      loading,\n      isMe,\n      user\n    }),\n    [loading, isMe, user]\n  );\n};\n","import { useFormik } from 'formik';\nimport { useNotifyMustLogin } from 'HOC/lib/notifyMustLogin';\nimport React, { FC, useMemo, useReducer } from 'react';\nimport { HeroUser as HeroUserUI, Props, Status } from 'ui/modules/HeroUser';\nimport Modal from 'ui/modules/Modal';\nimport { useUserById } from '../../../fe/user/useUserById';\n\nexport interface HeroUser {\n  userId: string;\n}\nexport const HeroUser: FC<HeroUser> = ({ userId }) => {\n  const { user, isMe } = useUserById(userId);\n  const [isOpenDropdown, toggleDropdown] = useReducer(is => !is, false);\n\n  const toggleFollowFormik = useFormik({\n    initialValues: {},\n    onSubmit: () => {}\n  });\n  const notifiedMustLogin = useNotifyMustLogin();\n\n  const [isFlagging, toggleFlagging] = useReducer(is => {\n    return notifiedMustLogin() ? false : !is;\n  }, false);\n\n  const FlagModal =\n    user && isFlagging ? <Modal closeModal={toggleFlagging}>FlagModal</Modal> : null;\n  const userHeroProps = useMemo<Props>(() => {\n    if (!user) {\n      return {\n        status: Status.Loading\n      };\n    }\n\n    const loadedProps: any = {\n      user\n    };\n\n    if (isMe) {\n      const props: any = {\n        me: isMe,\n        ...loadedProps\n      };\n\n      return props;\n    } else {\n      const props: any = {\n        flag: toggleFlagging,\n        me: isMe,\n        isOpenDropdown,\n        toggleDropdown,\n        toggleFollowFormik,\n        ...loadedProps\n      };\n\n      return props;\n    }\n  }, [isMe, user, toggleFollowFormik, isOpenDropdown]);\n\n  return (\n    <>\n      {FlagModal}\n      <HeroUserUI {...userHeroProps} />\n    </>\n  );\n};\n","import { Trans } from '@lingui/macro';\nimport { ellipsis } from 'polished';\nimport * as React from 'react';\nimport { Link } from 'react-feather';\nimport { Route, Switch } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport { FormikHook } from 'ui/@types/types';\nimport { HomeBox, List, MenuList, MenuItem, WrapperCont, ButtonIcon } from 'ui/elements/Layout';\nimport { Nav, NavItem, Panel, PanelTitle, WrapperPanel } from 'ui/elements/Panel';\nimport { LoadMore } from 'ui/modules/Loadmore';\nimport styled from 'ui/themes/styled';\nimport { ReactElement } from 'react';\n\nexport interface Props {\n  userInfo: any;\n  ActivityBoxes: ReactElement;\n  LikesBoxes: ReactElement; // FIX ME remove ? after add LikesBoxes at HOC\n  HeroUserBox: ReactElement;\n  CommunityBoxes: ReactElement;\n  CollectionsBoxes: ReactElement;\n  UserBoxes: ReactElement;\n  InventoryBoxes: ReactElement;\n  basePath: string;\n  totalCommunities: string;\n  totalActivities: string;\n  totalCollections: string;\n  totalUsers: string;\n  userLink: string;\n  userName: string;\n  loadMoreActivities: FormikHook | null;\n  loadMoreLikes: FormikHook | null;\n  loadMoreCommunities: FormikHook | null;\n  loadMoreCollections: FormikHook | null;\n  loadMoreFollowing: FormikHook | null;\n}\n\n// const UsersIcon = require('react-feather/dist/icons/users').default;\n// const StartedIcon = require('react-feather/dist/icons/pie-chart').default;\nconst ActivityIcon = require('react-feather/dist/icons/activity').default;\nconst PackageIcon = require('react-feather/dist/icons/package').default;\n\nexport const User: React.FC<Props> = ({\n  userInfo,\n  HeroUserBox,\n  ActivityBoxes,\n  InventoryBoxes,\n  basePath,\n  totalCommunities,\n  userLink,\n  totalCollections,\n  totalUsers,\n  loadMoreActivities\n}) => {\n  return (\n    <>\n      <HomeBox>\n        <WrapperCont>\n          <Box mb={2}>\n            {HeroUserBox}\n            <Menu\n              basePath={basePath}\n              totalCommunities={totalCommunities}\n              totalCollections={totalCollections}\n              totalUsers={totalUsers}\n            />\n          </Box>\n          <Switch>\n            <Route path={`${basePath}/inventory`}>{InventoryBoxes}</Route>\n            <Route exact path={`${basePath}/`}>\n              <List>{ActivityBoxes}</List>\n              {loadMoreActivities && <LoadMore LoadMoreFormik={loadMoreActivities} />}\n            </Route>\n          </Switch>\n        </WrapperCont>\n      </HomeBox>\n      <WrapperPanel>\n        {userLink?.length > 0 ? (\n          <Panel>\n            <PanelTitle fontWeight={'bold'}>Relevant links</PanelTitle>\n            <Nav>\n              <NavItem>\n                <Flex>\n                  <Link size={20} />{' '}\n                  <a href={userLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <TextLink ml={2} flex={1}>\n                      {userLink}\n                    </TextLink>\n                  </a>\n                </Flex>\n              </NavItem>\n            </Nav>\n          </Panel>\n        ) : null}\n      </WrapperPanel>\n    </>\n  );\n};\n\nconst Menu = ({\n  basePath,\n  totalCommunities\n}: {\n  basePath: string;\n  totalCommunities: string;\n  totalCollections: string;\n  totalUsers: string;\n}) => {\n  return (\n    <MenuList p={3} pt={3}>\n      <MenuItem exact to={`${basePath}`}>\n        <div className=\"text-holder\">\n          <Trans>Recent activity</Trans>\n        </div>\n        <ButtonIcon className=\"icon-holder\">\n          <ActivityIcon size=\"24\" />\n        </ButtonIcon>\n      </MenuItem>\n      <MenuItem exact to={`${basePath}/inventory`}>\n        <div className=\"text-holder\">\n          <Trans>Inventory</Trans>\n        </div>\n        <ButtonIcon className=\"icon-holder\">\n          <PackageIcon size=\"24\" />\n        </ButtonIcon>\n      </MenuItem>\n    </MenuList>\n  );\n};\n\nconst TextLink = styled(Text)`\n  ${ellipsis('250px')};\n  color: ${props => props.theme.colors.dark};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Box, Text } from 'rebass/styled-components';\n// import { PrimaryAccountable } from 'HOC/pages/inventory/InventoryPage';\nimport Avatar from '../../../elements/Avatar';\nimport { Title } from '../../../pages/resource';\nimport styled from '../../../themes/styled';\n\n// export interface Props {\n//   data?: PrimaryAccountable;\n// }\n\nconst PrimaryAccountablePerson: React.FC<any> = ({ data }) => {\n  return (\n    <PersonWrapper>\n      <Box mb={2} style={{ display: 'flex' }}>\n        <Avatar size=\"default\" src={`${process.env.REACT_APP_UPLOADS}/${data?.image}`} />\n        <div className=\"wrapper_info\">\n          <b>\n            <Trans>Primary Accountable: </Trans>\n          </b>\n          <Title variant=\"heading\">\n            <Trans>{data?.name}</Trans>\n          </Title>\n          <Trans>\n            <Text variant=\"text\">\n              <b>Relationships As Object: </b>\n              {data?.relationshipsAsObject + ''}\n            </Text>\n          </Trans>\n        </div>\n      </Box>\n    </PersonWrapper>\n  );\n};\n\nexport default PrimaryAccountablePerson;\n\nexport const PersonWrapper = styled('div')`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  border: 1px solid #eee;\n  padding: 10px;\n  width: 100%;\n\n  .d-flex {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .wrapper_info {\n    margin-left: 20px;\n  }\n\n  .intent {\n    padding: 10px 0;\n    &:not(:last-child) {\n      border-bottom: 1px solid #eee;\n    }\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport { ApolloError } from 'apollo-client';\nimport * as React from 'react';\nimport { Box, Text } from 'rebass/styled-components';\nimport { Link } from 'react-router-dom';\n// import { EconomicResource } from '../../../HOC/pages/inventory/InventoryPage';\nimport { HomeBox, MainContainer, Wrapper, WrapperCont } from 'ui/elements/Layout';\nimport Button from 'ui/elements/Button';\nimport { PersonWrapper } from '../../modules/Resource/PrimaryAccountablePerson';\nimport styled from '../../themes/styled';\nimport { Map } from 'ui/elements/Map';\nimport media from 'styled-media-query';\nimport { format } from 'date-fns';\n\nconst ArrowDownIcon = require('react-feather/dist/icons/chevron-down').default;\nconst ArrowUpIcon = require('react-feather/dist/icons/chevron-up').default;\nconst MapIcon = require('react-feather/dist/icons/map').default;\nconst BoxIcon = require('react-feather/dist/icons/box').default;\nconst PenIcon = require('react-feather/dist/icons/edit').default;\nconst EditIcon = require('react-feather/dist/icons/edit-3').default;\nconst UserIcon = require('react-feather/dist/icons/user').default;\nconst ClockIcon = require('react-feather/dist/icons/clock').default;\nconst EyeIcon = require('react-feather/dist/icons/eye').default;\nconst Calendar = require('react-feather/dist/icons/calendar').default;\n\nconst QRCode = require('qrcode.react');\n\nexport interface Props {\n  openEditModal: () => void;\n  openUpdateResourceModal: () => void;\n  openDeleteResourceModal: () => void;\n  resource?: any;\n  error?: ApolloError | undefined;\n  loading: boolean;\n}\n\nexport const ResourceItem: React.FC<Props> = ({\n  resource,\n  openEditModal,\n  openUpdateResourceModal,\n  openDeleteResourceModal\n}) => {\n  const URL = window.location.href;\n\n  const [showList, setShowList] = React.useState({\n    first: false,\n    second: false\n  });\n\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            <ActionsWrapper>\n              <Button mr={2} onClick={openEditModal} variant=\"button\">\n                <Trans>Perform event</Trans>\n              </Button>\n              <Button ml={2} onClick={openUpdateResourceModal} variant=\"error\">\n                <EditIcon size=\"16\" className=\"ml-2\" /> <Trans>Edit</Trans>\n              </Button>\n            </ActionsWrapper>\n            <InventoryWrapper>\n              <LeftColWrapper>\n                <ImageWrapper>\n                  {resource?.image && <img src={resource.image} alt={resource.name} />}\n                </ImageWrapper>\n                <QRCodeWrapper>{resource?.id && <QRCode value={URL} />}</QRCodeWrapper>\n              </LeftColWrapper>\n              <InfoWrapper>\n                <Box mb={2}>\n                  <Title variant=\"heading\">\n                    {' '}\n                    <Trans>{resource && resource.name}</Trans>\n                  </Title>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <PenIcon size=\"16\" />\n                    </Icon>\n                    <b>\n                      <Trans>Note:</Trans>{' '}\n                    </b>{' '}\n                    <Trans>{resource?.note ? resource.note : 'Not provided'}</Trans>\n                  </Text>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <MapIcon size=\"16\" />\n                    </Icon>\n                    <b>\n                      <Trans>Location:</Trans>\n                    </b>{' '}\n                    {resource?.currentLocation?.name\n                      ? resource.currentLocation.name\n                      : 'Not provided'}\n                  </Text>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <BoxIcon size=\"16\" />\n                    </Icon>\n                    <b>Quantity in stock:</b>{' '}\n                    <span\n                      style={{\n                        color:\n                          resource?.onhandQuantity && resource.onhandQuantity.hasNumericalValue < 0\n                            ? 'red'\n                            : 'inherit'\n                      }}\n                    >\n                      {resource?.onhandQuantity\n                        ? `${resource?.onhandQuantity?.hasNumericalValue} ${resource?.onhandQuantity?.hasUnit.label}`\n                        : 'Not provided'}\n                    </span>\n                  </Text>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <UserIcon size=\"16\" />\n                    </Icon>\n                    <b>\n                      <Trans>Owner:</Trans>\n                    </b>{' '}\n                    {resource?.primaryAccountable\n                      ? resource?.primaryAccountable.name\n                      : 'Not provided'}\n                  </Text>\n                </Box>\n                <Box p={3}>\n                  <Text variant=\"subhead\">\n                    <Icon>\n                      <ClockIcon size=\"16\" />\n                    </Icon>\n                    History:{' '}\n                    {resource?.track?.length > 0 || resource?.trace?.length > 0\n                      ? ''\n                      : 'Not available'}\n                  </Text>\n                </Box>\n                {resource?.track?.map((track: any) => {\n                  return (\n                    <TrackWrapper key={track.id}>\n                      <Badge>\n                        {track.action ? (\n                          <Trans>{track.action.label}</Trans>\n                        ) : (\n                          <Trans>Not provided</Trans>\n                        )}\n                      </Badge>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <EyeIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Result: </Trans>\n                          </b>{' '}\n                          {track.toResourceInventoriedAs ? (\n                            <Link\n                              to={`/resource/${track.toResourceInventoriedAs.id}`}\n                              key={track.toResourceInventoriedAs.id}\n                            >\n                              {track.toResourceInventoriedAs.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <PenIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Track note: </Trans>\n                          </b>{' '}\n                          {track.note ? track.note : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <Calendar size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Event Date: </Trans>\n                          </b>{' '}\n                          {track.hasPointInTime\n                            ? format(new Date(track.hasPointInTime), 'dd.MM.yyyy')\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <BoxIcon size=\"16\" />\n                          </Icon>\n                          <b>Quantity: </b>{' '}\n                          {track.resourceQuantity?.hasNumericalValue\n                            ? `${track.resourceQuantity?.hasNumericalValue} ${track.resourceQuantity?.hasUnit.label}`\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Provider:</Trans>\n                          </b>{' '}\n                          {track.provider ? (\n                            <Link to={`/user/${track.provider.id}`} key={track.provider.id}>\n                              {track.provider.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Receiver:</Trans>\n                          </b>{' '}\n                          {track.receiver ? (\n                            <Link to={`/user/${track.receiver.id}`} key={track.receiver.id}>\n                              {track.receiver.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                    </TrackWrapper>\n                  );\n                })}\n                {resource?.trace?.map((trace: any) => {\n                  return (\n                    <TrackWrapper key={trace.id}>\n                      <Badge>\n                        {trace.action ? (\n                          <Trans>{trace.action.label}</Trans>\n                        ) : (\n                          <Trans>Not provided</Trans>\n                        )}\n                      </Badge>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <EyeIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Source: </Trans>\n                          </b>{' '}\n                          {trace.resourceInventoriedAs ? (\n                            <Link\n                              to={`/resource/${trace.resourceInventoriedAs.id}`}\n                              key={trace.resourceInventoriedAs.id}\n                            >\n                              {trace.resourceInventoriedAs.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <PenIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Trace note: </Trans>\n                          </b>{' '}\n                          {trace.note ? trace.note : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <BoxIcon size=\"16\" />\n                          </Icon>\n                          <b>Quantity:</b>{' '}\n                          {trace.resourceQuantity?.hasNumericalValue\n                            ? `${trace.resourceQuantity?.hasNumericalValue} ${trace.resourceQuantity?.hasUnit.label}`\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <Calendar size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Event Date: </Trans>\n                          </b>{' '}\n                          {trace.hasPointInTime\n                            ? format(new Date(trace.hasPointInTime), 'dd.MM.yyyy')\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Provider:</Trans>\n                          </b>{' '}\n                          {trace.provider ? (\n                            <Link to={`/user/${trace.provider.id}`} key={trace.provider.id}>\n                              {trace.provider.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Receiver:</Trans>\n                          </b>{' '}\n                          {trace.receiver ? (\n                            <Link to={`/user/${trace.receiver.id}`} key={trace.receiver.id}>\n                              {trace.receiver.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                    </TrackWrapper>\n                  );\n                })}\n                <Box p={3}>\n                  <Text variant=\"subhead\">\n                    <Icon>\n                      <MapIcon size=\"16\" />\n                    </Icon>\n                    Location:\n                  </Text>\n                </Box>\n                <Map\n                  zoom={13}\n                  markers={[\n                    {\n                      position: {\n                        lng: resource?.currentLocation?.long || 2.2,\n                        lat: resource?.currentLocation?.lat || 41.4\n                      }\n                    }\n                  ]}\n                ></Map>\n                <PersonWrapper>\n                  <div className=\"d-flex\">\n                    <Text variant=\"heading\">\n                      <Trans>More info</Trans>\n                    </Text>\n                    <Button\n                      mr={2}\n                      onClick={() =>\n                        setShowList({\n                          ...showList,\n                          first: !showList.first\n                        })\n                      }\n                      variant=\"show-more\"\n                    >\n                      {showList.first ? (\n                        <>\n                          <ArrowUpIcon size=\"16\" />\n                          <Trans>Hide data</Trans>\n                        </>\n                      ) : (\n                        <>\n                          <ArrowDownIcon size=\"16\" />\n                          <Trans>Show data</Trans>\n                        </>\n                      )}\n                    </Button>\n                  </div>\n\n                  {showList.first ? (\n                    <div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>contained In:</Trans>\n                          </b>{' '}\n                          {resource?.containedIn + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>contains:</Trans>\n                          </b>{' '}\n                          {resource?.contains + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>lot:</Trans>\n                          </b>{' '}\n                          {resource?.lot + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>stage:</Trans>\n                          </b>{' '}\n                          {resource?.stage + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>trace length:</Trans>\n                          </b>{' '}\n                          {resource?.trace.length}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>tracking Identifier:</Trans>\n                          </b>{' '}\n                          {resource?.trackingIdentifier + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>unit Of Effort:</Trans>\n                          </b>{' '}\n                          {resource?.unitOfEffort + ''}\n                        </Text>\n                      </div>\n                    </div>\n                  ) : null}\n                </PersonWrapper>\n              </InfoWrapper>\n            </InventoryWrapper>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nexport const Badge = styled(Text)`\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.light};\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 10px;\n  border-radius: 4px;\n  padding: 3px 5px;\n  width: auto;\n  display: inline-block;\n  margin-bottom: 10px;\n`;\nexport const Title = styled(Text)`\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none !important;\n`;\n\nexport const Icon = styled(Box)`\n  width: 30px;\n  display: inline-block;\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n  }\n`;\n\nexport const InventoryWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  flex-grow: 0;\n  background: #fff;\n  height: auto;\n  padding: 1em;\n  margin-bottom: 10px;\n\n  ${media.lessThan('medium')`\n        display: block;\n      `};\n`;\n\nexport const LeftColWrapper = styled('div')`\n  ${media.lessThan('medium')`\n        display: flex;\n        margin-bottom: 20px;\n      `};\n`;\nexport const TrackWrapper = styled('div')`\n  padding: 10px 10px 10px 20px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const ActionsWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  padding: 15px 0 0;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  button {\n    margin-right: 0;\n  }\n\n  ${media.lessThan('medium')`\n        padding: 10px 15px 0;\n      `};\n`;\n\nexport const InfoWrapper = styled('div')`\n  flex-basis: calc(100% - 160px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const ImageWrapper = styled('div')`\n  flex-basis: 140px;\n  width: 140px;\n  height: 140px;\n  border-radius: 4px;\n  background-color: #f3f3f3;\n\n  img {\n    width: 100%;\n    height: 140px;\n    object-fit: cover;\n    border-radius: 4px;\n  }\n`;\nexport const QRCodeWrapper = styled(ImageWrapper)`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${media.lessThan('medium')`\n        margin-top: 0;\n        margin-left: 20px;\n      `};\n`;\n\nexport const IconWrapper = styled(ImageWrapper)`\n  flex-basis: 100px;\n  width: 100px;\n  height: 100px;\n\n  img {\n    height: 100px;\n  }\n`;\n","export const PAGE_LIMIT = 5;\nexport const PAGE_START = 1;\nexport const MAX_PAGINATION_NUMBERS = 4;\nexport const NAME = 'name';\nexport const CREATE = 'create';\nexport const ASC = 'ASC';\nexport const DES = 'DES';\nexport const DEFAULT_SORT_PARAM = 'name';\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PaginationComponent from 'react-reactstrap-pagination';\nimport { Plus } from 'react-feather';\nimport { NavLink } from 'react-router-dom';\nimport { Box, Button, Text } from 'rebass/styled-components';\nimport { InventoryWrapper, InfoWrapper, ImageWrapper, Icon } from 'ui/pages/resource';\nimport { Wrapper } from 'ui/elements/Layout';\nimport { PAGE_LIMIT, PAGE_START, MAX_PAGINATION_NUMBERS } from 'util/constants/pagination';\nimport { typography } from '../../../mn-constants';\nimport styled from '../../themes/styled';\nimport { useEffect, useState } from 'react';\nimport media from 'styled-media-query';\nimport { useUserById } from '../../../fe/user/useUserById';\n\nconst BoxIcon = require('react-feather/dist/icons/box').default;\nconst PenIcon = require('react-feather/dist/icons/edit').default;\nconst UserIcon = require('react-feather/dist/icons/user').default;\n\nexport interface Props {\n  done: () => void;\n  inventory: any;\n  owner: string;\n  userId?: string;\n}\n\nexport const Inventory: React.FC<Props> = ({ userId, inventory, done, children, owner }) => {\n  const { isMe } = useUserById(userId || '');\n  const [currentList, setCurrentList] = useState<any>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePagination = (page: number) => {\n    setCurrentPage(page);\n  };\n  useEffect(() => {\n    if (inventory.length) {\n      const newList = inventory.slice(\n        (currentPage - 1) * PAGE_LIMIT,\n        (currentPage - 1) * PAGE_LIMIT + PAGE_LIMIT\n      );\n      setCurrentList(newList);\n    } else {\n      setCurrentList([]);\n    }\n  }, [inventory, currentPage]);\n\n  useEffect(() => {\n    setCurrentPage(PAGE_START);\n  }, [inventory.length]);\n\n  return (\n    <>\n      <ButtonWrapper>\n        {isMe && (\n          <CreateItemButton variant=\"primary\" onClick={done}>\n            <Plus size={16} color={'#fff'} />\n            <Text variant=\"button\">\n              <Trans>Create a new resource</Trans>\n            </Text>\n          </CreateItemButton>\n        )}\n      </ButtonWrapper>\n      <div style={{ position: 'relative' }}>{children}</div>\n      <Wrapper>\n        {!!currentList.length &&\n          currentList.map(({ id, name, note, image, onhandQuantity, primaryAccountable }: any) => (\n            <WrapperLink to={`/resource/${id}`} key={id}>\n              <InventoryWrapper key={id}>\n                <ImageWrapper>{image && <img src={image} alt={name} />}</ImageWrapper>\n                <InfoWrapper>\n                  <Title variant=\"subhead\">{name}</Title>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <Icon>\n                        <PenIcon size=\"16\" />\n                      </Icon>\n                      <b>\n                        <Trans>Note:</Trans>{' '}\n                      </b>{' '}\n                      <Trans>{note ? note : 'Not provided'}</Trans>\n                    </Text>\n                  </Box>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <Icon>\n                        <BoxIcon size=\"16\" />\n                      </Icon>\n                      <b>Quantity in stock:</b>{' '}\n                      <span\n                        style={{\n                          color:\n                            onhandQuantity && onhandQuantity.hasNumericalValue < 0\n                              ? 'red'\n                              : 'inherit'\n                        }}\n                      >\n                        {onhandQuantity\n                          ? `${onhandQuantity.hasNumericalValue} ${onhandQuantity.hasUnit.label}`\n                          : 'Not provided'}\n                      </span>\n                    </Text>\n                  </Box>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <Icon>\n                        <UserIcon size=\"16\" />\n                      </Icon>\n                      <b>\n                        <Trans>Owner:</Trans>\n                      </b>{' '}\n                      {isMe ? 'Me' : primaryAccountable?.name}\n                    </Text>\n                  </Box>\n                </InfoWrapper>\n              </InventoryWrapper>\n            </WrapperLink>\n          ))}\n        {!!currentList.length && (\n          <PaginationWrapper>\n            <PaginationComponent\n              size=\"sm\"\n              totalItems={inventory.length || 0}\n              pageSize={PAGE_LIMIT}\n              onSelect={handlePagination}\n              maxPaginationNumbers={MAX_PAGINATION_NUMBERS}\n              defaultActivePage={PAGE_START}\n              previousPageText=\"Prev\"\n            />\n          </PaginationWrapper>\n        )}\n        {!currentList.length && (\n          <p style={{ textAlign: 'center', fontWeight: 600, color: '#444444', paddingBottom: 40 }}>\n            No results\n          </p>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Inventory;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  height: 34px;\n  margin: 10px 0;\n  position: relative;\n\n  ${media.lessThan('medium')`\n      justify-content: space-between;\n      margin: 10px;\n  `};\n`;\nexport const CreateItemButton = styled(Button)`\n  margin: 0 10px;\n  height: 34px;\n  text-transform: capitalize;\n  line-height: 34px;\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  & > svg {\n    display: inline-block;\n    margin-right: 8px;\n    margin-left: 16px;\n  }\n  & > div {\n    color: #fff;\n    display: inline-block;\n  }\n\n  ${media.lessThan('medium')`\n      margin: 0 10px;\n  `};\n  &:hover {\n    background: ${props => props.theme.colors.primary};\n    color: ${props => props.theme.colors.appInverse};\n  }\n`;\n\nconst PaginationWrapper = styled('div')`\n  text-align: center;\n\n  ul {\n    padding: 10px 0 20px;\n    margin: 0;\n  }\n\n  .page-link {\n    line-height: 30px;\n    border: 1px solid #999;\n    color: #999;\n    background-color: #fff;\n    border-radius: 4px;\n    margin: 2px;\n  }\n\n  .page-item.active .page-link {\n    border: 1px solid #02e379;\n    color: #02e379;\n  }\n`;\n\nexport const WrapperLink = styled(NavLink)`\n  text-decoration: none !important;\n\n  * {\n    text-decoration: none !important;\n  }\n`;\n\nexport const Title = styled(Text)`\n  display: inline-block;\n  font-size: ${typography.size.m1};\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none !important;\n  margin-bottom: 10px;\n\n  &:hover {\n    text-decoration: underline !important;\n  }\n`;\n","import React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Input as InputStrap, Label } from 'reactstrap';\nimport { Button } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { i18nMark } from '@lingui/react';\nimport Input from '../../elements/Input';\n// import { FilterType } from 'HOC/pages/inventory/InventoryPage';\nimport { CollectionContainerForm } from '../CreateCollectionPanel/style';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport { ASC, DES, NAME } from '../../../util/constants/pagination';\n\ntype Props = {\n  isOpen: boolean;\n  filterSet: any;\n  triggerOpen: (value: boolean) => void;\n  onChange: (props: { [field: string]: string | boolean }, isClear?: boolean) => void;\n  onClear: () => void;\n};\nconst ArrowUp = require('react-feather/dist/icons/arrow-up').default;\nconst ArrowDown = require('react-feather/dist/icons/arrow-down').default;\nconst FilterIcon = require('react-feather/dist/icons/filter').default;\nconst ClearIcon = require('react-feather/dist/icons/x').default;\n\nexport const Filter: React.FC<Props> = ({ isOpen, filterSet, triggerOpen, onChange, onClear }) => {\n  const handleSorting = async (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    const buttonName = event.currentTarget.name;\n\n    onChange({ sort: buttonName, order: filterSet.order === DES ? ASC : DES });\n  };\n\n  return (\n    <div>\n      <FilterButton onClick={() => triggerOpen(!isOpen)} type=\"button\">\n        {isOpen ? <ClearIcon size=\"16\" /> : <FilterIcon size=\"16\" />}\n      </FilterButton>\n      {isOpen ? (\n        <>\n          <FilterWrapper>\n            <div className=\"d-flex\">\n              <div className=\"item_col-6 align-center\">\n                <SortButton\n                  onClick={handleSorting}\n                  name={NAME}\n                  className={filterSet.sort === NAME && 'active'}\n                >\n                  Sort by Name:\n                  {filterSet.sort === NAME && filterSet.order === ASC ? (\n                    <SortButtonInner>\n                      {' '}\n                      <ArrowUp size={16} /> {ASC}\n                    </SortButtonInner>\n                  ) : (\n                    <SortButtonInner>\n                      {' '}\n                      <ArrowDown size={16} /> {DES}\n                    </SortButtonInner>\n                  )}\n                </SortButton>\n              </div>\n            </div>\n            <FormGroup>\n              <FormLabel>Name</FormLabel>\n              <Input\n                type=\"text\"\n                id=\"name\"\n                name=\"search\"\n                onChange={({ currentTarget }: any) => onChange({ search: currentTarget.value })}\n                placeholder={i18nMark('Search query')}\n                value={filterSet.search}\n              />\n            </FormGroup>\n            <div className=\"d-flex\">\n              <div className=\"item_col-6\">\n                <FormGroupChek>\n                  <LabelCustom>\n                    <InputStrap\n                      style={{ width: 'auto' }}\n                      name=\"trace\"\n                      id=\"trace\"\n                      type=\"checkbox\"\n                      checked={filterSet.trace || false}\n                      onChange={() => onChange({ trace: !filterSet.trace })}\n                    />\n                    <span>Resulted from a previous resource</span>\n                  </LabelCustom>\n                </FormGroupChek>\n              </div>\n              <div className=\"item_col-6\">\n                <FormGroupChek>\n                  <LabelCustom>\n                    <InputStrap\n                      style={{ width: 'auto' }}\n                      name=\"track\"\n                      id=\"track\"\n                      type=\"checkbox\"\n                      checked={filterSet.track || false}\n                      onChange={() => onChange({ track: !filterSet.track })}\n                    />\n                    <span>Created further resources</span>\n                  </LabelCustom>\n                </FormGroupChek>\n              </div>\n            </div>\n            <div className=\"d-flex\">\n              <ClearButton\n                onClick={() => {\n                  onClear();\n                  triggerOpen(false);\n                }}\n                type=\"button\"\n              >\n                <ClearIcon size={16} />\n                Clear\n              </ClearButton>\n            </div>\n          </FilterWrapper>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nconst ClearButton = styled(Button)`\n  margin-left: auto;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nconst FilterWrapper = styled(CollectionContainerForm)`\n  padding: 10px;\n  background-color: #fff;\n  border: 1px solid #05244f;\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\n\nconst SortButtonInner = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  line-height: 40px;\n  margin: 0 20px;\n`;\n\nconst SortButton = styled(Button)`\n  background-color: transparent;\n  border: none;\n  color: #999;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &.active {\n    color: #05244f;\n  }\n`;\n\nconst FormGroupChek = styled.span`\n  text-transform: uppercase;\n  color: #999;\n  font-weight: 600;\n  letter-spacing: 1px;\n  padding: 0;\n\n  & > div {\n    display: flex;\n    padding: 10px 0;\n\n    input {\n      flex-basis: 20px;\n      height: 20px;\n    }\n  }\n`;\n\nconst LabelCustom = styled(Label)`\n  flex-basis: calc(100% - 30px);\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    display: inline-block;\n    margin-left: 20px;\n  }\n`;\nconst FilterButton = styled(Button)`\n  background-color: #fff;\n  border: 1px solid #05244f;\n  border-radius: 4px;\n  color: #05244f;\n  padding: 0;\n  margin: 0;\n  height: 34px;\n  width: 34px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: -44px;\n\n  ${media.lessThan('medium')`\n     margin: 0 15px 0 0;\n     left: 15px;\n  `};\n`;\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type EconomicResourceQueryVariables = {\n  id: Types.Scalars['ID']\n};\n\n\nexport type EconomicResourceQuery = (\n  { __typename: 'RootQueryType' }\n  & { economicResource: Types.Maybe<(\n    { __typename: 'EconomicResource' }\n    & Pick<Types.EconomicResource, 'id' | 'image' | 'trackingIdentifier' | 'name' | 'note'>\n    & { primaryAccountable: Types.Maybe<any>, stage: Types.Maybe<(\n      { __typename: 'ProcessSpecification' }\n      & Pick<Types.ProcessSpecification, 'id' | 'name' | 'note'>\n    )>, contains: Types.Maybe<Array<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'image'>\n    )>>, containedIn: Types.Maybe<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id' | 'name'>\n    )>, currentLocation: Types.Maybe<(\n      { __typename: 'SpatialThing' }\n      & Pick<Types.SpatialThing, 'id' | 'name' | 'lat' | 'long'>\n    )>, lot: Types.Maybe<(\n      { __typename: 'ProductBatch' }\n      & Pick<Types.ProductBatch, 'id' | 'expiryDate' | 'batchNumber'>\n    )>, track: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, trace: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, unitOfEffort: Types.Maybe<(\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label'>\n    )> }\n    & OnhandQuantityFragment\n  )> }\n);\n\nexport type GetEconomicResourceNameQueryVariables = {\n  id: Types.Scalars['ID']\n};\n\n\nexport type GetEconomicResourceNameQuery = (\n  { __typename: 'RootQueryType' }\n  & { economicResource: Types.Maybe<(\n    { __typename: 'EconomicResource' }\n    & Pick<Types.EconomicResource, 'name'>\n  )> }\n);\n\nexport type OnhandQuantityFragment = (\n  { __typename: 'EconomicResource' }\n  & { onhandQuantity: Types.Maybe<(\n    { __typename: 'Measure' }\n    & Pick<Types.Measure, 'id' | 'hasNumericalValue'>\n    & { hasUnit: (\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label'>\n    ) }\n  )> }\n);\n\nexport type ResourceQuantityFragment = (\n  { __typename: 'EconomicEvent' }\n  & { resourceQuantity: Types.Maybe<(\n    { __typename: 'Measure' }\n    & Pick<Types.Measure, 'hasNumericalValue' | 'canonicalUrl'>\n    & { hasUnit: (\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label' | 'symbol'>\n    ) }\n  )> }\n);\n\nexport const OnhandQuantityFragmentDoc = gql`\n    fragment OnhandQuantity on EconomicResource {\n  onhandQuantity {\n    id\n    hasNumericalValue\n    hasUnit {\n      id\n      label\n    }\n  }\n}\n    `;\nexport const ResourceQuantityFragmentDoc = gql`\n    fragment ResourceQuantity on EconomicEvent {\n  resourceQuantity {\n    hasNumericalValue\n    canonicalUrl\n    hasUnit {\n      id\n      label\n      symbol\n    }\n  }\n}\n    `;\nexport const EconomicResourceDocument = gql`\n    query economicResource($id: ID!) {\n  economicResource(id: $id) {\n    id\n    image\n    trackingIdentifier\n    primaryAccountable {\n      id\n      name\n      image\n      relationshipsAsObject {\n        id\n        relationship {\n          id\n          inverseRoleLabel\n        }\n      }\n    }\n    name\n    note\n    image\n    stage {\n      id\n      name\n      note\n    }\n    contains {\n      image\n    }\n    stage {\n      id\n      name\n      note\n    }\n    containedIn {\n      id\n      name\n    }\n    currentLocation {\n      id\n      name\n      lat\n      long\n    }\n    lot {\n      id\n      expiryDate\n      batchNumber\n    }\n    track {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        action {\n          id\n          label\n        }\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        ...ResourceQuantity\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    trace {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        action {\n          id\n          label\n        }\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        ...ResourceQuantity\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    unitOfEffort {\n      id\n      label\n    }\n    ...OnhandQuantity\n  }\n}\n    ${ResourceQuantityFragmentDoc}\n${OnhandQuantityFragmentDoc}`;\n\n/**\n * __useEconomicResourceQuery__\n *\n * To run a query within a React component, call `useEconomicResourceQuery` and pass it any options that fit your needs.\n * When your component renders, `useEconomicResourceQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useEconomicResourceQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useEconomicResourceQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<EconomicResourceQuery, EconomicResourceQueryVariables>) {\n        return ApolloReactHooks.useQuery<EconomicResourceQuery, EconomicResourceQueryVariables>(EconomicResourceDocument, baseOptions);\n      }\nexport function useEconomicResourceLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<EconomicResourceQuery, EconomicResourceQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<EconomicResourceQuery, EconomicResourceQueryVariables>(EconomicResourceDocument, baseOptions);\n        }\nexport type EconomicResourceQueryHookResult = ReturnType<typeof useEconomicResourceQuery>;\nexport type EconomicResourceLazyQueryHookResult = ReturnType<typeof useEconomicResourceLazyQuery>;\nexport type EconomicResourceQueryResult = ApolloReactCommon.QueryResult<EconomicResourceQuery, EconomicResourceQueryVariables>;\nexport const GetEconomicResourceNameDocument = gql`\n    query getEconomicResourceName($id: ID!) {\n  economicResource(id: $id) {\n    name\n  }\n}\n    `;\n\n/**\n * __useGetEconomicResourceNameQuery__\n *\n * To run a query within a React component, call `useGetEconomicResourceNameQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetEconomicResourceNameQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetEconomicResourceNameQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetEconomicResourceNameQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<GetEconomicResourceNameQuery, GetEconomicResourceNameQueryVariables>) {\n        return ApolloReactHooks.useQuery<GetEconomicResourceNameQuery, GetEconomicResourceNameQueryVariables>(GetEconomicResourceNameDocument, baseOptions);\n      }\nexport function useGetEconomicResourceNameLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<GetEconomicResourceNameQuery, GetEconomicResourceNameQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<GetEconomicResourceNameQuery, GetEconomicResourceNameQueryVariables>(GetEconomicResourceNameDocument, baseOptions);\n        }\nexport type GetEconomicResourceNameQueryHookResult = ReturnType<typeof useGetEconomicResourceNameQuery>;\nexport type GetEconomicResourceNameLazyQueryHookResult = ReturnType<typeof useGetEconomicResourceNameLazyQuery>;\nexport type GetEconomicResourceNameQueryResult = ApolloReactCommon.QueryResult<GetEconomicResourceNameQuery, GetEconomicResourceNameQueryVariables>;\n\n\nexport interface EconomicResourceQueryOperation {\n  operationName: 'economicResource'\n  result: EconomicResourceQuery\n  variables: EconomicResourceQueryVariables\n  type: 'query'\n}\nexport const EconomicResourceQueryName:EconomicResourceQueryOperation['operationName'] = 'economicResource'\n\nexport const EconomicResourceQueryRefetch = (\n  variables:EconomicResourceQueryVariables,\n  context?:any\n)=>({\n  query:EconomicResourceDocument,\n  variables,\n  context\n})\n\n\n\nexport interface GetEconomicResourceNameQueryOperation {\n  operationName: 'getEconomicResourceName'\n  result: GetEconomicResourceNameQuery\n  variables: GetEconomicResourceNameQueryVariables\n  type: 'query'\n}\nexport const GetEconomicResourceNameQueryName:GetEconomicResourceNameQueryOperation['operationName'] = 'getEconomicResourceName'\n\nexport const GetEconomicResourceNameQueryRefetch = (\n  variables:GetEconomicResourceNameQueryVariables,\n  context?:any\n)=>({\n  query:GetEconomicResourceNameDocument,\n  variables,\n  context\n})\n\n","import * as Types from '../../../graphql/types.generated';\n\nimport { OnhandQuantityFragment } from '../resource/EconomicResource.generated';\nimport { ResourceQuantityFragment } from '../resource/EconomicResource.generated';\nimport gql from 'graphql-tag';\nimport { ResourceQuantityFragmentDoc } from '../resource/EconomicResource.generated';\nimport { OnhandQuantityFragmentDoc } from '../resource/EconomicResource.generated';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\n\n\nexport type EconomicResourcesFilteredQueryVariables = {\n  agent?: Types.Maybe<Array<Types.Maybe<Types.Scalars['ID']>>>\n};\n\n\nexport type EconomicResourcesFilteredQuery = (\n  { __typename: 'RootQueryType' }\n  & { economicResourcesFiltered: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'EconomicResource' }\n    & Pick<Types.EconomicResource, 'id' | 'image' | 'trackingIdentifier' | 'name' | 'note'>\n    & { primaryAccountable: Types.Maybe<any>, stage: Types.Maybe<(\n      { __typename: 'ProcessSpecification' }\n      & Pick<Types.ProcessSpecification, 'id' | 'name' | 'note'>\n    )>, contains: Types.Maybe<Array<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'image'>\n    )>>, containedIn: Types.Maybe<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id' | 'name'>\n    )>, currentLocation: Types.Maybe<(\n      { __typename: 'SpatialThing' }\n      & Pick<Types.SpatialThing, 'id' | 'name' | 'lat' | 'long'>\n    )>, lot: Types.Maybe<(\n      { __typename: 'ProductBatch' }\n      & Pick<Types.ProductBatch, 'id' | 'expiryDate' | 'batchNumber'>\n    )>, track: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, trace: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, unitOfEffort: Types.Maybe<(\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label'>\n    )> }\n    & OnhandQuantityFragment\n  )>>> }\n);\n\n\nexport const EconomicResourcesFilteredDocument = gql`\n    query economicResourcesFiltered($agent: [ID]) {\n  economicResourcesFiltered(agent: $agent) {\n    id\n    image\n    trackingIdentifier\n    primaryAccountable {\n      id\n      name\n      image\n      relationshipsAsObject {\n        id\n        relationship {\n          id\n          inverseRoleLabel\n        }\n      }\n    }\n    name\n    note\n    image\n    stage {\n      id\n      name\n      note\n    }\n    contains {\n      image\n    }\n    stage {\n      id\n      name\n      note\n    }\n    containedIn {\n      id\n      name\n    }\n    currentLocation {\n      id\n      name\n      lat\n      long\n    }\n    lot {\n      id\n      expiryDate\n      batchNumber\n    }\n    track {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        action {\n          id\n          label\n        }\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        ...ResourceQuantity\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    trace {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        action {\n          id\n          label\n        }\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        ...ResourceQuantity\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    unitOfEffort {\n      id\n      label\n    }\n    ...OnhandQuantity\n  }\n}\n    ${ResourceQuantityFragmentDoc}\n${OnhandQuantityFragmentDoc}`;\n\n/**\n * __useEconomicResourcesFilteredQuery__\n *\n * To run a query within a React component, call `useEconomicResourcesFilteredQuery` and pass it any options that fit your needs.\n * When your component renders, `useEconomicResourcesFilteredQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useEconomicResourcesFilteredQuery({\n *   variables: {\n *      agent: // value for 'agent'\n *   },\n * });\n */\nexport function useEconomicResourcesFilteredQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>) {\n        return ApolloReactHooks.useQuery<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>(EconomicResourcesFilteredDocument, baseOptions);\n      }\nexport function useEconomicResourcesFilteredLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>(EconomicResourcesFilteredDocument, baseOptions);\n        }\nexport type EconomicResourcesFilteredQueryHookResult = ReturnType<typeof useEconomicResourcesFilteredQuery>;\nexport type EconomicResourcesFilteredLazyQueryHookResult = ReturnType<typeof useEconomicResourcesFilteredLazyQuery>;\nexport type EconomicResourcesFilteredQueryResult = ApolloReactCommon.QueryResult<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>;\n\n\nexport interface EconomicResourcesFilteredQueryOperation {\n  operationName: 'economicResourcesFiltered'\n  result: EconomicResourcesFilteredQuery\n  variables: EconomicResourcesFilteredQueryVariables\n  type: 'query'\n}\nexport const EconomicResourcesFilteredQueryName:EconomicResourcesFilteredQueryOperation['operationName'] = 'economicResourcesFiltered'\n\nexport const EconomicResourcesFilteredQueryRefetch = (\n  variables:EconomicResourcesFilteredQueryVariables,\n  context?:any\n)=>({\n  query:EconomicResourcesFilteredDocument,\n  variables,\n  context\n})\n\n","import { Trans } from '@lingui/macro';\nimport { DateTime } from 'luxon';\nimport { clearFix } from 'polished';\nimport React, { FC, useMemo } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport Avatar from 'ui/elements/Avatar';\nimport styled from 'ui/themes/styled';\nimport { Actor } from './types';\nimport { typography } from 'mn-constants';\nimport { useUserById } from '../../../fe/user/useUserById';\n\nexport enum Status {\n  Loading,\n  Loaded\n}\n\nexport interface ActivityLoaded {\n  status: Status.Loaded; // FIX ME after fix flags story in settings page\n  userActivity: Array<Activity>;\n}\n\nexport interface ActivityLoading {\n  status: Status.Loading; // FIX ME after fix flags story in settings page\n}\n\nexport interface Activity {\n  id: string;\n  objectId: string;\n  object: {\n    __typename: string;\n  };\n  subjectId: string;\n  verb: {\n    verbDisplay: string;\n    verb: string;\n  };\n}\n\nexport type Props = ActivityLoaded | ActivityLoading;\n\nexport const ActivityPreview: FC<any> = ({ userActivity }) =>\n  !(userActivity?.status === Status.Loading) ? (\n    <>\n      {userActivity?.map((item: Activity) => (\n        <FeedItem mb={2} key={item.id}>\n          <SmallActorComp activityItem={item} />\n          {/*<Contents mt={2}>*/}\n          {/*    Activity ID: <Title>{item && item.id}</Title>*/}\n          {/*</Contents>*/}\n\n          {/*<Link to={item.subjectId}>*/}\n          {/*    <Contents mt={2}>*/}\n          {/*        Activity SubjectId: <Title>{item && item.subjectId}</Title>*/}\n          {/*    </Contents>*/}\n          {/*</Link>*/}\n\n          <Contents mt={2}>\n            Activity Object: <Title>{item && item.object.__typename}</Title>\n          </Contents>\n\n          <Contents mt={2}>\n            Activity Verb: <Title>{item && item.verb.verbDisplay}</Title>\n          </Contents>\n        </FeedItem>\n      ))}\n    </>\n  ) : (\n    <Trans>loading...</Trans>\n  );\n\nexport interface ActorPropsType {\n  activityItem: Activity;\n  actor?: Actor;\n  createdAt: string;\n  event: string;\n  threadUrl?: string;\n  communityName: string;\n  communityLink: string;\n}\n\nexport interface ActorProps {\n  actor?: Actor;\n  createdAt: string;\n  event: string;\n  threadUrl?: string;\n  communityName: string;\n  communityLink: string;\n}\n\nexport const ActorComp: FC<ActorPropsType> = ({\n  actor,\n  createdAt,\n  event,\n  threadUrl,\n  communityName,\n  communityLink\n}) => {\n  return (\n    <Member>\n      {actor && (\n        <>\n          <Avatar initials={actor.name} src={actor.icon} variant=\"avatar\" />\n          <MemberInfo ml={2}>\n            <Flex mt={1} alignItems=\"center\">\n              <Flex flex={1}>\n                <Name>\n                  <Link to={actor.link}>{actor.name}</Link>\n                </Name>\n                <TextEvent sx={{ textTransform: 'lowercase' }} variant=\"text\" ml={1}>\n                  {threadUrl ? <Link to={threadUrl}>{event}</Link> : event}\n                </TextEvent>\n              </Flex>\n            </Flex>\n            <Flex sx={{ marginTop: '2px' }} alignItems=\"center\">\n              <Date>{DateTime.fromSQL(createdAt).toRelative()}</Date>\n              <Spacer mx={1}>·</Spacer>\n              <CommunityName to={communityLink}>{communityName}</CommunityName>\n            </Flex>\n          </MemberInfo>\n        </>\n      )}\n    </Member>\n  );\n};\n\nexport interface SmallActorProps {\n  activityItem: Activity;\n}\n\nexport const SmallActorComp: FC<SmallActorProps> = ({ activityItem }) => {\n  const { user } = useUserById(activityItem.subjectId);\n  const initials = useMemo(() => user?.profile?.name || '', [user]);\n  const icon = useMemo(() => user?.profile?.icon || '', [user]);\n\n  return (\n    <BrowserRouter>\n      <Member sx={{ alignItems: 'center !important' }}>\n        <Avatar\n          size=\"s\"\n          initials={initials}\n          src={`${process.env.REACT_APP_GRAPHQL_IMG_LINK}${icon}`}\n          variant=\"avatar\"\n        />\n        <MemberInfo sx={{ marginTop: 0 }} ml={2}>\n          <Flex alignItems=\"center\">\n            <Flex flex={1}>\n              <Name>\n                <Link to={`${user?.id}`}>{user?.profile?.name || ''}</Link>\n              </Name>\n              <TextEvent sx={{ textTransform: 'lowercase' }} variant=\"text\" ml={1}>\n                <Title variant=\"subhead\">{activityItem?.verb.verbDisplay.toUpperCase()}</Title>\n              </TextEvent>\n            </Flex>\n          </Flex>\n        </MemberInfo>\n      </Member>\n    </BrowserRouter>\n  );\n};\n\nconst CommunityName = styled(Link)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n  font-size: ${typography.size.s1};\n`;\n\nconst TextEvent = styled(Text)`\n  color: ${props => props.theme.colors.dark};\n\n  a {\n    font-weight: 600;\n    color: ${props => props.theme.colors.darker};\n  }\n`;\n\nconst Contents = styled(Box)``;\n\nconst Spacer = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n`;\n\nconst Date = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n  font-size: ${typography.size.s1};\n`;\n\nconst Name = styled(Text)`\n  font-weight: 600;\n  color: ${props => props.theme.colors.primary};\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n\n  a {\n    font-weight: 800;\n    display: flex;\n    text-decoration: none;\n    align-items: center;\n    position: relative;\n    z-index: 9;\n    color: ${props => props.theme.colors.primary} !important;\n  }\n`;\n\nconst Member = styled(Flex)`\n  align-items: stretch;\n`;\nexport const Title = styled(Text)`\n  display: inline-block;\n  font-size: ${typography.size.m1};\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none !important;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\nconst MemberInfo = styled(Box)`\n  width: 100%;\n  margin-top: -4px;\n`;\n\nconst FeedItem = styled(Box)`\n  position: relative;\n  padding: 16px;\n  word-wrap: break-word;\n  ${clearFix()};\n  transition: background 0.5s ease;\n  margin-top: 0;\n  z-index: 10;\n  position: relative;\n  border-radius: 4px;\n  background: ${props => props.theme.colors.appInverse};\n  margin-bottom: 8px;\n\n  a {\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Modal from 'ui/modules/Modal';\nimport { Inventory } from 'ui/pages/inventory';\nimport { Filter } from 'ui/modules/Filter';\nimport { CreateLocationPanelHOC } from '../../modules/CreateLocationPanel/CreateLocationPanelHOK';\nimport { CreateResourcePanelHOC } from '../../modules/CreateResourcePanel/CreateResourcePanelHOC';\nimport { useEconomicResourcesFilteredQuery } from './InventoryPage.generated';\nimport { ASC } from 'util/constants/pagination';\nimport { notEmptyValue } from 'util/main';\n\nconst queryString = require('query-string');\n\nexport interface PrimaryAccountable {\n  id: string;\n  name: string;\n  image: string;\n  relationshipsAsObject?: any;\n  intents: {\n    id: string;\n    name: string;\n    note?: string;\n    image?: string | null;\n  }[];\n  onhandQuantity?: {\n    hasNumericalValue: string;\n    hasUnit?: {\n      label: string;\n      symbol: string;\n    };\n  };\n  accountingQuantity?: {\n    hasNumericalValue: number;\n    hasUnit?: {\n      label: string;\n      symbol: string;\n    };\n  };\n}\n\nexport interface EconomicResource {\n  id: string;\n  name: string;\n  note: string;\n  eventNote?: string;\n  hasPointInTime?: string;\n  image?: string;\n  primaryAccountable: PrimaryAccountable;\n  currentLocation?: {\n    id: string;\n    name: string;\n    lat: string;\n    long: string;\n  };\n  unitOfEffort: any;\n  containedIn: any;\n  contains: any;\n  lot: any;\n  stage: any;\n  trackingIdentifier?: string | null;\n  onhandQuantity?: {\n    id: string;\n    hasNumericalValue: number;\n    hasUnit: {\n      id: string;\n      label: string;\n    };\n  };\n  trace?: {\n    id: string;\n    hasTimePoint?: string;\n  };\n  track?: {\n    id: string;\n    note: string;\n    hasTimePoint?: string;\n    resourceQuantity: {\n      hasNumericalValue: number;\n      hasUnit: {\n        id: string;\n        label: string;\n      };\n    };\n    action?: {\n      id: string;\n      label: string;\n    };\n    provider: {\n      id: string;\n      name: string;\n    };\n    receiver: {\n      id: string;\n      name: string;\n    };\n  }[];\n}\n\nconst INITIAL_FILTER = {\n  sort: '',\n  order: '',\n  search: '',\n  trace: false,\n  track: false\n};\n\nexport type FilterType = {\n  sort?: string;\n  order?: string;\n  search?: string;\n  trace?: boolean;\n  track?: boolean;\n};\n\nexport type Props = {\n  userId?: string;\n  triggerTab?: string;\n};\n\nexport const InventoryPage: FC<Props> = ({ triggerTab, userId }) => {\n  const location = useLocation();\n  let history = useHistory();\n  const currentUser = location.pathname.split('/')[2];\n  const [showCreateLocation, toggleShowCreateLocation] = React.useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState(INITIAL_FILTER);\n\n  useEffect(() => {\n    const query = location.search;\n    const queryStringGetter = queryString.parse(query);\n\n    query?.length && setIsOpen(true);\n    setFilter(queryStringGetter);\n    // eslint-disable-next-line\n  }, []);\n\n  const [showCreateResource, toggleShowCreateResource] = useState(false);\n\n  const done = () => {\n    toggleShowCreateResource(false);\n  };\n\n  const CreateResourceModal = showCreateResource ? (\n    <Modal closeModal={done}>\n      {showCreateLocation ? (\n        <CreateLocationPanelHOC done={toggleShowCreateLocation} />\n      ) : (\n        <CreateResourcePanelHOC done={done} toggleCreateLocation={toggleShowCreateLocation} />\n      )}\n    </Modal>\n  ) : null;\n\n  const { data } = useEconomicResourcesFilteredQuery({\n    variables: { agent: currentUser ? [currentUser] : [] }\n  });\n\n  const inventory = data?.economicResourcesFiltered || [];\n  const [filteredInventory, setFilteredInventory] = useState<Array<any>>([...inventory]);\n  useEffect(() => {\n    if (inventory.length) {\n      const query = location.search;\n      if (query.length) {\n        let newList = [...inventory];\n        if (filter.trace === true) {\n          newList = newList.filter((item: any) => item.trace.length);\n        }\n        if (filter.track === true) {\n          newList = newList.filter((item: any) => item.track.length);\n        }\n        if (filter.search) {\n          newList = newList.filter(item =>\n            item?.name?.toLowerCase().includes(filter.search.toLowerCase())\n          );\n        }\n        if (filter.order) {\n          newList = newList.sort(function(a: any, b: any) {\n            if (a[filter.sort] > b[filter.sort]) {\n              return 1;\n            }\n            if (a[filter.sort] < b[filter.sort]) {\n              return -1;\n            }\n            return 0;\n          });\n        }\n\n        if (filter.order && filter.order !== ASC) {\n          setFilteredInventory(newList);\n        } else {\n          setFilteredInventory(newList.reverse());\n        }\n        setFilteredInventory(newList);\n      } else {\n        setFilteredInventory(inventory);\n      }\n    }\n    // eslint-disable-next-line\n  }, [inventory]);\n\n  const triggerOpen = (value: boolean) => {\n    setIsOpen(value);\n  };\n\n  useEffect(() => {\n    checkFilter(filter.trace);\n    // eslint-disable-next-line\n  }, [filter.trace]);\n\n  useEffect(() => {\n    checkFilter(filter.track);\n    // eslint-disable-next-line\n  }, [filter.track]);\n\n  useEffect(() => {\n    setFilteredInventory(\n      inventory.filter(item =>\n        item?.name?.toLowerCase()?.includes(filter?.search?.toLowerCase() || '')\n      )\n    );\n    // eslint-disable-next-line\n  }, [filter.search, inventory]);\n\n  useEffect(() => {\n    let newInventory = [...filteredInventory];\n    newInventory = newInventory.sort(function(a: any, b: any) {\n      if (a[filter.sort] > b[filter.sort]) {\n        return 1;\n      }\n      if (a[filter.sort] < b[filter.sort]) {\n        return -1;\n      }\n\n      return 0;\n    });\n\n    if (filter.order !== ASC) {\n      setFilteredInventory(newInventory);\n    } else {\n      setFilteredInventory(newInventory.reverse());\n    }\n    // eslint-disable-next-line\n  }, [filter.order]);\n\n  useEffect(() => {\n    const queryStringSetter = queryString.stringify(notEmptyValue(filter));\n    history.push({\n      search: queryStringSetter\n    });\n    checkFilter(true);\n    // eslint-disable-next-line\n  }, [filter]);\n\n  const handleFilterChange = (prop: FilterType, isClear?: boolean) => {\n    if (isClear) {\n      setFilter(INITIAL_FILTER);\n      return;\n    }\n    setFilter(prev => ({\n      ...prev,\n      ...prop\n    }));\n  };\n\n  const handleClear = () => {\n    setFilter(INITIAL_FILTER);\n    setFilteredInventory(inventory);\n  };\n\n  const checkFilter = (data: any) => {\n    const query = location.search;\n\n    if (query.length || data) {\n      let newList = [...inventory];\n      if (filter.trace) {\n        newList = newList.filter((item: any) => item.trace.length);\n      }\n      if (filter.track) {\n        newList = newList.filter((item: any) => item.track.length);\n      }\n      if (filter.search) {\n        newList = newList.filter(item =>\n          item?.name?.toLowerCase().includes(filter.search.toLowerCase())\n        );\n      }\n      if (filter.order) {\n        newList = newList.sort(function(a: any, b: any) {\n          if (a[filter.sort] > b[filter.sort]) {\n            return 1;\n          }\n          if (a[filter.sort] < b[filter.sort]) {\n            return -1;\n          }\n\n          return 0;\n        });\n      }\n\n      if (filter.order && filter.order !== ASC) {\n        setFilteredInventory(newList);\n      } else {\n        setFilteredInventory(newList.reverse());\n      }\n\n      setFilteredInventory(newList);\n    } else {\n      setFilteredInventory(inventory);\n    }\n  };\n\n  const handleOpenModal = () => {\n    toggleShowCreateResource(true);\n  };\n\n  return (\n    <>\n      {CreateResourceModal}\n      <Inventory\n        inventory={filteredInventory}\n        done={handleOpenModal}\n        owner={currentUser}\n        userId={userId}\n      >\n        <Filter\n          isOpen={isOpen}\n          triggerOpen={triggerOpen}\n          onChange={handleFilterChange}\n          onClear={handleClear}\n          filterSet={filter}\n        />\n      </Inventory>\n    </>\n  );\n};\n","type objectWithEmptyFields = { [field: string]: boolean | string | number };\n\nexport const notEmptyValue = (obj: objectWithEmptyFields) => {\n  const notEmptyObj: objectWithEmptyFields = {};\n  Object.keys(obj).forEach(key => {\n    if (\n      (typeof obj[key] === 'boolean' && obj[key] === true) ||\n      typeof obj[key] === 'number' ||\n      (typeof obj[key] === 'string' && obj[key] !== '')\n    ) {\n      notEmptyObj[key] = obj[key];\n    }\n  });\n\n  return notEmptyObj;\n};\n","import { HeroUser } from 'HOC/modules/HeroUser/HeroUser';\nimport React, { FC, useMemo } from 'react';\nimport { Props, User as UserPageUI } from 'ui/pages/user';\nimport { InventoryPage } from '../inventory/InventoryPage';\nimport { useUserById } from '../../../fe/user/useUserById';\nimport { ActivityPreview } from '../../../ui/modules/ActivityPreview';\n\nexport enum UserPageTab {\n  Starred,\n  Communities,\n  Collections,\n  Following,\n  Activities,\n  Inventory\n}\n\nexport const UserPage: FC<any> = ({ userId, basePath, tab }) => {\n  const { user, loading } = useUserById(userId);\n\n  const userPageProps = useMemo<Props>(() => {\n    const LikesBoxes = <></>;\n    const ActivityBoxes = (\n      <ActivityPreview userActivity={user?.userActivities} status={{ Loading: !loading }} />\n    );\n    const CollectionsBoxes = <></>;\n    const CommunityBoxes = <></>;\n\n    const InventoryBoxes = <InventoryPage userId={userId} />;\n\n    const UserBoxes = <></>;\n\n    const HeroUserBox = <HeroUser userId={userId} />;\n\n    const props: any = {\n      basePath,\n      userInfo: user,\n      ActivityBoxes,\n      LikesBoxes,\n      HeroUserBox,\n      CollectionsBoxes,\n      CommunityBoxes,\n      InventoryBoxes,\n      UserBoxes\n    };\n    return props;\n  }, [user, basePath, userId, loading]);\n  return <UserPageUI {...userPageProps} />;\n};\n","import React, { FC, useMemo } from 'react';\nimport { UserPage, UserPageTab } from 'HOC/pages/user/UserPage';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { Redirect, RouteComponentProps, RouteProps, useRouteMatch } from 'react-router-dom';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { locationHelper } from './lib/helper';\nimport { useMe } from '../fe/session/useMe';\n\ninterface UserPageRouter {\n  userId: string;\n  tab?: string;\n}\n\nconst UserPageRouter: FC<RouteComponentProps<UserPageRouter>> = () => {\n  const { params } = useRouteMatch();\n  const userId = useMemo(() => params.userId, [params]);\n  const maybeTabStr = params.tab as Tab;\n  const tab =\n    maybeTabStr === 'starred'\n      ? UserPageTab.Starred\n      : maybeTabStr === 'communities'\n      ? UserPageTab.Communities\n      : maybeTabStr === 'collections'\n      ? UserPageTab.Collections\n      : maybeTabStr === 'following'\n      ? UserPageTab.Following\n      : maybeTabStr === 'inventory'\n      ? UserPageTab.Inventory\n      : !maybeTabStr\n      ? UserPageTab.Activities\n      : null;\n\n  const { me } = useMe();\n  const loggedIn = !!me?.user?.id || localStorage.getItem('APOLLO#AUTH_TOKEN');\n  const userIdentificatior = useMemo(\n    () => (userId ? userId : me?.users && me?.users[0] && me?.users[0]?.character?.username),\n    [me, userId]\n  );\n\n  const props = useMemo<any | null>(\n    () =>\n      tab === null\n        ? null\n        : {\n            tab,\n            userId: userIdentificatior,\n            basePath: userLocation.getPath({ tab: undefined, userId }, undefined)\n          },\n    [tab, userId, userIdentificatior]\n  );\n  if (!props) {\n    return <NotFoundHOC />;\n  }\n  return loggedIn ? (\n    <WithSidebarTemplate>\n      <UserPage {...props} />\n    </WithSidebarTemplate>\n  ) : (\n    <Redirect to={'/login'} />\n  );\n};\n\nexport const UserPageRoute: RouteProps = {\n  exact: true,\n  path: '/user/:userId/:tab(starred|communities|collections|inventory|following)?',\n  component: UserPageRouter\n};\n\ntype Tab = undefined | 'starred' | 'communities' | 'collections' | 'inventory' | 'following';\ntype Params = {\n  userId: string;\n  tab: Tab;\n};\n\nexport const userLocation = locationHelper<Params, undefined>(UserPageRoute);\n","import { useMe } from 'fe/session/useMe';\nimport { MainHeaderHOC } from 'HOC/modules/Header/Header';\nimport { SidebarHOC } from 'HOC/modules/Sidebar/Sidebar';\nimport React, { FC, useMemo } from 'react';\nimport { SidebarProps, WithSidebar } from 'ui/templates/withSidebar';\nimport { GuestTemplate } from '../Guest/Guest';\nimport { ProvideSideBarContext } from 'HOC/context/SideBar';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\nimport { userLocation } from 'routes/UserPageRoute';\n\nexport interface WithSidebarTemplate {}\nexport const WithSidebarTemplate: FC<WithSidebarTemplate> = ({ children }) => {\n  const { loading, me } = useMe();\n\n  const withSidebarProps = useMemo<null | SidebarProps>(() => {\n    const user = me?.user;\n    if (!user || loading) {\n      return null;\n    }\n    const userLink = userLocation.getPath({ tab: undefined, userId: user.id || '' }, undefined);\n    const props: any = {\n      SidebarBox: <SidebarHOC />,\n      HeaderBox: <MainHeaderHOC />,\n      SearchBox: <SearchBox />,\n      // userImage,\n      userLink\n      // signout: logout,\n      // username: user.displayUsername || '',\n      // name: user.preferredUsername || ''\n    };\n    return props;\n  }, [loading, me]);\n\n  return withSidebarProps ? (\n    <ProvideSideBarContext>\n      <WithSidebar {...withSidebarProps}>{children}</WithSidebar>\n    </ProvideSideBarContext>\n  ) : (\n    <GuestTemplate>{children}</GuestTemplate>\n  );\n};\n","import { DiscoverPage, DiscoverPageTabs } from 'HOC/pages/discover/DiscoverPage';\nimport React, { FC, useMemo } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { locationHelper } from './lib/helper';\n\ninterface DiscoverPageRouter {\n  tab?: string;\n}\nconst DiscoverPageRouter: FC<RouteComponentProps<DiscoverPageRouter>> = ({ match }) => {\n  const maybeTabStr = match.params.tab;\n  const tab =\n    maybeTabStr === 'collections'\n      ? DiscoverPageTabs.Collections\n      : maybeTabStr === 'communities'\n      ? DiscoverPageTabs.Communities\n      : !maybeTabStr\n      ? DiscoverPageTabs.Activities\n      : null;\n  const props = useMemo<DiscoverPage | null>(() => {\n    return tab === null\n      ? null\n      : {\n          basePath: '/discover',\n          tab\n        };\n  }, [tab]);\n  if (!props) {\n    return <NotFoundHOC />;\n  }\n\n  return (\n    <WithSidebarTemplate>\n      <DiscoverPage {...props} />\n    </WithSidebarTemplate>\n  );\n};\n\nexport const DiscoverPageRoute: RouteProps = {\n  exact: true,\n  path: '/discover/:tab(collections|communities)?',\n  component: DiscoverPageRouter\n};\n\ntype Tab = undefined | 'collections' | 'communities';\ntype Params = {\n  tab: Tab;\n};\n\nexport const discoverLocation = locationHelper<Params, undefined>(DiscoverPageRoute);\n","import { useMemo } from 'react';\nimport { useCallOrNotifyMustLogin } from '../../../HOC/lib/notifyMustLogin';\nimport { EconomicResourceQueryRefetch } from '../../../HOC/pages/resource/EconomicResource.generated';\nimport { useCreateEconomicEventAndExistResourceMutation } from './useCreateResource.generated';\n\nexport interface CreateResource {\n  id: string;\n  eventNote: string;\n  hasPointInTime: string;\n  atLocation: string;\n  name: string;\n  note?: string;\n  action: string;\n  provider: string;\n  receiver: string;\n  hasUnit: string;\n  hasNumericalValue: number;\n  image: string | File | undefined;\n}\n\nexport const useCreateEventOnResource = () => {\n  const [\n    createResourceMut,\n    createResourceMutStatus\n  ] = useCreateEconomicEventAndExistResourceMutation();\n\n  const create = useCallOrNotifyMustLogin(\n    async ({\n      id,\n      action,\n      provider,\n      receiver,\n      hasUnit,\n      hasNumericalValue,\n      eventNote,\n      hasPointInTime\n    }: CreateResource) => {\n      if (createResourceMutStatus.loading) {\n        return;\n      }\n\n      return createResourceMut({\n        variables: {\n          id,\n          action,\n          provider,\n          receiver,\n          hasUnit,\n          hasNumericalValue,\n          eventNote,\n          hasPointInTime\n        },\n        refetchQueries: [EconomicResourceQueryRefetch({ id: id })]\n      });\n    },\n    [createResourceMutStatus, createResourceMut]\n  );\n  return useMemo(() => {\n    return {\n      create\n    };\n  }, [create]);\n};\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport React, { FC } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Box, Heading, Text } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { FormikHook } from 'ui/@types/types';\nimport { CustomSelect as Select } from 'ui/elements/CustomSelect';\nimport { setSelectOption } from '../../elements/CustomSelect/select';\nimport { ImageWrapper, Title } from '../../pages/resource';\nimport { IntentActions } from '../EconomicEventManager';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport Input, { CustomAlert } from '../../elements/Input';\nimport { Actions, Container, CounterChars, Header } from 'ui/modules/Modal';\nimport { Hero, CollectionContainerForm, HeroInfo } from '../CreateCollectionPanel/style';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n// import { useMe } from '../../../fe/session/useMe';\n\nexport type CreateEventOnResourceFormValues = {\n  name: string;\n  note?: string;\n  atLocation: { id: string; value: string; label: string };\n  eventNote?: string;\n  hasPointInTime: string;\n  action: IntentActions;\n  provider: IntentActions;\n  receiver: IntentActions;\n  hasUnit: IntentActions;\n  hasNumericalValue: number;\n  image: string | File | undefined | any;\n};\n\nexport type TCreateEventOnResourcePanel = {\n  title: string;\n  done: any;\n  formik: FormikHook<CreateEventOnResourceFormValues>;\n  unitPages?: any;\n  actionList?: any;\n  providerList?: null | { id: string; name: string; displayUsername: string }[];\n  receiverList?: null | { id: string; name: string; displayUsername: string }[];\n  setAction?: (name: string) => void;\n};\n\nexport type SelectOption = {\n  label: string;\n  id: string;\n};\n\nexport const CreateEventOnResourcePanel: FC<TCreateEventOnResourcePanel> = ({\n  title,\n  formik,\n  done,\n  actionList,\n  providerList,\n  receiverList,\n  setAction = () => {}\n}) => {\n  const [providerArr, setProviderArr] = React.useState<any>([]);\n  const [receiverArr, setReceiverArr] = React.useState<any>([]);\n  const [startDate, setStartDate] = React.useState<any>(new Date());\n  // const { me } = useMe();\n\n  React.useEffect(() => {\n    setProviderArr(\n      setSelectOption(providerList, {\n        variables: ['name', 'displayUsername'],\n        template: 'name / displayUsername'\n      })\n    );\n    setReceiverArr(\n      setSelectOption(receiverList, {\n        variables: ['name', 'displayUsername'],\n        template: 'name / displayUsername'\n      })\n    );\n\n    formik.setValues({\n      ...formik.values,\n      hasPointInTime: new Date().toISOString()\n      // provider: {\n      //   // id: providerList?.find((el: any) => el.id === me?.user?.id)?.id || '',\n      //   // label: providerList?.find((el: any) => el.id === me?.user?.id)?.name || ''\n      // },\n      // receiver: {\n      //   // id: receiverList?.find((el: any) => el.id === me?.user?.id)?.id || '',\n      //   // label: receiverList?.find((el: any) => el.id === me?.user?.id)?.name || ''\n      // }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [providerList, receiverList]);\n\n  return (\n    <Container>\n      <form onSubmit={formik.handleSubmit}>\n        <Header>\n          <Heading m={2}>\n            <Trans>{title}</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <CollectionContainerForm>\n              <div className=\"d-flex d-flex-image\">\n                <Box sx={{ width: '140', height: '140' }} className=\"item_photo\">\n                  <ImageWrapper>\n                    <img\n                      src={\n                        typeof formik.values.image !== 'object'\n                          ? formik.values.image\n                          : formik.values.image.path\n                      }\n                      alt=\"img\"\n                    />\n                  </ImageWrapper>\n                </Box>\n                <div className=\"item_info\">\n                  <Box mr={1} mb={2}>\n                    <Title variant=\"heading\">\n                      {' '}\n                      <Trans>{formik.values.name}</Trans>\n                    </Title>\n                  </Box>\n                  <Box mr={1} mb={2}>\n                    <Text variant=\"text\">\n                      <b>\n                        <Trans>Location:</Trans>{' '}\n                      </b>{' '}\n                      <Trans>{formik.values.atLocation?.label}</Trans>\n                    </Text>\n                  </Box>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <b>\n                        <Trans>Note:</Trans>{' '}\n                      </b>{' '}\n                      <Trans>{formik.values.note}</Trans>\n                    </Text>\n                  </Box>\n                </div>\n              </div>\n            </CollectionContainerForm>\n            <CollectionContainerForm>\n              <Box>\n                <FormGroup>\n                  <FormLabel>Actions</FormLabel>\n                  <Select\n                    onSelect={(name, option) => {\n                      setAction(option.id);\n                      formik.setValues({ ...formik.values, action: option });\n                    }}\n                    options={actionList}\n                    variant=\"primary\"\n                    id=\"actions\"\n                    name=\"actions\"\n                    placeholder={i18nMark('Select action')}\n                    value={formik.values.action}\n                    noChange={true}\n                    onInputChange={() => {}}\n                    openMenuOnClick={true}\n                  />\n                </FormGroup>\n                {formik.errors.action && (\n                  <CustomAlert variant=\"negative\">{formik.errors.action && 'Required'}</CustomAlert>\n                )}\n              </Box>\n\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Provider</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      placeholder={i18nMark('Provider')}\n                      options={providerArr}\n                      variant=\"primary\"\n                      value={formik.values.provider}\n                      id=\"provider\"\n                      name=\"provider\"\n                      components={{ DropdownIndicator: () => null }}\n                      onInputChange={(name: string, value: string) => {\n                        let newList = providerList?.filter(item =>\n                          item?.displayUsername?.toLowerCase().includes(value.toLowerCase())\n                        );\n\n                        setProviderArr(\n                          setSelectOption(newList, {\n                            variables: ['name', 'displayUsername'],\n                            template: 'name / displayUsername'\n                          })\n                        );\n                      }}\n                      openMenuOnClick={false}\n                    />\n                  </FormGroup>\n                  {formik.errors.provider && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.provider && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Receiver</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      placeholder={i18nMark('Receiver')}\n                      options={receiverArr}\n                      variant=\"primary\"\n                      value={formik.values.receiver}\n                      id=\"receiver\"\n                      name=\"receiver\"\n                      components={{ DropdownIndicator: () => null }}\n                      onInputChange={(name: string, value: string) => {\n                        let newList = receiverList?.filter(item =>\n                          item?.displayUsername?.toLowerCase().includes(value.toLowerCase())\n                        );\n\n                        setReceiverArr(\n                          setSelectOption(newList, {\n                            variables: ['name', 'displayUsername'],\n                            template: 'name / displayUsername'\n                          })\n                        );\n                      }}\n                      openMenuOnClick={false}\n                    />\n                  </FormGroup>\n                  {formik.errors.receiver && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.receiver && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n              </div>\n            </CollectionContainerForm>\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>unit</FormLabel>\n                    <Input\n                      type=\"text\"\n                      id=\"hasUnit\"\n                      name=\"hasUnit\"\n                      disabled={true}\n                      onChange={formik.handleChange}\n                      value={formik.values.hasUnit.label}\n                    />\n                  </FormGroup>\n                  {formik.errors.hasUnit && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.hasUnit && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>numerical value</FormLabel>\n                    <Input\n                      type=\"number\"\n                      id=\"hasNumericalValue\"\n                      name=\"hasNumericalValue\"\n                      onChange={formik.handleChange}\n                      placeholder={i18nMark('Numerical Value')}\n                      value={formik.values.hasNumericalValue}\n                    />\n                  </FormGroup>\n                  {formik.errors.hasNumericalValue && (\n                    <CustomAlert variant=\"negative\">{formik.errors.hasNumericalValue}</CustomAlert>\n                  )}\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <FormLabel>Event date</FormLabel>\n              <div\n                style={{\n                  width: '100%',\n                  border: '1px solid #05244f',\n                  padding: '0 10px',\n                  marginBottom: 10\n                }}\n              >\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date: any) => {\n                    setStartDate(date);\n                    // @ts-ignore\n                    formik.setValues({ ...formik.values, hasPointInTime: date.toISOString() });\n                  }}\n                  dateFormat=\"dd/MM/yyyy\"\n                />\n              </div>\n            </CollectionContainerForm>\n            <CollectionContainerForm>\n              <FormGroup>\n                <FormLabel>Event Note</FormLabel>\n                <Input\n                  id=\"eventNote\"\n                  type=\"textarea\"\n                  name=\"eventNote\"\n                  onChange={formik.handleChange}\n                  placeholder={i18nMark('Event Note')}\n                  value={formik.values.eventNote}\n                />\n              </FormGroup>\n              <CounterChars>\n                {formik.values.eventNote ? 500 - formik.values.eventNote.length : 500}\n              </CounterChars>\n              {formik.errors.eventNote && (\n                <CustomAlert variant=\"negative\">{formik.errors.eventNote}</CustomAlert>\n              )}\n            </CollectionContainerForm>\n          </HeroInfo>\n        </Hero>\n        <Actions>\n          <Button\n            variant=\"primary\"\n            isSubmitting={formik.isSubmitting}\n            isDisabled={formik.isSubmitting}\n            type=\"submit\"\n            style={{ marginLeft: '10px' }}\n          >\n            <Trans>Save</Trans>\n          </Button>\n          <Button variant=\"outline\" onClick={done}>\n            <Trans>Cancel</Trans>\n          </Button>\n        </Actions>\n      </form>\n      <ToastContainer />\n    </Container>\n  );\n};\n","import { useFormik } from 'formik';\nimport React, { FC, useState } from 'react';\nimport styled from 'ui/themes/styled';\nimport { Flex } from 'rebass/styled-components';\nimport { Trans } from '@lingui/macro';\nimport { Slide, toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { TestUrlOrFile } from 'HOC/lib/formik-validations';\nimport { useCreateEventOnResource } from '../../../fe/resource/create/useCreateEventOnResource';\nimport {\n  CreateEventOnResourcePanel,\n  TCreateEventOnResourcePanel,\n  CreateEventOnResourceFormValues\n} from 'ui/modules/CreateEventOnResourcePanel';\nimport { EconomicResource } from '../../pages/inventory/InventoryPage';\nimport { EconomicEventManagerHOC } from '../EconomicEventManager/EconomicEventManagerHOC';\nimport { CreateLocationPanelHOC } from '../CreateLocationPanel/CreateLocationPanelHOK';\nimport { CreateResourcePanelHOC } from '../CreateResourcePanel/CreateResourcePanelHOC';\n\nexport interface BasicCreateEventFormValues {\n  name: string;\n  summary: string;\n  image: File | string | undefined;\n}\n\nexport const validationSchema: Yup.ObjectSchema<BasicCreateEventFormValues> = Yup.object<\n  BasicCreateEventFormValues\n>({\n  name: Yup.string()\n    .min(2)\n    .max(60)\n    .required(),\n  summary: Yup.string().max(500),\n  image: Yup.mixed<string | File>().test(...TestUrlOrFile)\n});\n\nexport interface Props {\n  done: () => void;\n  resource: EconomicResource | any;\n}\n\nexport const CreateEconomicEventOnResourcePanelHOC: FC<Props> = ({ done, resource, ...props }) => {\n  const { create } = useCreateEventOnResource();\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(60, 'Too Long!')\n      .required('Required'),\n    note: Yup.string().max(500, 'Too Long!'),\n    eventNote: Yup.string().max(500, 'Too Long!'),\n    action: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    provider: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    receiver: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    hasUnit: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    hasNumericalValue: Yup.string()\n      .required('Required')\n      .notOneOf([0, '0', null, undefined], 'Not null')\n  });\n\n  const formik = useFormik<any>({\n    initialValues: React.useMemo(() => {\n      let values = {\n        name: '',\n        note: '',\n        image: '' || undefined,\n        atLocation: {\n          id: '',\n          label: '',\n          value: ''\n        },\n        action: {\n          id: '',\n          label: ''\n        },\n        provider: {\n          id: '',\n          label: ''\n        },\n        receiver: {\n          id: '',\n          label: ''\n        },\n        hasUnit: {\n          id: '',\n          label: ''\n        },\n        hasNumericalValue: 0,\n        eventNote: '',\n        hasPointInTime: ''\n      };\n      if (resource) {\n        values = {\n          name: resource.name || '',\n          note: resource.note || '',\n          hasPointInTime: resource?.hasPointInTime || '',\n          //@ts-ignore\n          image: resource.image || undefined,\n          action: {\n            id: '',\n            label: ''\n          },\n          provider: {\n            id: resource.track[0]?.provider?.id || '',\n            label: resource.track[0]?.provider?.name || ''\n          },\n          receiver: {\n            id: resource.track[0]?.receiver?.id || '',\n            label: resource.track[0]?.receiver?.name || ''\n          },\n          hasUnit: {\n            id: resource.onhandQuantity?.hasUnit.id || '',\n            label: resource.onhandQuantity?.hasUnit.label || ''\n          },\n          hasNumericalValue: resource.onhandQuantity?.hasNumericalValue || 0,\n          eventNote: resource.track[0]?.note || '',\n          atLocation: resource.currentLocation\n            ? {\n                id: resource.currentLocation.id,\n                value: resource.currentLocation.id,\n                label: resource.currentLocation.name\n              }\n            : { id: '', label: '', value: '' }\n        };\n      }\n      return values;\n    }, [resource]),\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n\n    onSubmit: (values: CreateEventOnResourceFormValues) => {\n      return create({\n        id: resource.id,\n        name: values.name,\n        atLocation: values.atLocation.id,\n        eventNote: values.eventNote || '',\n        action: values.action.id,\n        note: values.note,\n        provider: values.provider.id,\n        receiver: values.receiver.id,\n        hasUnit: values.hasUnit.id,\n        hasNumericalValue: values.hasNumericalValue,\n        image: values.image,\n        hasPointInTime: values.hasPointInTime\n      })\n        .then((response: any) => {\n          if (!response.errors) {\n            toast.success(`Event on resource ${resource.name} created`, {\n              position: 'top-right',\n              transition: Slide,\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true\n            });\n            done();\n          } else {\n            throw new Error(response.errors[0].message);\n          }\n        })\n        .catch(error => {\n          toast.error(error.message, {\n            position: 'top-right',\n            transition: Slide,\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true\n          });\n        });\n    }\n  });\n\n  const CreateEventOnResourcePanelProps: TCreateEventOnResourcePanel = {\n    ...props,\n    title: `Create a new event on resource ${resource.name}`,\n    formik,\n    done\n  };\n\n  const handlerCloseSecondTab = () => {\n    toggleTab(0);\n    done();\n  };\n  const [showCreateLocation, toggleShowCreateLocation] = useState(false);\n  const CreateResourceModal = (\n    <>\n      {showCreateLocation ? (\n        <CreateLocationPanelHOC done={toggleShowCreateLocation} />\n      ) : (\n        <CreateResourcePanelHOC\n          done={handlerCloseSecondTab}\n          toggleCreateLocation={toggleShowCreateLocation}\n          resource={formik.values}\n        />\n      )}\n    </>\n  );\n\n  const CreateEventOnExistResourceModal = (\n    <CreateEventOnResourcePanel {...CreateEventOnResourcePanelProps} />\n  );\n\n  const [tab, toggleTab] = useState(0);\n  const [switchOn, toggleSwitch] = useState(true);\n  return (\n    <EconomicEventManagerHOC>\n      <TabController>\n        <Switcher>\n          <input\n            type=\"checkbox\"\n            name=\"toggleSwitch\"\n            id=\"toggleSwitch\"\n            checked={switchOn}\n            onChange={() => {\n              toggleSwitch(!switchOn);\n              toggleTab(tab === 0 ? 1 : 0);\n            }}\n          />\n          <span className=\"slider round\"></span>\n          <Trans>\n            {switchOn\n              ? 'Create a new event on exist resource'\n              : 'Create an event that results in a new resource'}\n          </Trans>\n        </Switcher>\n      </TabController>\n      {tab ? CreateResourceModal : CreateEventOnExistResourceModal}\n    </EconomicEventManagerHOC>\n  );\n};\n\nexport const Switcher = styled('label')`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #666666;\n  cursor: pointer;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: relative;\n    cursor: pointer;\n    width: 60px;\n    height: 30px;\n    margin-right: 16px;\n    background-color: #ccc;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    box-shadow: 0 3px 22px -6px #c5bcbc;\n    border-radius: 34px;\n  }\n\n  .slider:before {\n    position: absolute;\n    border-radius: 50%;\n    content: '';\n    height: 30px;\n    width: 30px;\n    left: 30px;\n    bottom: 0;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n\n  input:checked + .slider {\n    background-color: #05244f;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n\n  input:checked + .slider:before {\n    transform: translateX(-30px);\n  }\n`;\n\nexport const TabController = styled(Flex)`\n  width: 100%;\n  justify-content: stretch;\n  align-items: stretch;\n  flex-grow: 1;\n  flex-direction: row;\n  border-bottom: 1px solid #05244f;\n`;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport React, { FC } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Box, Heading } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { FormikHook } from 'ui/@types/types';\nimport DropzoneArea from '../DropzoneModal';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport Input, { CustomAlert } from '../../elements/Input';\nimport { Actions, Container, CounterChars, Header } from 'ui/modules/Modal';\nimport { Hero, CollectionContainerForm, HeroInfo } from '../CreateCollectionPanel/style';\nimport * as Types from '../../../graphql/types.generated';\n\nexport type UpdateResourceVariables = {\n  name: string;\n  note?: string;\n  atLocation?: { id: string; value: string; label: string };\n  image: string | File | undefined | any;\n};\n\nexport type TUpdateResourcePanel = {\n  title: string;\n  done: any;\n  formik: FormikHook<UpdateResourceVariables>;\n  spatialThings?:\n    | Types.Maybe<\n        { __typename: 'SpatialThing' } & Pick<Types.SpatialThing, 'name' | 'id' | 'lat' | 'long'>\n      >[]\n    | null;\n};\n\nexport const UpdateResourcePanel: FC<TUpdateResourcePanel> = ({\n  title,\n  formik,\n  done,\n  spatialThings\n}) => {\n  const onIconFileSelected = React.useCallback(\n    (file: File) => formik.setValues({ ...formik.values, image: file }),\n    [formik]\n  );\n\n  const initialIconUrl = 'string' === typeof formik.values.image ? formik.values.image : '';\n  return (\n    <Container>\n      <form onSubmit={formik.handleSubmit}>\n        <Header>\n          <Heading m={2}>\n            <Trans>{title}</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <CollectionContainerForm>\n              <div className=\"d-flex d-flex-image\">\n                <Box sx={{ width: '140', height: '140' }} className=\"item_photo\">\n                  <DropzoneArea\n                    initialUrl={initialIconUrl}\n                    onFileSelect={onIconFileSelected}\n                    filePattern=\"image/*\"\n                  />\n                  <p />\n                  <FormLabel>Image URL</FormLabel>\n                  <Input\n                    type=\"text\"\n                    id=\"image\"\n                    name=\"image\"\n                    onChange={formik.handleChange}\n                    placeholder={i18nMark('Image')}\n                    value={\n                      typeof formik.values.image !== 'object'\n                        ? formik.values.image\n                        : formik.values.image.path\n                    }\n                  />\n                </Box>\n\n                <div className=\"item_info\">\n                  <CollectionContainerForm>\n                    <FormGroup>\n                      <FormLabel>{i18nMark('Note')}</FormLabel>\n                      <Input\n                        type=\"textarea\"\n                        id=\"note\"\n                        name=\"note\"\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Note')}\n                        value={formik.values.note}\n                      />\n                      <CounterChars>\n                        {formik.values.note ? 500 - formik.values.note.length : 500}\n                      </CounterChars>\n                    </FormGroup>\n                    {formik.errors.note && (\n                      <CustomAlert variant=\"negative\">{formik.errors.note}</CustomAlert>\n                    )}\n                  </CollectionContainerForm>\n                </div>\n              </div>\n            </CollectionContainerForm>\n          </HeroInfo>\n        </Hero>\n        <Actions>\n          <Button\n            variant=\"primary\"\n            isSubmitting={formik.isSubmitting}\n            isDisabled={formik.isSubmitting}\n            type=\"submit\"\n            style={{ marginLeft: '10px' }}\n          >\n            <Trans>Update</Trans>\n          </Button>\n          <Button variant=\"outline\" onClick={done}>\n            <Trans>Cancel</Trans>\n          </Button>\n        </Actions>\n      </form>\n      <ToastContainer />\n    </Container>\n  );\n};\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type UpdateEconomicResourceMutationVariables = {\n  id: Types.Scalars['ID'],\n  note?: Types.Maybe<Types.Scalars['String']>,\n  image?: Types.Maybe<Types.Scalars['URI']>\n};\n\n\nexport type UpdateEconomicResourceMutation = (\n  { __typename: 'RootMutationType' }\n  & { updateEconomicResource: Types.Maybe<(\n    { __typename: 'EconomicResourceResponse' }\n    & { economicResource: (\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id'>\n    ) }\n  )> }\n);\n\n\nexport const UpdateEconomicResourceDocument = gql`\n    mutation updateEconomicResource($id: ID!, $note: String, $image: URI) {\n  updateEconomicResource(resource: {id: $id, note: $note, image: $image}) {\n    economicResource {\n      id\n    }\n  }\n}\n    `;\nexport type UpdateEconomicResourceMutationFn = ApolloReactCommon.MutationFunction<UpdateEconomicResourceMutation, UpdateEconomicResourceMutationVariables>;\n\n/**\n * __useUpdateEconomicResourceMutation__\n *\n * To run a mutation, you first call `useUpdateEconomicResourceMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateEconomicResourceMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateEconomicResourceMutation, { data, loading, error }] = useUpdateEconomicResourceMutation({\n *   variables: {\n *      id: // value for 'id'\n *      note: // value for 'note'\n *      image: // value for 'image'\n *   },\n * });\n */\nexport function useUpdateEconomicResourceMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<UpdateEconomicResourceMutation, UpdateEconomicResourceMutationVariables>) {\n        return ApolloReactHooks.useMutation<UpdateEconomicResourceMutation, UpdateEconomicResourceMutationVariables>(UpdateEconomicResourceDocument, baseOptions);\n      }\nexport type UpdateEconomicResourceMutationHookResult = ReturnType<typeof useUpdateEconomicResourceMutation>;\nexport type UpdateEconomicResourceMutationResult = ApolloReactCommon.MutationResult<UpdateEconomicResourceMutation>;\nexport type UpdateEconomicResourceMutationOptions = ApolloReactCommon.BaseMutationOptions<UpdateEconomicResourceMutation, UpdateEconomicResourceMutationVariables>;\n\n\nexport interface UpdateEconomicResourceMutationOperation {\n  operationName: 'updateEconomicResource'\n  result: UpdateEconomicResourceMutation\n  variables: UpdateEconomicResourceMutationVariables\n  type: 'mutation'\n}\nexport const UpdateEconomicResourceMutationName:UpdateEconomicResourceMutationOperation['operationName'] = 'updateEconomicResource'\n\nexport const UpdateEconomicResourceMutationRefetch = (\n  variables:UpdateEconomicResourceMutationVariables, \n  context?:any\n)=>({\n  query:UpdateEconomicResourceDocument,\n  variables,\n  context\n})\n      \n","import { useMemo } from 'react';\nimport { useCallOrNotifyMustLogin } from '../../../HOC/lib/notifyMustLogin';\nimport { EconomicResourceQueryRefetch } from '../../../HOC/pages/resource/EconomicResource.generated';\nimport { useUpdateEconomicResourceMutation } from './useUpdateResource.generated';\n\nexport interface UpdateResource {\n  name: string;\n  note?: string;\n  action: string;\n  provider: string;\n  receiver: string;\n  hasUnit: string;\n  hasNumericalValue: number;\n  image: string | File | undefined;\n}\n\nexport const useUpdateResource = () => {\n  const [updateResourceMut, updateResourceMutStatus] = useUpdateEconomicResourceMutation();\n\n  const update = useCallOrNotifyMustLogin(\n    async ({ id, note, image }: { id: string; note?: string; image?: string }) => {\n      if (updateResourceMutStatus.loading) {\n        return;\n      }\n\n      return updateResourceMut({\n        variables: {\n          id,\n          note,\n          image\n        },\n        refetchQueries: [EconomicResourceQueryRefetch({ id: id })]\n      });\n    },\n    [updateResourceMutStatus, updateResourceMut]\n  );\n  return useMemo(() => {\n    return {\n      update\n    };\n  }, [update]);\n};\n","import { useFormik } from 'formik';\nimport React, { FC } from 'react';\nimport { Slide, toast } from 'react-toastify';\nimport {\n  UpdateResourcePanel,\n  TUpdateResourcePanel,\n  UpdateResourceVariables\n} from '../../../ui/modules/UpdateResourcePanel';\nimport * as Yup from 'yup';\nimport { TestUrlOrFile } from 'HOC/lib/formik-validations';\nimport { useUpdateResource } from '../../../fe/resource/update/useUpdateResource';\nimport { EconomicResource } from '../../pages/inventory/InventoryPage';\nimport * as GQL from '../EconomicEventManager/EconomicEventManager.generated';\n\nexport const validationSchema: Yup.ObjectSchema<UpdateResourceVariables> = Yup.object<\n  UpdateResourceVariables\n>({\n  name: Yup.string()\n    .min(2)\n    .max(60)\n    .required(),\n  note: Yup.string().max(500),\n  image: Yup.mixed<string | File>().test(...TestUrlOrFile)\n});\n\nexport interface Props {\n  done: () => void;\n  resource: EconomicResource | any;\n}\n\nexport const UpdateEconomicResourceHOC: FC<Props> = ({ done, resource, ...props }) => {\n  const { update } = useUpdateResource();\n\n  const SignupSchema = Yup.object().shape({\n    note: Yup.string().max(500, 'Too Long!')\n  });\n  const spatialThingsQ = GQL.useSpatialThingsPagesQuery();\n  const spatialThings = spatialThingsQ.data?.spatialThingsPages;\n\n  const formik = useFormik<any>({\n    initialValues: React.useMemo(() => {\n      let values = {\n        note: '',\n        image: '' || undefined\n      };\n      if (resource) {\n        values = {\n          //@ts-ignore\n          note: resource.note || '',\n          image: resource.image || undefined\n        };\n      }\n      return values;\n    }, [resource]),\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n\n    onSubmit: (values: UpdateResourceVariables) => {\n      return update({\n        id: resource.id,\n        note: values.note || '',\n        image: values.image || ''\n      })\n        .then((response: any) => {\n          if (!response.errors) {\n            toast.success(`Resource was updated`, {\n              position: 'top-right',\n              transition: Slide,\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true\n            });\n            done();\n          } else {\n            throw new Error(response.errors[0].message);\n          }\n        })\n        .catch((error: any) =>\n          toast.error(`Resource wasn't updated: ${error.message}`, {\n            position: 'top-right',\n            transition: Slide,\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true\n          })\n        );\n    }\n  });\n\n  const UpdateResourcePanelProps: TUpdateResourcePanel = {\n    ...props,\n    spatialThings: spatialThings?.edges,\n    title: `Update resource ${resource.name}`,\n    formik,\n    done\n  };\n\n  return <UpdateResourcePanel {...UpdateResourcePanelProps} />;\n};\n","import React, { FC, useReducer } from 'react';\nimport { ResourceItem } from 'ui/pages/resource';\nimport Modal from '../../../ui/modules/Modal';\nimport { useNotifyMustLogin } from '../../lib/notifyMustLogin';\nimport { CreateEconomicEventOnResourcePanelHOC } from '../../modules/EconomicEventOnResourcePanel/CreateEconomicEventOnResourcePanelHOC';\nimport { UpdateEconomicResourceHOC } from '../../modules/EconomicEventOnResourcePanel/UpdateEconomicResourceHOC';\nimport * as GQL from './EconomicResource.generated';\n\ntype ResourcePageProps = {\n  resourceId: string;\n};\n\nexport const EconomicResourceHOK: FC<ResourcePageProps> = ({ resourceId }) => {\n  const { data, loading, error } = GQL.useEconomicResourceQuery({\n    variables: { id: resourceId.trim() }\n  });\n  const resource = data?.economicResource;\n  const notifiedMustLogin = useNotifyMustLogin();\n  const [showCreateResource, toggleShowCreateResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const [showUpdateResource, toggleShowUpdateResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const PerformEventModal = showCreateResource ? (\n    <Modal closeModal={toggleShowCreateResource}>\n      <CreateEconomicEventOnResourcePanelHOC done={toggleShowCreateResource} resource={resource} />\n    </Modal>\n  ) : null;\n\n  const EditResourceModal = showUpdateResource ? (\n    <Modal closeModal={toggleShowUpdateResource}>\n      <UpdateEconomicResourceHOC done={toggleShowUpdateResource} resource={resource} />\n    </Modal>\n  ) : null;\n\n  const props: any = {\n    openEditModal: toggleShowCreateResource,\n    openUpdateResourceModal: toggleShowUpdateResource,\n    resource,\n    loading,\n    error\n  };\n\n  return (\n    <>\n      {EditResourceModal}\n      {PerformEventModal}\n      <ResourceItem {...props} />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { EconomicResourceHOK } from 'HOC/pages/resource/EconomicResourceHOK';\nimport { WithSidebarTemplate } from '../HOC/templates/WithSidebar/WithSidebar';\n\ninterface InventoryResourceItemRouteProps {\n  resourceId: string;\n}\n\nconst InventoryResourceItemRoute: FC<RouteComponentProps<InventoryResourceItemRouteProps>> = ({\n  match\n}) => {\n  const resourceId = match.params.resourceId;\n\n  const props = {\n    resourceId: resourceId\n  };\n\n  return (\n    <WithSidebarTemplate>\n      <EconomicResourceHOK {...props} />\n    </WithSidebarTemplate>\n  );\n};\n\nexport const InventoryResourceItemRouter: RouteProps = {\n  exact: false,\n  path: '/resource/:resourceId',\n  component: InventoryResourceItemRoute\n};\n","import React, { FC } from 'react';\nimport { Map, MapProps } from 'ui/elements/Map';\nimport { HomeBox, MainContainer, Wrapper, WrapperCont } from 'ui/elements/Layout';\n\nexport const Maps: FC<MapProps> = ({ center, zoom = 13, markers = [] }) => {\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            <Map center={center} zoom={zoom} markers={markers}></Map>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nexport default Maps;\n","import gql from 'graphql-tag';\nimport { RootQueryType } from 'graphql/types.generated';\n\nexport const proposedIntents = gql`\n  query communityMapPoints($communityId: [ID]!) {\n    proposalsFiltered(inScopeOf: $communityId) {\n      __typename\n      id\n      name\n      note\n      eligibleLocation {\n        lat\n        long\n        geom\n      }\n    }\n  }\n`;\n\nexport type ProposalsFilteredQuery = { __typename: 'RootQueryType' } & Pick<\n  RootQueryType,\n  'proposalsFiltered'\n>;\n\nexport type ProposalsFilteredQueryVariables = {\n  communityId: string;\n};\n","import React, { useEffect, useState } from 'react';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport Maps from 'ui/pages/maps';\nimport { useApolloClient } from 'react-apollo';\nimport {\n  ProposalsFilteredQuery,\n  ProposalsFilteredQueryVariables,\n  proposedIntents\n} from './MapPageQuery';\nimport { Maybe, Proposal, SpatialThing } from 'graphql/types.generated';\nimport { MarkerProps } from 'ui/elements/Map';\n\ntype ProposalWithGEO = Omit<Proposal, 'eligibleLocation'> & {\n  eligibleLocation: SpatialThing;\n};\n\nconst hasLatLong = (proposal: Maybe<Proposal>) => {\n  if (!proposal) {\n    return false;\n  }\n  const { eligibleLocation } = proposal;\n  return (\n    eligibleLocation && (eligibleLocation.geom || (eligibleLocation?.lat && eligibleLocation.long))\n  );\n};\n\nconst proposalsToMarkers = (proposals: Array<Maybe<Proposal>>) => {\n  return proposals\n    .filter(hasLatLong)\n    .map(proposal => proposal as ProposalWithGEO)\n    .map(proposal => {\n      const { lat, long, geom } = proposal.eligibleLocation;\n      const position =\n        lat && long ? { lat, lng: long } : { lat: geom.coordinates[0], lng: geom.coordinates[1] };\n      const marker: MarkerProps = {\n        position: position,\n        popup: proposal.name\n      };\n      return marker;\n    });\n};\n\ntype IMapPageHOC = {\n  communityId: string;\n};\n\nexport const MapPageHOC = ({ communityId }: IMapPageHOC) => {\n  const client = useApolloClient();\n  const [markers, setMarkers] = useState<Array<MarkerProps>>([]);\n\n  useEffect(() => {\n    const mapPoints = client.query<ProposalsFilteredQuery, ProposalsFilteredQueryVariables>({\n      query: proposedIntents,\n      variables: {\n        communityId\n      }\n    });\n\n    mapPoints.then(result => {\n      if (result.data) {\n        if (result.data.proposalsFiltered) {\n          setMarkers(proposalsToMarkers(result.data.proposalsFiltered));\n        }\n      }\n    });\n  }, [communityId, client]);\n\n  usePageTitle(t`Map`);\n\n  return <Maps markers={markers} zoom={13} center={{ lat: 41.396, lng: 2.192 }} />;\n};\n","import React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { locationHelper } from './lib/helper';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { MapPageHOC } from 'HOC/pages/map/MapPage';\n\ninterface MapsPageRouter {\n  communityId: string;\n}\nconst MapsPageRouter: FC<RouteComponentProps<MapsPageRouter>> = ({ match }) => {\n  if (match === null) {\n    return <NotFoundHOC />;\n  }\n\n  return (\n    <WithSidebarTemplate>\n      <MapPageHOC communityId={match.params.communityId} />\n    </WithSidebarTemplate>\n  );\n};\n\nexport const MapsPageRoute: RouteProps = {\n  exact: true,\n  path: '/communities/:communityId/map/',\n  component: MapsPageRouter\n};\n\nexport const mapLocation = locationHelper<undefined, undefined>(MapsPageRoute);\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport styled from 'ui/themes/styled';\nimport Button from 'ui/elements/Button';\nimport { Text, Box } from 'rebass/styled-components';\nimport { Input } from '@rebass/forms';\nimport { FormikHook } from 'ui/@types/types';\nimport Alert from 'ui/elements/Alert';\nimport { AlertWrapper } from 'ui/modules/Modal';\nimport { i18nMark } from '@lingui/react';\nimport LogoContainer from 'ui/elements/Logo';\nimport { Link } from 'react-router-dom';\n\nexport interface ResetPasswordFormValues {\n  email: string;\n}\n\nexport interface Props {\n  formik: FormikHook<ResetPasswordFormValues>;\n  isSubmitted: boolean;\n}\n\nlet tt = {\n  placeholders: {\n    email: i18nMark('Enter your email')\n  }\n};\n\nexport const ResetPassword: React.FC<Props> = ({ formik, isSubmitted }) => {\n  return (\n    <>\n      <Container>\n        <LoginWrapper>\n          <LogoContainer />\n          {isSubmitted ? (\n            <Wrapper>\n              <VerifiedBox variant=\"text\">\n                <Trans>\n                  If your email is linked to an account in our database, we have sent you an email\n                  with which you can reset your password. It may take a few minutes to arrive\n                  depending on your mail provider.\n                </Trans>\n              </VerifiedBox>\n              <ButtonLink to=\"/login\">\n                <Trans>Login</Trans>\n              </ButtonLink>\n            </Wrapper>\n          ) : (\n            <FormWrapper>\n              <Input\n                placeholder={tt.placeholders.email}\n                name=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n              />\n              {formik.errors.email && (\n                <AlertWrapper>\n                  <Alert variant=\"negative\">{formik.errors.email}</Alert>\n                </AlertWrapper>\n              )}\n              <Button\n                variant=\"primary\"\n                isSubmitting={formik.isSubmitting}\n                isDisabled={formik.isSubmitting}\n                type=\"submit\"\n                onClick={formik.submitForm}\n              >\n                <Trans>Reset the password</Trans>\n              </Button>\n            </FormWrapper>\n          )}\n        </LoginWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default ResetPassword;\n\nconst ButtonLink = styled(Link)`\n  background: ${props => props.theme.colors.primary};\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 600;\n  color: ${props => props.theme.colors.lighter};\n  margin-top: 16px;\n  margin: 0 auto;\n  display: block;\n  text-align: center;\n  margin-top: 16px;\n`;\n\nconst Wrapper = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  padding: 16px;\n  max-width: 400px;\n`;\n\nconst VerifiedBox = styled(Text)``;\n\nconst LoginWrapper = styled.div`\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: white;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 900px;\n  margin-top: 60px;\n  padding: 16px;\n  padding-bottom: 50px;\n  & button {\n    margin-top: 16px;\n    width: 100%;\n    color: #fff !important;\n    text-transform: uppercase;\n    &:hover {\n      background: #d67218 !important;\n    }\n  }\n`;\n\nconst FormWrapper = styled.form`\n  width: 432px;\n`;\n","import { useFormik } from 'formik';\nimport React, { FC } from 'react';\nimport ResetPasswordRequestPage, { ResetPasswordFormValues } from 'ui/pages/resetPassword';\nimport * as Yup from 'yup';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { useAnon } from 'fe/session/useAnon';\n\nexport const validationSchema: Yup.ObjectSchema<ResetPasswordFormValues> = Yup.object<\n  ResetPasswordFormValues\n>({\n  email: Yup.string()\n    .max(50)\n    .required()\n});\nconst initialValues: ResetPasswordFormValues = {\n  email: ''\n};\nexport interface Props {}\n\nconst resetPasswordPageTitle = t`Reset Password`;\n\nexport const ResetPasswordPageHOC: FC<Props> = () => {\n  usePageTitle(resetPasswordPageTitle);\n  const { resetPwdRequest } = useAnon();\n  const formik = useFormik<ResetPasswordFormValues>({\n    onSubmit: ({ email }) => resetPwdRequest(email),\n    initialValues,\n    validationSchema\n  });\n  return (\n    <ResetPasswordRequestPage\n      formik={formik}\n      isSubmitted={formik.submitCount > 0 ? true : false} // https://github.com/jaredpalmer/formik/issues/213#issuecomment-619593592 // Double-Check if correct\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\nimport { ResetPasswordPageHOC } from 'HOC/pages/resetPasswordRequest/resetPasswordRequestPage';\nimport { RedirectAuthenticatedToHome } from './wrappers/RedirectBySession';\n\ninterface ResetPasswordPageRouter {}\nconst ResetPasswordPageRouter: FC<RouteComponentProps<\n  ResetPasswordPageRouter\n>> = ({ match }) => {\n  return (\n    <RedirectAuthenticatedToHome>\n      <GuestTemplate withoutHeader>\n        <ResetPasswordPageHOC />\n      </GuestTemplate>\n    </RedirectAuthenticatedToHome>\n  );\n};\n\nexport const ResetPasswordPageRoute: RouteProps = {\n  exact: true,\n  path: '/reset',\n  component: ResetPasswordPageRouter\n};\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { Input, Textarea } from '@rebass/forms';\nimport * as React from 'react';\nimport { Droplet, Flag, Mail, Monitor, Settings as Sett, Sliders } from 'react-feather';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\nimport Button from 'ui/elements/Button';\nimport { HomeBox, MainContainer, Wrapper, WrapperCont } from 'ui/elements/Layout';\nimport DropzoneArea from 'ui/modules/DropzoneModal';\nimport { Actions, ContainerForm } from 'ui/modules/Modal';\nimport styled from 'ui/themes/styled';\nimport { ReactElement } from 'react';\nimport { Profile } from '../../../graphql/types.generated';\n\nconst tt = {\n  placeholders: {\n    name: i18nMark('Display Name'),\n    displayName: i18nMark('User Name'),\n    summary: i18nMark('Please tell us a little bit about yourself...')\n  }\n};\nexport enum Status {\n  Loading,\n  Loaded\n}\n\nexport interface SettingsLoading {\n  status: Status.Loading;\n}\n\nexport interface Props {\n  status?: Status.Loaded;\n  formik: FormikHook<TEditProfile>;\n  sectionPaths: {\n    preferences: string;\n    general: string;\n  };\n  displayUsername: string;\n  isAdmin: boolean;\n  Preferences: ReactElement;\n  toggleUpdatePasswordModal: () => void;\n  userProfile:\n    | ({ __typename: 'Profile' } & Pick<Profile, 'summary' | 'image' | 'icon' | 'name'>)\n    | null\n    | undefined;\n}\n\nexport interface TEditProfile {\n  name: string;\n  displayName: string;\n  summary: string;\n  icon: string | File | undefined;\n  image: string | File | undefined;\n}\n\nexport interface AddEmail {\n  email: string;\n}\n\nexport interface EditInstance {\n  inviteOnly: boolean;\n}\n\nexport const Settings: React.FC<Props> = ({\n  formik,\n  Preferences,\n  displayUsername,\n  isAdmin,\n  sectionPaths,\n  toggleUpdatePasswordModal,\n  userProfile\n}) => {\n  const onIconFileSelected = React.useCallback(\n    (file: File) => formik.setValues({ ...formik.values, icon: file }),\n    [formik]\n  );\n\n  const initialIconUrl =\n    'string' === typeof formik.values.icon\n      ? `${process.env.REACT_APP_GRAPHQL_IMG_LINK}${formik.values.icon}`\n      : '';\n  const onImageFileSelected = React.useCallback(\n    (file: File) => formik.setValues({ ...formik.values, image: file }),\n    [formik]\n  );\n  const initialImageUrl =\n    'string' === typeof formik.values.image\n      ? `${process.env.REACT_APP_GRAPHQL_IMG_LINK}${formik.values.image}`\n      : '';\n\n  return (\n    <MainContainer>\n      <Sidebar sectionPaths={sectionPaths} isAdmin={isAdmin} />\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            <SettingsWrapper>\n              <Switch>\n                <Route path={sectionPaths.preferences}>{Preferences}</Route>\n                <Route path={sectionPaths.general}>\n                  <ProfileBox p={1} pb={2}>\n                    <Hero>\n                      <Flex>\n                        <Bg>\n                          <DropzoneArea\n                            initialUrl={initialImageUrl}\n                            filePattern=\"image/*\"\n                            onFileSelect={onImageFileSelected}\n                          />\n                        </Bg>\n                      </Flex>\n                      <FlexProfile>\n                        <WrapperHero>\n                          <Img>\n                            <DropzoneArea\n                              initialUrl={initialIconUrl}\n                              filePattern=\"image/*\"\n                              onFileSelect={onIconFileSelected}\n                            />\n                          </Img>\n                        </WrapperHero>\n                      </FlexProfile>\n                      <HeroInfo mt={2} ml={3} mr={3}>\n                        <CollectionContainerForm>\n                          <h2>{formik.values.name}</h2>\n                        </CollectionContainerForm>\n                        <CollectionContainerForm>\n                          <Input\n                            placeholder={tt.placeholders.displayName}\n                            disabled={formik.isSubmitting}\n                            name=\"displayName\"\n                            value={formik.values.displayName}\n                            onChange={formik.handleChange}\n                          />\n                        </CollectionContainerForm>\n                        <Username mt={1} p={2}>\n                          {displayUsername}\n                        </Username>\n                        <CollectionContainerForm>\n                          <Textarea\n                            placeholder={tt.placeholders.summary}\n                            disabled={formik.isSubmitting}\n                            name=\"summary\"\n                            value={formik.values.summary}\n                            onChange={formik.handleChange}\n                          />\n                        </CollectionContainerForm>\n                      </HeroInfo>\n                    </Hero>\n                    <ActionsWrapper mt={3} mr={3} sx={{ height: 'inherit !important' }}>\n                      <Button variant=\"primary\" onClick={toggleUpdatePasswordModal}>\n                        Update password\n                      </Button>\n                      <Button\n                        variant=\"primary\"\n                        isSubmitting={formik.isSubmitting}\n                        isDisabled={formik.isSubmitting}\n                        type=\"submit\"\n                        style={{ marginLeft: '10px' }}\n                        onClick={formik.submitForm}\n                      >\n                        <Trans>Save</Trans>\n                      </Button>\n                    </ActionsWrapper>\n                  </ProfileBox>\n                </Route>\n              </Switch>\n            </SettingsWrapper>\n          </Wrapper>\n        </WrapperCont>\n        <RepoLink variant=\"text\" my={3} mt={2}>\n          <a\n            href=\"https://gitlab.com/moodlenet/meta/-/issues\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Trans>Want to report a bug?</Trans>\n          </a>\n        </RepoLink>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nconst SettingsWrapper = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n`;\n\nconst ActionsWrapper = styled(Actions)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  padding: 18px 18px 12px;\n`;\n\nconst RepoLink = styled(Text)`\n  text-align: right;\n  width: 100%;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.dark};\n    &:hover {\n      color: ${props => props.theme.colors.darkest};\n    }\n  }\n`;\n\nconst Sidebar: React.FC<{ sectionPaths: Props['sectionPaths']; isAdmin: boolean }> = ({\n  sectionPaths,\n  isAdmin\n}) => {\n  return (\n    <WrapperPanel mr={2}>\n      <Panel>\n        <Nav>\n          <NavItem p={3}>\n            <NavLink exact to={sectionPaths.general}>\n              <Flex alignItems=\"center\" sx={{ textTransform: 'capitalize', fontSize: '14px' }}>\n                <Icon className=\"icon\" mr={1}>\n                  <Sett size={20} />\n                </Icon>\n                <Name>\n                  <Trans>General information</Trans>\n                </Name>\n              </Flex>\n            </NavLink>\n          </NavItem>\n          <NavItem p={3}>\n            <NavLink to={sectionPaths.preferences}>\n              <Flex alignItems=\"center\" sx={{ textTransform: 'capitalize', fontSize: '14px' }}>\n                <Icon className=\"icon\" mr={1}>\n                  <Sliders size={20} />\n                </Icon>\n                <Name>\n                  <Trans>Preferences</Trans>\n                </Name>\n              </Flex>\n            </NavLink>\n          </NavItem>\n          {isAdmin ? (\n            <>\n              <SectionTitle p={3}>\n                <Flex\n                  alignItems=\"center\"\n                  p={3}\n                  sx={{ textTransform: 'capitalize', fontSize: '14px' }}\n                >\n                  <Text variant=\"suptitle\">Admin</Text>\n                </Flex>\n              </SectionTitle>\n              <NavItem p={3}>\n                <Flex alignItems=\"center\" sx={{ textTransform: 'capitalize', fontSize: '14px' }}>\n                  <Icon className=\"icon\" mr={1}>\n                    <Droplet size={20} />\n                  </Icon>\n                  <Name>\n                    <Trans>Instance</Trans>\n                  </Name>\n                </Flex>\n              </NavItem>\n              <NavItem p={3}>\n                <Flex alignItems=\"center\" sx={{ textTransform: 'capitalize', fontSize: '14px' }}>\n                  <Icon className=\"icon\" mr={1}>\n                    <Mail size={20} />\n                  </Icon>\n                  <Name>\n                    <Trans>Invites</Trans>\n                  </Name>\n                </Flex>\n              </NavItem>\n              <NavItem p={3}>\n                <Flex alignItems=\"center\" sx={{ textTransform: 'capitalize', fontSize: '14px' }}>\n                  <Icon className=\"icon\" mr={1}>\n                    <Flag size={20} />\n                  </Icon>\n                  <Name>\n                    <Trans>Flags</Trans>\n                  </Name>\n                </Flex>\n              </NavItem>\n              <NavItem p={3}>\n                <Flex alignItems=\"center\" sx={{ textTransform: 'capitalize', fontSize: '14px' }}>\n                  <Icon className=\"icon\" mr={1}>\n                    <Monitor size={20} />\n                  </Icon>\n                  <Name>\n                    <Trans>Moderation log</Trans>\n                  </Name>\n                </Flex>\n              </NavItem>\n            </>\n          ) : null}\n        </Nav>\n      </Panel>\n    </WrapperPanel>\n  );\n};\n\nconst Name = styled(Text)`\n  ${media.lessThan('medium')`\ndisplay: none;\n`};\n`;\n\nconst SectionTitle = styled(Flex)`\n  border-top: 4px solid ${props => props.theme.colors.lighter};\n  border-bottom: 1px solid ${props => props.theme.colors.lighter};\n`;\n\nconst CollectionContainerForm = styled(ContainerForm)`\n  input {\n    background: #fbfbfb;\n    color: ${props => props.theme.colors.mediumdark};\n    border: 0;\n    font-weight: 700;\n  }\n\n  textarea {\n    background: #fbfbfb;\n    border-radius: 2px;\n    border: 0;\n    height: 120px;\n    resize: none;\n  }\n`;\n\nconst Img = styled.div`\n  width: 120px;\n  height: 120px;\n  border-radius: 6px;\n  background: ${props => props.theme.colors.light};\n  border: 3px solid ${props => props.theme.colors.light};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 16px;\n`;\n\nconst Bg = styled(Box)`\n  height: 250px;\n  border-radius: 4px;\n  width: 100%;\n  display: inline-block;\n  .thumb {\n    height: 100%;\n  }\n`;\nconst FlexProfile = styled(Flex)`\n  justify-content: space-between;\n  ${media.lessThan('860px')`\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`};\n`;\n\nconst ProfileBox = styled(Box)``;\n\nconst Username = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n`;\n\nconst WrapperHero = styled.div`\n  padding: 24px;\n  padding-top: 0;\n  z-index: 9999;\n  position: relative;\n  margin-top: -60px;\n  padding-bottom: 0;\n`;\n\nconst Hero = styled.div`\n  width: 100%;\n  position: relative;\n  border-radius: 6px;\n  & p {\n    color: ${props => props.theme.colors.mediumdark};\n    padding: 0 24px;\n    margin-left: 120px;\n    margin: 0;\n    margin-left: 136px;\n    margin-top: -40px;\n    line-height: 26px;\n    padding-bottom: 16px;\n  }\n`;\n\nconst HeroInfo = styled(Box)`\n  & button {\n    span {\n      vertical-align: sub;\n      display: inline-block;\n      height: 30px;\n      margin-right: 4px;\n    }\n  }\n`;\n\nconst Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  border-radius: 40px;\n  display: flex;\n  align-items: center;\n  svg {\n    stroke: ${props => props.theme.colors.medium};\n    width: 40px;\n  }\n`;\n\nexport const WrapperPanel = styled(Flex)`\n  width: 350px;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  min-height: 0px;\n  min-width: 0px;\n  padding: 0px;\n  position: relative;\n  z-index: 0;\n  font-family: ${props => props.theme.fontFamily};\n  &.extra {\n    width: 100%;\n  }\n  ${media.lessThan('1095px')`\n  width: 290px;\n`};\n  ${media.lessThan('medium')`\n  width: 80px;\n`};\n`;\n\nexport const Panel = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0px;\n  min-height: 0px;\n  min-width: 0px;\n  padding: 0px;\n  position: relative;\n  z-index: 0;\n  margin-bottom: 8px !important;\n`;\n\nexport const PanelTitle = styled(Text)`\n  text-transform: uppercase;\n  border-bottom: 4px solid ${props => props.theme.colors.lighter};\n  padding: 16px;\n`;\n\nexport const Nav = styled(Box)``;\n\nexport const NavItem = styled(Text)`\ncolor: ${props => props.theme.colors.mediumdark}\nborder-bottom: 1px solid ${props => props.theme.colors.lighter};\na {\n  color: ${props => props.theme.colors.mediumdark}\n  text-decoration: none;\n  font-weight: 700;\n  &.active {\n      color: ${props => props.theme.colors.primary};\n    .icon {\n        background: ${props => props.theme.colors.lighter};\n        svg {\n          stroke: ${props => props.theme.colors.primary};\n        }\n    }\n    \n  }\n}\n&:hover {\n    .icon {\n        background: ${props => props.theme.colors.lighter};\n        svg {\n          stroke: ${props => props.theme.colors.primary};\n        }\n    }\n  }\n  `;\n","import { useMe } from 'fe/session/useMe';\nimport { useFormik } from 'formik';\nimport React, { FC, useMemo, useState } from 'react';\nimport {\n  TEditProfile,\n  Props as SettingsUIProps,\n  Settings as SettingsPageUI\n} from 'ui/pages/settings';\nimport { PreferencesSettingsSection } from './preferences/PreferencesSettingsSection';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { settingsLocation } from 'routes/SettingsPageRoute';\nimport { UpdatePasswordPanelHOK } from '../../modules/UpdatePasswordPanel/UpdatePasswordPanelHOK';\nimport { useUpdateUser } from '../user/update/useUpdateUser';\nimport { useNotifyMustLogin } from '../../lib/notifyMustLogin';\nimport { useAnon } from '../../../fe/session/useAnon';\n\nexport enum SettingsPageTab {\n  Preferences,\n  Invites,\n  Instance,\n  Flags,\n  ModerationLogs,\n  General\n}\n\nexport interface SettingsPage {\n  tab?: SettingsPageTab;\n  basePath?: string;\n}\n\nconst settingsPreferencesPageTitle = t`Settings - Preferences`;\nconst settingsGeneralPageTitle = t`Settings - General`;\n\nexport const SettingsPage: FC<SettingsPage> = ({ basePath, tab }) => {\n  const settingsPageTitle =\n    tab === SettingsPageTab.Preferences ? settingsPreferencesPageTitle : settingsGeneralPageTitle;\n  usePageTitle(settingsPageTitle);\n  const { me } = useMe();\n  const { update } = useUpdateUser();\n  const { logout } = useAnon();\n  const notifyNotLogged = useNotifyMustLogin();\n  notifyNotLogged() && logout();\n\n  let userData = useMemo(() => me?.users && me?.users[0], [me]);\n  const initialValues = useMemo<TEditProfile>(\n    () => ({\n      icon: userData?.profile?.icon || '',\n      image: userData?.profile?.image || '',\n      displayName: userData?.profile?.name || '',\n      name: userData?.character?.username || '',\n      summary: userData?.profile?.summary || ''\n    }),\n    [userData]\n  );\n\n  const updateProfileFormik = useFormik<TEditProfile>({\n    initialValues,\n    enableReinitialize: true,\n    onSubmit: ({ displayName, summary, icon, image, name }) =>\n      update({\n        userName: displayName,\n        summary,\n        icon,\n        image,\n        name\n      }).then(resp => {\n        userData = resp?.data?.updateUser?.user;\n      })\n  });\n\n  const [isOpen, steIsOpen] = useState(false);\n  const toggleUpdatePasswordModal = () => steIsOpen(prev => !prev);\n\n  const settingsPageProps = useMemo<SettingsUIProps | null>(() => {\n    const props: SettingsUIProps = {\n      toggleUpdatePasswordModal,\n      sectionPaths: {\n        preferences: settingsLocation.getPath({ tab: 'preferences' }, undefined),\n        general: settingsLocation.getPath({ tab: undefined }, undefined)\n      },\n      displayUsername: '',\n      isAdmin: false,\n      formik: updateProfileFormik,\n      Preferences: <PreferencesSettingsSection />,\n      userProfile: userData?.profile\n    };\n    return props;\n  }, [updateProfileFormik, userData]);\n\n  return (\n    settingsPageProps && (\n      <>\n        <SettingsPageUI {...settingsPageProps} />\n        <UpdatePasswordPanelHOK isOpen={isOpen} cancel={toggleUpdatePasswordModal} />\n      </>\n    )\n  );\n};\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { Box } from 'rebass/styled-components';\nimport { FormikHook } from 'ui/@types/types';\nimport Button from 'ui/elements/Button';\nimport { ActionsSimple, ContainerForm, Row } from 'ui/modules/Modal';\n// import { ArrowLeft, ArrowRight } from 'react-feather';\n// import media from 'styled-media-query';\n\n// const Header = styled(Flex)`\n//   border-bottom: ${props => props.theme.colors.border};\n//   svg {\n//     cursor: pointer;\n//   }\n//   ${media.greaterThan('1005px')`\n// display: none;\n// `};\n// `;\n\n// const TabHeading = styled(Heading)`\n//   margin-left: 8px;\n//   .--rtl & {\n//     margin-right: 8px;\n//     margin-left: 0px;\n//   }\n// `;\n\nexport interface EditPreferences {\n  moodleWebsite: string;\n}\n\nexport interface Props extends LanguageSelectProps {\n  formik: FormikHook<EditPreferences>;\n}\n\ntype LanguageSelectProps = {\n  current: { value: string; label: string };\n  locales: { value: string; label: string }[];\n  setLocale(code: string): unknown;\n};\n\nexport const LanguageSelect: React.FC<LanguageSelectProps> = props => {\n  return (\n    <Select\n      options={props.locales as any}\n      defaultValue={props.current}\n      onChange={selectedCode => {\n        const selection = Array.isArray(selectedCode) ? selectedCode[0] : selectedCode;\n        if (!selection) {\n          return;\n        }\n        props.setLocale(selection.value);\n      }}\n    />\n  );\n};\nconst Preferences: React.FC<Props> = props => (\n  <Box>\n    <Row>\n      <ContainerForm>\n        <label>\n          <Trans>Select language</Trans>\n        </label>\n        <LanguageSelect {...props} />\n        <ActionsSimple sx={{ height: 'inherit !important' }}>\n          <Button\n            variant=\"primary\"\n            isSubmitting={props.formik.isSubmitting}\n            isDisabled={props.formik.isSubmitting}\n            type=\"submit\"\n            style={{ marginLeft: '10px' }}\n            onClick={props.formik.submitForm}\n          >\n            <Trans>Save</Trans>\n          </Button>\n        </ActionsSimple>\n      </ContainerForm>\n    </Row>\n  </Box>\n);\n\nexport default Preferences;\n","import React, { FC, useCallback, useMemo } from 'react';\nimport Preferences, { EditPreferences } from 'ui/pages/settings/preferences';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { DOMAIN_REGEX } from 'mn-constants';\nimport { useMe } from 'fe/session/useMe';\nimport { LocaleContext } from 'context/global/localizationCtx';\n\nconst validationSchema = Yup.object<EditPreferences>({\n  moodleWebsite: Yup.string().matches(DOMAIN_REGEX)\n});\n\nexport const PreferencesSettingsSection: FC = () => {\n  const { available, current, set } = React.useContext(LocaleContext);\n\n  const { me } = useMe();\n  const updateProfile = (data: any) => {\n    console.log(data);\n  };\n  const profile = me?.user;\n\n  console.log(profile);\n  const formik = useFormik<EditPreferences>({\n    enableReinitialize: true,\n    // @ts-ignore\n    initialValues: { moodleWebsite: profile?.extraInfo?.LMS?.site || '' },\n    validationSchema,\n    onSubmit: ({ moodleWebsite }) => {\n      return updateProfile({\n        profile: {\n          extraInfo: {\n            LMS: {\n              site: moodleWebsite\n            }\n          }\n        }\n      });\n    }\n  });\n\n  const localesOptions = useMemo(\n    () =>\n      available.map(locale => ({\n        value: locale.code,\n        label: locale.desc\n      })),\n    [available]\n  );\n\n  const currentOption = useMemo(\n    () => localesOptions.find(option => option.value === current.code) || localesOptions[0],\n    [current.code, localesOptions]\n  );\n\n  const setLocale = useCallback(\n    (code: string) => {\n      const locale = available.find(locale => locale.code === code);\n      locale && set(locale);\n    },\n    [available, set]\n  );\n  return (\n    <Preferences\n      formik={formik}\n      current={currentOption}\n      locales={localesOptions}\n      setLocale={setLocale}\n    />\n  );\n};\n","import React from 'react';\nimport { TUpdatePasswordPanel } from 'HOC/modules/UpdatePasswordPanel/UpdatePasswordPanelHOK';\nimport Modal, { Actions, AlertWrapper, Container, Header } from '../Modal';\nimport { Heading } from 'rebass/styled-components';\nimport { Trans } from '@lingui/macro';\nimport { CollectionContainerForm, Hero, HeroInfo } from '../CreateCollectionPanel/style';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport { i18nMark } from '@lingui/react';\nimport Input, { CustomAlert } from '../../elements/Input';\nimport Button from '../../elements/Button';\nimport { ToastContainer } from 'react-toastify';\n\nexport const UpdatePasswordPanelUI: React.FC<TUpdatePasswordPanel> = ({\n  formik,\n  isOpen,\n  cancel\n}) => {\n  return isOpen ? (\n    <Modal closeModal={cancel}>\n      <Container>\n        <form onSubmit={formik.handleSubmit}>\n          <Header>\n            <Heading m={2}>\n              <Trans>Update Password</Trans>\n            </Heading>\n          </Header>\n\n          <Hero>\n            <HeroInfo>\n              <CollectionContainerForm>\n                <FormGroup>\n                  <FormLabel>{i18nMark('Old Password')}</FormLabel>\n                  <Input\n                    type=\"password\"\n                    id=\"oldPassword\"\n                    name=\"oldPassword\"\n                    disabled={formik.isSubmitting}\n                    onChange={formik.handleChange}\n                    hint={{ class: 'error', value: '' }}\n                    placeholder={i18nMark('Input your old password')}\n                    value={formik.values.oldPassword}\n                  />\n                </FormGroup>\n                {formik.touched && formik.errors.oldPassword && (\n                  <AlertWrapper>\n                    <CustomAlert variant=\"negative\">{formik.errors.oldPassword}</CustomAlert>\n                  </AlertWrapper>\n                )}\n              </CollectionContainerForm>\n              <CollectionContainerForm>\n                <FormGroup>\n                  <FormLabel>{i18nMark('New password')}</FormLabel>\n                  <Input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    disabled={formik.isSubmitting}\n                    onChange={formik.handleChange}\n                    hint={{ class: 'error', value: '' }}\n                    placeholder={i18nMark('Input your new password')}\n                    value={formik.values.password}\n                  />\n                </FormGroup>\n                {formik.errors.password && (\n                  <AlertWrapper>\n                    <CustomAlert variant=\"negative\">{formik.errors.password}</CustomAlert>\n                  </AlertWrapper>\n                )}\n              </CollectionContainerForm>\n              <CollectionContainerForm>\n                <FormGroup>\n                  <FormLabel>{i18nMark('Confirm password')}</FormLabel>\n                  <Input\n                    type=\"password\"\n                    id=\"passwordConfirm\"\n                    name=\"passwordConfirm\"\n                    disabled={formik.isSubmitting}\n                    onChange={formik.handleChange}\n                    hint={{ class: 'error', value: '' }}\n                    placeholder={i18nMark('Confirm your new password')}\n                    value={formik.values.passwordConfirm}\n                  />\n                </FormGroup>\n                {formik.errors.passwordConfirm && (\n                  <AlertWrapper>\n                    <CustomAlert variant=\"negative\">{formik.errors.passwordConfirm}</CustomAlert>\n                  </AlertWrapper>\n                )}\n              </CollectionContainerForm>\n            </HeroInfo>\n          </Hero>\n          <Actions>\n            <Button\n              variant=\"primary\"\n              isSubmitting={formik.isSubmitting}\n              isDisabled={formik.isSubmitting}\n              type=\"submit\"\n              style={{ marginLeft: '10px' }}\n            >\n              <Trans>Save</Trans>\n            </Button>\n            <Button variant=\"outline\" onClick={cancel}>\n              <Trans>Cancel</Trans>\n            </Button>\n          </Actions>\n        </form>\n        <ToastContainer />\n      </Container>\n    </Modal>\n  ) : null;\n};\n","import { useFormik } from 'formik';\nimport React, { useCallback, useMemo } from 'react';\nimport * as Yup from 'yup';\nimport { useAnon } from 'fe/session/useAnon';\nimport { FormikHook } from 'ui/@types/types';\nimport { UpdatePasswordPanelUI } from 'ui/modules/UpdatePasswordPanel/UpdatePasswordPanelUI';\nimport { notify } from '../../../fe/lib/graphql/ctx';\n\nexport type TUpdatePasswordPanelHOK = {\n  isOpen: boolean;\n  cancel: () => void;\n};\nexport type TInitialValues = { oldPassword: string; password: string; passwordConfirm: string };\nexport type TUpdatePasswordPanel = {\n  formik: FormikHook<TInitialValues>;\n  isOpen: boolean;\n  cancel: () => void;\n};\n\nconst initialValues = { oldPassword: '', password: '', passwordConfirm: '' };\nexport const UpdatePasswordPanelHOK: React.FC<TUpdatePasswordPanelHOK> = ({ isOpen, cancel }) => {\n  const { changePwdRequest } = useAnon();\n  const validationSchema = Yup.object().shape({\n    oldPassword: Yup.string().required('Required'),\n    password: Yup.string()\n      .min(10)\n      .max(50)\n      .required('Password is required'),\n    passwordConfirm: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Password confirm is required')\n  });\n\n  const formik = useFormik<TInitialValues>({\n    onSubmit: async ({ oldPassword, password, passwordConfirm }) => {\n      const response = await changePwdRequest(oldPassword, password, passwordConfirm);\n      const errorMsg = response?.errors?.map(_ => _.message).join('\\n');\n      errorMsg\n        ? notify(errorMsg, { type: 'error' })\n        : notify('Password was changed successful!', { type: 'success' }) && onCancel();\n    },\n    initialValues,\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema\n  });\n\n  const onCancel = useCallback(() => {\n    cancel();\n    formik.setValues({ ...initialValues });\n  }, [cancel, formik]);\n\n  const updatePasswordPaneProps = useMemo<TUpdatePasswordPanel>(() => {\n    return {\n      formik,\n      isOpen,\n      cancel: onCancel\n    };\n  }, [formik, isOpen, onCancel]);\n\n  return <UpdatePasswordPanelUI {...updatePasswordPaneProps} />;\n};\n","import { useMemo } from 'react';\nimport { useUpdateUserMutation } from '../UserPage.generated';\nimport { useCallOrNotifyMustLogin } from '../../../lib/notifyMustLogin';\nimport { notify } from '../../../../fe/lib/graphql/ctx';\n\nexport interface TUpdateUser {\n  name: string;\n  userName: string;\n  summary: string;\n  icon: string | File | undefined;\n  image: string | File | undefined;\n}\n\nexport const useUpdateUser = () => {\n  const [updateUserQ, updateStatus] = useUpdateUserMutation();\n  const update = useCallOrNotifyMustLogin(\n    async ({ userName, summary, icon, image }: TUpdateUser) => {\n      if (updateStatus.loading) {\n        return;\n      }\n      const preparedData = new FormData();\n      const url =\n        process.env.REACT_APP_GRAPHQL_ENDPOINT || 'https://reflow-test.dyne.org/api/graphql';\n      const token = JSON.parse(localStorage.getItem('APOLLO#AUTH_TOKEN') || '');\n\n      preparedData.append(\n        'query',\n        `\n                mutation updateUser($userName: String, $summary: String, $icon: Upload, $image: Upload) {\n                    updateUser(\n                        images: {\n                            icon: $icon\n                            image: $image\n                        }\n                        profile: {\n                            summary: $summary\n                            name: $userName\n                        }\n                      ){\n                        user {\n                            profile {\n                                name\n                                summary\n                                icon\n                                image\n                            }\n                        }\n                    }\n            }`\n      );\n      const variables: {\n        userName: string;\n        summary: string;\n        icon?: Blob | string;\n        image?: Blob | string;\n      } = { userName, summary };\n      if (icon && typeof icon !== 'string') {\n        const fileExe = icon.name.split('.')[1];\n        if (icon.size > 1000000) {\n          notify('Icon size more then 1Mb', { type: 'error' });\n          return;\n        }\n        if (!['jpg', 'png', 'jpeg'].includes(fileExe)) {\n          notify('Wrong file format, select \"jpg\", \"png\", \"jpeg\"', { type: 'error' });\n          return;\n        }\n        variables.icon = 'icon';\n        preparedData.append('icon', icon);\n      }\n      if (image && typeof image !== 'string') {\n        const fileExe = image.name.split('.')[1];\n        if (image.size > 1000000) {\n          notify('Image size more then 1Mb', { type: 'error' });\n          return;\n        }\n        if (!['jpg', 'png', 'jpeg'].includes(fileExe)) {\n          notify('Wrong file format, select \"jpg\", \"png\", \"jpeg\"', { type: 'error' });\n          return;\n        }\n        variables.image = 'image';\n        preparedData.append('image', image);\n      }\n      preparedData.append('variables', JSON.stringify(variables));\n\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          authorization: `Bearer ${token}`\n        },\n        body: preparedData\n      })\n        .then(resp => resp.json())\n        .then(resp => {\n          if (typeof resp === 'string' && resp.includes('errors')) {\n            const message = JSON.parse(resp).errors[0].detail;\n\n            throw new Error(message);\n          }\n          const message = 'Update Successfully!';\n          notify(message, { type: 'success' });\n\n          return resp;\n        })\n        .catch(error => {\n          notify(error.message, { type: 'error' });\n        });\n    },\n    [updateStatus, updateUserQ]\n  );\n  return useMemo(() => {\n    return {\n      update,\n      updateStatus\n    };\n  }, [update, updateStatus]);\n};\n","import React, { ReactElement } from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport media from 'styled-media-query';\nimport { Burger, Menu } from 'ui/modules/Burger';\nimport { useHistory } from 'react-router-dom';\nimport { ChevronLeft } from 'react-feather';\nimport Avatar from 'ui/elements/Avatar';\nimport { Image } from 'rebass';\nimport { logo_small_url } from 'mn-constants';\n\nexport interface Props {\n  SidebarBox: ReactElement;\n  HeaderBox: ReactElement;\n  SearchBox: ReactElement;\n  userImage: string;\n  userLink: string;\n  username: string;\n  name: string;\n  signOut(): () => void;\n}\nexport const WithoutSidebar: React.FC<Props> = ({\n  SidebarBox,\n  HeaderBox,\n  SearchBox,\n  children,\n  userImage,\n  userLink,\n  username,\n  name,\n  signOut\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  return (\n    <Page>\n      <SearchBar>\n        <Icon onClick={() => history.goBack()}>\n          <ChevronLeft size=\"20\" />\n        </Icon>\n        {SearchBox}\n      </SearchBar>\n      <Header>{HeaderBox}</Header>\n      <Wrapper>\n        <CenteredWrapper>{children}</CenteredWrapper>\n      </Wrapper>\n      <Footer>\n        mnn\n        <FootWrapper>\n          <Burger open={open} setOpen={setOpen} />\n          <Menu\n            username={username}\n            name={name}\n            userImage={userImage}\n            signOut={signOut}\n            open={open}\n            setOpen={setOpen}\n            Side={SidebarBox}\n          />\n        </FootWrapper>\n        <FootWrapper>\n          <Logo>\n            <Image src={logo_small_url} />\n          </Logo>\n        </FootWrapper>\n        <FootWrapper>\n          <Bavatar>\n            <Avatar src={userImage} size=\"m\" />\n          </Bavatar>\n        </FootWrapper>\n      </Footer>\n    </Page>\n  );\n};\n\nconst Logo = styled(Box)`\n  img {\n    width: 36px;\n    height: 36px;\n    border-radius: 36px;\n    margin-top: 15px;\n  }\n`;\n\nconst Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst Bavatar = styled(Box)`\n  div {\n    max-width: 36px;\n    height: 36px;\n    min-width: 36px;\n    margin: 0 auto;\n    border-radius: 36px;\n    margin-top: 15px;\n  }\n`;\n\nconst Header = styled(Box)`\n  ${media.lessThan('medium')`\n    display: none;\n  `}\n`;\n\nconst SearchBar = styled(Box)`\nheight: 75px;\nline-height: 75px;\ntext-align: center;\nbackground: ${props => props.theme.colors.appInverse}\nborder-bottom: ${props => props.theme.colors.border};\ndisplay: flex;\nalign-items: center;\ninput {\n  width: 100%;\n  border-radius: 4px;\n  max-width: 500px;\n  height: 40px;\n  margin: 0;\n  border: 0;\n  background: ${props => props.theme.colors.app};\n}\n.ais-SearchBox {\n  border: 0;\n  height: auto;\n  margin: 0;\n  width: auto;\n  margin: 0;\n  margin-right: 24px;\n  flex:1;\n}\n${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst FootWrapper = styled(Box)`\n  height: 75px;\n  line-height: 75px;\n  text-align: center;\n  ${media.lessThan('medium')`\n    background: #fff;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  `}\n`;\n\nconst Footer = styled(Box)`\n  position: fixed;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 500;\n  background: ${props => props.theme.colors.appInverse}\n  display: grid;\n  border-top: ${props => props.theme.colors.border};\n  grid-template-columns: 1fr 1fr 1fr;\n  ${media.greaterThan('medium')`\n    display: none;\n  `}\n\n`;\n\nconst Page = styled(Box)`\n  height: 100vh;\n  display: grid;\n  ${media.greaterThan('large')`\n    grid-template-rows: 50px auto;\n    row-gap: 8px;\n  `}\n  ${media.lessThan('medium')`\n    display: block;\n  `}\n`;\n\nconst Wrapper = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  display: grid;\n  \n  ${media.greaterThan('medium')`\n  grid-template-rows: auto;\n  grid-template-columns:  1fr;\n  `}\n  ${media.lessThan('medium')`\n  // height: calc(100vh - 150px);\n  overflow: overlay;\n  grid-template-rows: auto;\n  grid-template-columns:1fr;\n  column-gap: 0px;\n  margin: 0;\n  margin: 0 8px;\n  `}\n  ${media.lessThan('small')`\n    grid-template-rows: auto;\n    grid-template-columns:1fr;\n    column-gap: 0px;\n    margin: 0;\n    margin: 0 8px;\n  `}\n`;\n\nconst CenteredWrapper = styled(Box)`\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  margin-top: 16px;\n`;\n","import { useMe } from 'fe/session/useMe';\nimport { MainHeaderHOC } from 'HOC/modules/Header/Header';\nimport React, { FC, useMemo } from 'react';\nimport { Props, WithoutSidebar } from 'ui/templates/withoutSidebar';\nimport { GuestTemplate } from '../Guest/Guest';\nimport { SidebarHOC } from 'HOC/modules/Sidebar/Sidebar';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\nimport { useAnon } from '../../../fe/session/useAnon';\n\nexport interface WithoutSidebarTemplate {}\nexport const WithoutSidebarTemplate: FC<WithoutSidebarTemplate> = ({ children }) => {\n  const { me } = useMe();\n  const { logout } = useAnon();\n  const withoutSidebarProps = useMemo<null | Props>(() => {\n    const user = me?.user;\n    if (!user) {\n      return null;\n    }\n\n    const props: any = {\n      SidebarBox: <SidebarHOC />,\n      HeaderBox: <MainHeaderHOC />,\n      SearchBox: <SearchBox />,\n      signOut: logout\n    };\n    return props;\n  }, [me, logout]);\n\n  return withoutSidebarProps ? (\n    <WithoutSidebar {...withoutSidebarProps}>{children}</WithoutSidebar>\n  ) : (\n    <GuestTemplate>{children}</GuestTemplate>\n  );\n};\n","import { SettingsPage, SettingsPageTab } from 'HOC/pages/settings/SettingsPage';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport React, { FC, useMemo } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { WithoutSidebarTemplate } from 'HOC/templates/WithoutSidebar/WithoutSidebar';\nimport { RedirectAnonymousToLogin } from './wrappers/RedirectBySession';\nimport { locationHelper } from './lib/helper';\n\ninterface SettingsPageRouter {\n  tab?: string;\n}\n\nconst SettingsPageRouter: FC<RouteComponentProps<SettingsPageRouter>> = ({ match }) => {\n  const maybeTabStr = match.params.tab;\n  const tab =\n    maybeTabStr === 'preferences'\n      ? SettingsPageTab.Preferences\n      : maybeTabStr === 'logs'\n      ? SettingsPageTab.ModerationLogs\n      : maybeTabStr === 'invites'\n      ? SettingsPageTab.Invites\n      : maybeTabStr === 'instance'\n      ? SettingsPageTab.Instance\n      : maybeTabStr === 'flags'\n      ? SettingsPageTab.Flags\n      : !maybeTabStr\n      ? SettingsPageTab.General\n      : null;\n\n  const props = useMemo<SettingsPage | null>(\n    () =>\n      tab === null\n        ? null\n        : {\n            tab,\n            basePath: `/settings`\n          },\n    [tab]\n  );\n\n  if (!props) {\n    return <NotFoundHOC />;\n  }\n\n  return (\n    <RedirectAnonymousToLogin>\n      <WithoutSidebarTemplate>\n        <SettingsPage {...props} />\n      </WithoutSidebarTemplate>\n    </RedirectAnonymousToLogin>\n  );\n};\n\nexport const SettingsPageRoute: RouteProps = {\n  exact: true,\n  path: '/settings/:tab(preferences|logs|invites|instance|flags)?',\n  component: SettingsPageRouter\n};\n\ntype Tab = undefined | 'preferences' | 'logs' | 'invites' | 'instance' | 'flags';\ntype Params = {\n  tab: Tab;\n};\n// @ts-ignore\nexport const settingsLocation = locationHelper<Params, undefined>(SettingsPageRoute);\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { FormikHook } from 'ui/@types/types';\nimport Alert from '../../elements/Alert';\nimport { Input } from '@rebass/forms';\nimport Button from 'ui/elements/Button';\nimport { Box, Text, Flex } from 'rebass/styled-components';\nimport styled from '../../themes/styled';\nimport { AlertCircle } from 'react-feather';\nimport { AlertWrapper } from 'ui/modules/Modal';\nimport { INVITE_ONLY_TEXT } from 'mn-constants';\nimport media from 'styled-media-query';\nimport { Link } from 'react-router-dom';\nimport LogoContainer from 'ui/elements/Logo';\n\nlet tt = {\n  login: i18nMark('Sign in'),\n  placeholders: {\n    email: i18nMark('eg. mary@moodlers.org'),\n    password: i18nMark('Choose your password'),\n    passwordConfirm: i18nMark('Confirm your password')\n  }\n};\n\nexport interface Props {\n  formik: FormikHook<SignUpFormValues>;\n  registeredUserID?: string;\n  registeredEmail?: string;\n}\n\nexport interface SignUpFormValues {\n  email: string;\n  password: string;\n  passwordConfirm: string;\n}\n\nexport const SignUpPage: React.FC<Props> = ({ formik, registeredUserID, registeredEmail }) => {\n  return (\n    <Container>\n      {!formik.isSubmitting && formik.submitCount && registeredUserID ? (\n        <Box mt={3}>\n          <LogoContainer />\n          <Wrapper>\n            <Box>\n              <Text variant=\"suptitle\">\n                <Trans>Welcome</Trans> <b>{registeredUserID}</b>\n              </Text>\n              <Text mt={2} variant=\"text\">\n                <Trans>Please confirm your email address</Trans>\n                <b>{' ' + registeredEmail + ' '}</b>\n                <Trans>\n                  by clicking on the link we emailed you (check your spam folder if necessary).\n                </Trans>\n              </Text>\n            </Box>\n            <Browse>\n              <Link to={'/login'}>\n                <Button mt={3} variant=\"primary\">\n                  <Trans>Sign in</Trans>\n                </Button>\n              </Link>\n            </Browse>\n          </Wrapper>\n          {/* <Alert variant=\"negative\">{formik.errors.email}</Alert> */}\n        </Box>\n      ) : (\n        <LoginWrapper>\n          <LogoContainer />\n          <Header>\n            <Aware p={3}>\n              <Box mr={2}>\n                <AlertCircle size=\"20\" color=\"white\" />\n              </Box>\n              <Text variant=\"suptitle\">{INVITE_ONLY_TEXT}</Text>\n            </Aware>\n          </Header>\n          <Flex mt={2}>\n            <FormWrapper onSubmit={formik.handleSubmit}>\n              <Box>\n                <LabelStyled>\n                  <Trans>Email</Trans>\n                </LabelStyled>\n                <Input\n                  placeholder={tt.placeholders.email}\n                  name=\"email\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                />\n                {formik.errors.email && (\n                  <AlertWrapper>\n                    <Alert variant=\"negative\">{formik.errors.email}</Alert>\n                  </AlertWrapper>\n                )}\n              </Box>\n              <Box mt={3}>\n                <LabelStyled>\n                  <Trans>Password</Trans>\n                </LabelStyled>\n                <Input\n                  placeholder={tt.placeholders.password}\n                  name=\"password\"\n                  type=\"password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                />\n                {formik.errors.password && (\n                  <AlertWrapper>\n                    <Alert variant=\"negative\">{formik.errors.password}</Alert>\n                  </AlertWrapper>\n                )}\n              </Box>\n              <Box mt={3}>\n                <LabelStyled>\n                  <Trans>Confirm password</Trans>\n                </LabelStyled>\n                <Input\n                  placeholder={tt.placeholders.passwordConfirm}\n                  name=\"passwordConfirm\"\n                  type=\"password\"\n                  value={formik.values.passwordConfirm}\n                  onChange={formik.handleChange}\n                />\n                {formik.errors.passwordConfirm && (\n                  <AlertWrapper>\n                    <Alert variant=\"negative\">{formik.errors.passwordConfirm}</Alert>\n                  </AlertWrapper>\n                )}\n              </Box>\n              <Box\n                mt={3}\n                css={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n              >\n                <Button\n                  variant=\"primary\"\n                  isSubmitting={formik.isSubmitting}\n                  isDisabled={formik.isSubmitting}\n                  type=\"submit\"\n                >\n                  <Trans>Sign up</Trans>\n                </Button>\n                <LinkWrapper>\n                  <Trans>You have account </Trans>\n                  <Link to={'/login'} className={'ml-3'}>\n                    <Trans>Sign in</Trans>\n                  </Link>\n                </LinkWrapper>\n              </Box>\n            </FormWrapper>\n          </Flex>\n        </LoginWrapper>\n      )}\n    </Container>\n  );\n};\nexport default SignUpPage;\n\nconst Browse = styled(Box)`\n  text-align: center;\n  margin-top: 10px;\n`;\nconst LinkWrapper = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  min-width: 180px;\n`;\nconst Wrapper = styled.div`\n  background: #fff;\n  border-radius: 4px;\n  padding: 30px 20px;\n  text-align: center;\n  height: fit-content;\n`;\n\nconst LoginWrapper = styled(Box)`\n  ${media.lessThan('medium')`\n    // display: grid;\n    // grid-template-columns: 1fr;\n    padding: 16px\n  `};\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 900px;\n  padding-bottom: 50px;\n`;\n\nconst LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 6px;\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n`;\n\nconst FormWrapper = styled.form`\n  margin: 0;\n  flex: 1;\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  height: inherit;\n  border: 1px solid #dddfe2;\n  text-align: left;\n  height: fit-content;\n  padding: 16px;\n`;\n\n// const Right = styled(Box)`\n//   .extra {\n//     width: 100%;\n//     margin-right: 0;\n//   }\n// `;\n\n// const Footer = styled(Box)`\n//   border-top: ${props => props.theme.colors.border};\n//   padding-top: 24px;\n//   & ul {\n//     list-style-type: none;\n//     margin: 0;\n//     padding: 0;\n//     text-align: center;\n//     margin: 0 auto;\n//     justify-content: center;\n//     align-items: center;\n//     display: flex;\n//     flex: 1;\n//     ${clearFix()}\n//     & li {\n//       float: left;\n//       margin-right: 16px;\n//       & a {\n//         color: rgba(0, 0, 0, 0.45);\n//         text-decoration: none;\n//         &:hover {\n//           text-decoration: underline;\n//         }\n//       }\n//     }\n//   }\n// `;\n\nconst Aware = styled(Flex)<{ green: boolean }>`\n  background: ${props => (props.green ? '#546d4f' : props.theme.colors.secondary)};\n  border-radius: 4px;\n  align-items: center;\n  div {\n    color: white;\n  }\n`;\n","import { useFormik } from 'formik';\nimport React, { FC, useEffect, useMemo } from 'react';\nimport SignUpPage, { SignUpFormValues, Props } from 'ui/pages/signUp';\nimport * as Yup from 'yup';\nimport { useAnon } from 'fe/session/useAnon';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { toast } from 'react-toastify';\n\nconst initialValues: SignUpFormValues = {\n  email: '',\n  password: '',\n  passwordConfirm: ''\n};\nexport interface SignUpPageHOC {}\nconst signUpPageTitle = t`Sign Up`;\n\nexport const SignUpPageHOC: FC<SignUpPageHOC> = () => {\n  usePageTitle(signUpPageTitle);\n  const { signUp, signUpStatus } = useAnon();\n  const validationSchema: Yup.ObjectSchema<SignUpFormValues> = Yup.object<SignUpFormValues>({\n    email: Yup.string()\n      .max(50)\n      .required(),\n    password: Yup.string()\n      .min(10)\n      .max(50)\n      .required(),\n    passwordConfirm: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required()\n  });\n\n  const formik = useFormik<SignUpFormValues>({\n    initialValues,\n    enableReinitialize: true,\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema,\n    onSubmit: regInput =>\n      signUp({\n        email: regInput.email,\n        password: regInput.password\n      })\n  });\n\n  useEffect(() => {\n    if (signUpStatus.error?.graphQLErrors.length) {\n      toast.error(signUpStatus.error?.graphQLErrors[0].message);\n    }\n  }, [signUpStatus.error]);\n\n  const props = useMemo<Props>(\n    () =>\n      signUpStatus.called && signUpStatus.data?.signup\n        ? {\n            formik,\n            registeredUserID: signUpStatus.data?.signup,\n            registeredEmail: formik.values.email\n          }\n        : {\n            formik\n          },\n    [formik, signUpStatus.called, signUpStatus.data]\n  );\n\n  return <SignUpPage {...props} />;\n};\n","import { SignUpPageHOC } from 'HOC/pages/signUp/SignUpPage';\nimport React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\n\ninterface SignupPageRouter {}\nconst SignupPageRouter: FC<RouteComponentProps<SignupPageRouter>> = ({\n  match\n}) => {\n  return (\n    <GuestTemplate withoutHeader>\n      <SignUpPageHOC />\n    </GuestTemplate>\n  );\n};\n\nexport const SignupPageRoute: RouteProps = {\n  exact: true,\n  path: '/signup',\n  component: SignupPageRouter\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { CreateNewUserRoute } from 'routes/CreateNewUserRoute';\nimport { ConfirmEmailRoute } from 'routes/ConfirmEmailPageRoute';\nimport { CreateNewPasswordPageRoute } from 'routes/CreateNewPasswordPageRoute';\nimport { DiscoverPageRoute } from 'routes/DiscoverPageRoute';\nimport { InventoryResourceItemRouter } from 'routes/InventoryResourceItemRouter';\nimport { HomePageRoute } from 'routes/HomePageRoute';\nimport { LoginPageRoute } from 'routes/LoginPageRoute';\nimport { MapsPageRoute } from 'routes/MapsPageRoute';\nimport { ResetPasswordPageRoute } from 'routes/ResetPasswordPageRoute';\nimport { SettingsPageRoute } from 'routes/SettingsPageRoute';\nimport { SignupPageRoute } from 'routes/SignupPageRoute';\nimport { UserPageRoute } from 'routes/UserPageRoute';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\n\nexport const Router: React.FC = () => {\n  return (\n    <Switch>\n      <Route {...UserPageRoute} />\n      <Route {...SettingsPageRoute} />\n      <Route {...CreateNewUserRoute} />\n      <Route {...InventoryResourceItemRouter} />\n      <Route {...DiscoverPageRoute} />\n      <Route {...CreateNewPasswordPageRoute} />\n      <Route {...ResetPasswordPageRoute} />\n      <Route {...LoginPageRoute} />\n      <Route {...SignupPageRoute} />\n      <Route {...ConfirmEmailRoute} />\n      <Route {...HomePageRoute} />\n      <Route {...MapsPageRoute} />\n      <Route component={NotFoundHOC} />\n    </Switch>\n  );\n};\n","import * as React from 'react';\nimport Alert from 'ui/elements/Alert/index';\nimport { X } from 'react-feather';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass';\n\nexport const TopMessage: React.FC = () => {\n  const [show, setShow] = React.useState(true);\n  return show ? (\n    <AlertWrap>\n      <Alert variant=\"warning\">\n        <div style={{ textAlign: 'center' }}>\n          This site is currently in active development. We are looking forward to reading your\n          feedback and ideas in our{' '}\n          <a\n            href=\"https://github.com/reflow-project/weloop/issues\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Issues Tracker\n          </a>\n          <span\n            style={{\n              cursor: 'pointer',\n              position: 'absolute',\n              top: '10px',\n              right: '10px'\n            }}\n            onClick={() => setShow(false)}\n          >\n            <X size={16} />\n          </span>\n        </div>\n      </Alert>\n    </AlertWrap>\n  ) : null;\n};\n\nconst AlertWrap = styled(Box)`\n  position: relative;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 4010;\n`;\n","import * as React from 'react';\nimport ThemeProvider from 'ui/styleguide/Wrapper';\nimport { Router } from './Router';\nimport { TopMessage } from './topMessage';\n\nexport const App: React.FC = () => {\n  return (\n    <ThemeProvider>\n      <>\n        <TopMessage />\n        <Router />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import algoliasearch from 'algoliasearch/lite';\nimport qs from 'qs';\nimport React from 'react';\nimport { InstantSearch } from 'react-instantsearch-dom';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { LocationDescriptorObject } from 'history';\nimport { mothershipCreds } from '../../mn-constants';\nconst createURL = (searchState: any) => `?${qs.stringify(searchState)}`;\n\nconst searchStateToUrl = (searchState: any) => `/search/${createURL(searchState)}`;\n\nconst urlToSearchState = (search: string) => qs.parse(search.slice(1));\nconst DEBOUNCE_TIME = 500;\nconst searchClient =\n  mothershipCreds &&\n  mothershipCreds.appId &&\n  mothershipCreds.apiKey &&\n  algoliasearch(mothershipCreds.appId, mothershipCreds.apiKey);\n\nexport const ProvideAlgoliaContext: React.FC = ({ children }) => {\n  const { push } = useHistory();\n  const location = useLocation();\n  const backLoc = React.useRef<LocationDescriptorObject | undefined>();\n  const searching = React.useRef(isSearchLocation(location.pathname));\n  const [searchState, setSearchState] = React.useState(urlToSearchState(location.search));\n  React.useEffect(() => {\n    // console.log(\n    //   '\\nsearchState',\n    //   searchState,\n    //   '\\nlocation:',\n    //   location,\n    //   '\\nbackLoc:',\n    //   backLoc.current,\n    //   '\\nisInSearch:',\n    //   searching.current\n    // );\n    const setUrlTO = setTimeout(() => {\n      if (searching.current && !isSearchLocation(location.pathname)) {\n        backLoc.current = undefined;\n        searching.current = false;\n        setSearchState(EMPTY_QUERY);\n      } else if (searchState.query) {\n        backLoc.current =\n          backLoc.current || (isSearchLocation(location.pathname) ? undefined : location);\n        searching.current = true;\n        push(searchStateToUrl(searchState));\n      } else if (isSearchLocation(location.pathname)) {\n        if (backLoc.current) {\n          push(backLoc.current);\n        } else {\n          push('/');\n        }\n        backLoc.current = undefined;\n      }\n    }, DEBOUNCE_TIME);\n    return () => {\n      clearTimeout(setUrlTO);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchState, location.pathname, location.hash, location.search, push]);\n  const handleSetSearchState = React.useCallback(\n    newSearchState => {\n      // console.table({ newSearchState, searchState });\n      if (\n        'query' in newSearchState &&\n        // eslint-disable-next-line eqeqeq\n        (newSearchState?.query != searchState?.query ||\n          // eslint-disable-next-line eqeqeq\n          newSearchState?.refinementList?.index_type != searchState?.refinementList?.index_type ||\n          // eslint-disable-next-line eqeqeq\n          newSearchState?.page != searchState?.page)\n      ) {\n        setSearchState(newSearchState);\n      }\n    },\n    [searchState]\n  );\n  return searchClient && mothershipCreds ? (\n    <InstantSearch\n      searchState={searchState}\n      onSearchStateChange={handleSetSearchState}\n      searchClient={searchClient}\n      refresh={true}\n      indexName={mothershipCreds.indexName || ''}\n      createURL={createURL}\n    >\n      {children}\n    </InstantSearch>\n  ) : (\n    <>{children}</>\n  );\n};\nconst isSearchLocation = (locationPathname: string) => locationPathname === '/search/';\nconst EMPTY_QUERY = { query: '' };\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ProvideAlgoliaContext } from './algolia';\nimport { ProvideLocalizationCtx } from './localizationCtx';\nimport { ProvidePageCtx } from './pageCtx';\n\ninterface Props {\n  children: React.ReactNode;\n}\nexport const ProvideContexts: React.FC<Props> = ({ children }) => {\n  return (\n    <ProvideLocalizationCtx>\n      <ProvidePageCtx>\n        <BrowserRouter>\n          <ProvideAlgoliaContext>{children}</ProvideAlgoliaContext>\n        </BrowserRouter>\n      </ProvidePageCtx>\n    </ProvideLocalizationCtx>\n  );\n};\n","import { IS_DEV, PUBLIC_URL } from './mn-constants';\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (!IS_DEV && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Sentry from '@sentry/browser';\n// import { MngErrorLink } from 'fe/lib/graphql/ctx';\nimport * as React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport ReactDOM from 'react-dom';\nimport { Slide, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { createGlobalStyle } from 'styled-components';\nimport media from 'styled-media-query';\nimport getApolloClient from './apollo/client';\nimport App from './containers/App/App';\nimport { ProvideContexts } from './context/global';\nimport * as K from './mn-constants';\nimport { colors, typography } from './mn-constants';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createLocalSessionKVStorage } from './util/keyvaluestore/localSessionStorage';\n\nK.SENTRY_KEY &&\n  Sentry.init({\n    dsn: K.SENTRY_KEY\n  });\n\nrun();\nasync function run() {\n  const Global = createGlobalStyle`\n      body, html {\n          border: 0;\n          margin: 0;\n          padding: 0;\n          width: 100%;\n          height: 100%;\n          font-family: ${typography.type.primary} !important;\n      }\n\n      * {\n        box-sizing: border-box;\n      }\n      input, textarea {\n        ::placeholder {\n          font-family: ${typography.type.primary} !important;\n        }\n      }\n      h1 {\n        font-size: 50px;\n      }\n      h2 {\n        font-size: 30px;\n      }\n      h3 {\n        font-size: 18px;\n      }\n      p {\n        font-size: 18px;\n      }\n\n      body {\n        background: ${colors.app};\n        .ais-SearchBox {\n          border-radius: 4px;\n          border: ${colors.border}\n          height: 34px;\n          width: 380px;\n          background: ${colors.app}\n          input {\n            border: none;\n            margin: 0 !important; \n            border-radius: 4px;\n            text-indent: 30px;\n            padding: 0;\n            height: 32px;\n            background: ${colors.app};\n          }\n        }\n        .ais-InstantSearch__root { \n          display: flex;\n        width: 100%;\n        }\n      }\n\n      .Toastify__toast--success{\n        background-color: ${colors.secondary};\n      }\n\n      .Toastify__toast-container--top-right{\n        top:60px !important;\n        ${media.lessThan('480px')` \n          width: 90vw !important;\n          margin: 0 auto; \n        `}; \n    }\n\n    input, textarea{\n      &:focus::placeholder{\n        color: transparent;\n      }\n    }\n\n    input:focus::-webkit-input-placeholder, textarea:focus::-webkit-input-placeholder { color:transparent; }\n    input:focus:-moz-placeholder, textarea:focus:-moz-placeholder { color:transparent; } /* FF 4-18 */\n    input:focus::-moz-placeholder, textarea:focus::-moz-placeholder { color:transparent; } /* FF 19+ */\n    input:focus:-ms-input-placeholder, textarea:focus:-ms-input-placeholder { color:transparent; } /* IE 10+ */\n  `;\n  const createLocalKVStore = createLocalSessionKVStorage('local');\n\n  const apolloClient = await getApolloClient({\n    localKVStore: createLocalKVStore('APOLLO#'),\n    appLinks: []\n  });\n\n  const ApolloApp = () => (\n    <ApolloProvider client={apolloClient.client}>\n      <ProvideContexts>\n        <Global />\n        <ToastContainer hideProgressBar transition={Slide} autoClose={3000} newestOnTop />\n        <App />\n      </ProvideContexts>\n    </ApolloProvider>\n  );\n\n  ReactDOM.render(<ApolloApp />, document.getElementById('root'));\n\n  registerServiceWorker();\n}\n"],"sourceRoot":""}